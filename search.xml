<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[SSO dengan Spring Security]]></title>
      <url>http://ciazhar.github.io/2017/05/27/pemrograman/spring/4-SSO-dengan-Spring-Security/</url>
      <content type="html"><![CDATA[<h1 id="Aplikasi-Authorization-Sever-dengan-Spring-Security"><a href="#Aplikasi-Authorization-Sever-dengan-Spring-Security" class="headerlink" title="Aplikasi Authorization Sever dengan Spring Security"></a>Aplikasi Authorization Sever dengan Spring Security</h1><p>#Setup Development Environment</p>
<ul>
<li>JDK 1.8</li>
<li>Tomcat Sever</li>
<li>MySQL</li>
</ul>
<p>#Teknologi yang digunakan</p>
<ul>
<li>Spring Boot</li>
<li>Spring Security</li>
<li>AngularJS</li>
</ul>
<p>#Setup Project</p>
<ul>
<li><p>Buka browser masukkan url</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://start.spring.io/</div></pre></td></tr></table></figure>
</li>
<li><p>Masukkan data, sesuaikan dengan dependency yang dibutuhkan(web, security,oauth2) lalu download</p>
</li>
<li>Add project ke text editor</li>
</ul>
<p>Note :<br>Pada Project tersebut terdapat 3 buah file utama yaitu :</p>
<ul>
<li>pom.xml (konfigurasi maven)</li>
<li>application.properties (konfigurasi database)</li>
<li>Application.java (main class)</li>
</ul>
<p>#Simple Oauth Facebook</p>
<ul>
<li><p>Konfigurasi Oauth (application.yml)<br>Note : application.properties diganti application.yml</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">security:</div><div class="line">  oauth2:</div><div class="line">    client:</div><div class="line">      clientId: 233668646673605</div><div class="line">      clientSecret: 33b17e044ee6a4fa383f46ec6e28ea1d</div><div class="line">      accessTokenUri: https://graph.facebook.com/oauth/access_token</div><div class="line">      userAuthorizationUri: https://www.facebook.com/dialog/oauth</div><div class="line">      tokenName: oauth_token</div><div class="line">      authenticationScheme: query</div><div class="line">      clientAuthenticationScheme: form</div><div class="line">    resource:</div><div class="line">      userInfoUri: https://graph.facebook.com/me</div></pre></td></tr></table></figure>
</li>
<li><p>Kasih anotasi @EnableOAuth2Sso (Aplikasi.java)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">@EnableOAuth2Sso</div><div class="line">@SpringBootApplication</div><div class="line">public class Aplikasi &#123;</div><div class="line">	public static void main(String[] args) &#123;</div><div class="line">		SpringApplication.run(Aplikasi.class, args);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>Bikin UI jika otorisari succes(resource/static/index.html)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">&lt;!doctype html&gt;</div><div class="line">&lt;html lang=&quot;en&quot;&gt;</div><div class="line">&lt;head&gt;</div><div class="line">    &lt;meta charset=&quot;utf-8&quot; /&gt;</div><div class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot; /&gt;</div><div class="line">    &lt;title&gt;Demo&lt;/title&gt;</div><div class="line">    &lt;meta name=&quot;description&quot; content=&quot;&quot; /&gt;</div><div class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot; /&gt;</div><div class="line">    &lt;base href=&quot;/&quot; /&gt;</div><div class="line">    &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot;</div><div class="line">          href=&quot;/webjars/bootstrap/css/bootstrap.min.css&quot; /&gt;</div><div class="line">    &lt;script type=&quot;text/javascript&quot; src=&quot;/webjars/jquery/jquery.min.js&quot;&gt;&lt;/script&gt;</div><div class="line">    &lt;script type=&quot;text/javascript&quot;</div><div class="line">            src=&quot;/webjars/bootstrap/js/bootstrap.min.js&quot;&gt;&lt;/script&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line">  &lt;h1&gt;SSO sukses&lt;/h1&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="Bikin-UI-untuk-login"><a href="#Bikin-UI-untuk-login" class="headerlink" title="Bikin UI untuk login"></a>Bikin UI untuk login</h1><ul>
<li><p>Bikin UI (resource/static/index.html)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">...</div><div class="line">&lt;body ng-app=&quot;app&quot; ng-controller=&quot;home as home&quot;&gt;</div><div class="line">  &lt;h1&gt;Login&lt;/h1&gt;</div><div class="line">  &lt;div class=&quot;container&quot; ng-show=&quot;!home.authenticated&quot;&gt;</div><div class="line">      With Facebook: &lt;a href=&quot;/login&quot;&gt;click here&lt;/a&gt;</div><div class="line">  &lt;/div&gt;</div><div class="line">  &lt;div class=&quot;container&quot; ng-show=&quot;home.authenticated&quot;&gt;</div><div class="line">      &lt;h1&gt;SSO berhasil&lt;/h1&gt;</div><div class="line">      Logged in as: &lt;span ng-bind=&quot;home.user&quot;&gt;&lt;/span&gt;</div><div class="line">  &lt;/div&gt;</div><div class="line">  &lt;script type=&quot;text/javascript&quot; src=&quot;/webjars/angularjs/angular.min.js&quot;&gt;&lt;/script&gt;</div><div class="line">  &lt;script type=&quot;text/javascript&quot;&gt;</div><div class="line">      angular.module(&quot;app&quot;, []).controller(&quot;home&quot;, function($http) &#123;</div><div class="line">          var self = this;</div><div class="line">          $http.get(&quot;/user&quot;).success(function(data) &#123;</div><div class="line">              self.user = data.userAuthentication.details.name;</div><div class="line">              self.authenticated = true;</div><div class="line">          &#125;).error(function() &#123;</div><div class="line">              self.user = &quot;N/A&quot;;</div><div class="line">              self.authenticated = false;</div><div class="line">          &#125;);</div><div class="line">      &#125;);</div><div class="line">  &lt;/script&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">...</div></pre></td></tr></table></figure>
</li>
<li><p>Bikin RestController(java/domain/controllers/IndexController.java)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">@RestController</div><div class="line">public class IndexController &#123;</div><div class="line">    @RequestMapping(&quot;/user&quot;)</div><div class="line">    public Principal user(Principal principal) &#123;</div><div class="line">        return principal;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>Bikin Konfigurasi Security(java/domain/config/KonfigurasiSecurity.java)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">@Configurable</div><div class="line">@EnableOAuth2Sso</div><div class="line">@EnableWebSecurity</div><div class="line">public class KonfigurasiSecurity extends WebSecurityConfigurerAdapter &#123;</div><div class="line">    @Override</div><div class="line">    protected void configure(HttpSecurity http) throws Exception &#123;</div><div class="line">        http.antMatcher(&quot;/**&quot;).authorizeRequests().antMatchers(&quot;/&quot;, &quot;/login**&quot;, &quot;/webjars/**&quot;).permitAll().anyRequest()</div><div class="line">                .authenticated();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>#Pretty print JSON</p>
<ul>
<li>Konfigurasi YAML (resources/application.yml)<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">spring:</div><div class="line">  jackson:</div><div class="line">    serialization:</div><div class="line">      INDENT_OUTPUT: true</div></pre></td></tr></table></figure>
</li>
</ul>
<p>#Custom Logout</p>
<ul>
<li><p>Konfigurasi client Side (resources/static/index.html)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">angular</div><div class="line">.module(&quot;app&quot;, [])</div><div class="line">...</div><div class="line">.controller(&quot;home&quot;, function($http, $location) &#123;</div><div class="line">  var self = this;</div><div class="line">  ...</div><div class="line">  self.logout = function() &#123;</div><div class="line">    $http.post(&apos;/logout&apos;, &#123;&#125;).success(function() &#123;</div><div class="line">      self.authenticated = false;</div><div class="line">      $location.path(&quot;/&quot;);</div><div class="line">    &#125;).error(function(data) &#123;</div><div class="line">      console.log(&quot;Logout failed&quot;)</div><div class="line">      self.authenticated = false;</div><div class="line">    &#125;);</div><div class="line">  &#125;;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
</li>
<li><p>Konfigurasi Server Side (java/domain/config/KonfigurasiSecurity.java)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">.and()</div><div class="line">.logout().logoutSuccessUrl(&quot;/&quot;).permitAll()</div><div class="line">.and()</div><div class="line">.csrf().csrfTokenRepository(CookieCsrfTokenRepository.withHttpOnlyFalse());</div></pre></td></tr></table></figure>
</li>
</ul>
<p>#Memisahkan Otorisasi Facebook dari Spring Security</p>
<ul>
<li><p>Mengubah anotasi @EnableOAuth2Sso dengan @EnableOAuth2Client (java/domain/config/KonfigurasiSecurity.java)</p>
<p>   Sejatinya adalah aplikasi yang telah kita buat tadi berdiri di persis di atas Spring Security. Hal ini dikarenakan kita menggunakan anotasi @EnableOAuth2Sso. Anotasi tersebut sendiri terdiri dari 2 fitur yaitu OAuth2 client dan Oauth2 authentification.<br>   Untuk OAuth2 client dia dapat berinteraksi dengan resource OAuth2 yang disediakan oleh Authorization Server (dalam konteks ini facebook Authorization Server).<br>   Sedangkan OAuth2 authentification dia berfungsi untuk menyelaraskan aplikasi kita dengan REST milik Spring Security<br>   Jadi ketika 2 fitur itu digunakan untuk SSO ke facebook saja, maka kita hanya dapat SSO ke facebook saja<br>   Oleh karena itu kita akan mengganti anotasi @EnableOAuth2Sso dengan @EnableOAuth2Client</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">@Configurable</div><div class="line">@EnableOAuth2Client</div><div class="line">@EnableWebSecurity</div><div class="line">public class KonfigurasiSecurity extends WebSecurityConfigurerAdapter &#123;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>Membuat Filter authentification(java/domain/config/KonfigurasiSecurity.java)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">@Autowired</div><div class="line">OAuth2ClientContext oauth2ClientContext;</div><div class="line"></div><div class="line">///Bean untuk memberitahu filter tentang registrasi client dengan facebook</div><div class="line">@Bean</div><div class="line">@ConfigurationProperties(&quot;facebook.client&quot;)</div><div class="line">public AuthorizationCodeResourceDetails facebook() &#123;</div><div class="line">  return new AuthorizationCodeResourceDetails();</div><div class="line">&#125;</div><div class="line"></div><div class="line">///Bean untuk memberitahu filter tentang dimana user end point di facebook</div><div class="line">@Bean</div><div class="line">@ConfigurationProperties(&quot;facebook.resource&quot;)</div><div class="line">public ResourceServerProperties facebookResource() &#123;</div><div class="line">  return new ResourceServerProperties();</div><div class="line">&#125;</div><div class="line"></div><div class="line">private Filter ssoFilter() &#123;</div><div class="line">  OAuth2ClientAuthenticationProcessingFilter facebookFilter = new OAuth2ClientAuthenticationProcessingFilter(&quot;/login/facebook&quot;);</div><div class="line">  OAuth2RestTemplate facebookTemplate = new OAuth2RestTemplate(facebook(), oauth2ClientContext);</div><div class="line">  facebookFilter.setRestTemplate(facebookTemplate);</div><div class="line">  UserInfoTokenServices tokenServices = new UserInfoTokenServices(facebookResource().getUserInfoUri(), facebook().getClientId());</div><div class="line">  tokenServices.setRestTemplate(facebookTemplate);</div><div class="line">  facebookFilter.setTokenServices(tokenServices);</div><div class="line">  return facebookFilter;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">@Override</div><div class="line">protected void configure(HttpSecurity http) throws Exception &#123;</div><div class="line">  http.antMatcher(&quot;/**&quot;)</div><div class="line">  ...</div><div class="line">  .addFilterBefore(ssoFilter(), BasicAuthenticationFilter.class);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>Mengubah konfigurasi OAuth2(resources/application.yml)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">facebook:</div><div class="line">  client:</div><div class="line">    clientId: 233668646673605</div><div class="line">    clientSecret: 33b17e044ee6a4fa383f46ec6e28ea1d</div><div class="line">    accessTokenUri: https://graph.facebook.com/oauth/access_token</div><div class="line">    userAuthorizationUri: https://www.facebook.com/dialog/oauth</div><div class="line">    tokenName: oauth_token</div><div class="line">    authenticationScheme: query</div><div class="line">    clientAuthenticationScheme: form</div><div class="line">  resource:</div><div class="line">    userInfoUri: https://graph.facebook.com/me      </div><div class="line">logging:</div><div class="line">  level:</div><div class="line">    org.springframework.security: DEBUG</div></pre></td></tr></table></figure>
</li>
<li><p>Ganti URL pada UI(resources/static/index.html)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;div class=&quot;container&quot; ng-show=&quot;!home.authenticated&quot;&gt;</div><div class="line">  &lt;div&gt;</div><div class="line">  With Facebook: &lt;a href=&quot;/login/facebook&quot;&gt;click here&lt;/a&gt;</div><div class="line">  &lt;/div&gt;</div><div class="line">&lt;/div&gt;</div></pre></td></tr></table></figure>
</li>
<li><p>Buat Konfigurasi untuk Redirect(java/domain/config/KonfigurasiSecurity.java)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">@Bean</div><div class="line">public FilterRegistrationBean oauth2ClientFilterRegistration(OAuth2ClientContextFilter filter) &#123;</div><div class="line">  FilterRegistrationBean registration = new FilterRegistrationBean();</div><div class="line">  registration.setFilter(filter);</div><div class="line">  registration.setOrder(-100);</div><div class="line">  return registration;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>#Tambah Authentification untuk github</p>
<ul>
<li><p>Edit UI (resources/static/index.html)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">With Github: &lt;a href=&quot;/login/github&quot;&gt;click here&lt;/a&gt;</div></pre></td></tr></table></figure>
</li>
<li><p>Tambah Konfigurasi untuk Github(java/domain/config/KonfigurasiSecurity.java)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">@Bean</div><div class="line">@ConfigurationProperties(&quot;github.client&quot;)</div><div class="line">public AuthorizationCodeResourceDetails github() &#123;</div><div class="line">    return new AuthorizationCodeResourceDetails();</div><div class="line">&#125;</div><div class="line"></div><div class="line">@Bean</div><div class="line">@ConfigurationProperties(&quot;github.resource&quot;)</div><div class="line">public ResourceServerProperties githubResource() &#123;</div><div class="line">    return new ResourceServerProperties();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>Edit Filter(java/domain/config/KonfigurasiSecurity.java)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">private Filter ssoFilter() &#123;</div><div class="line">    CompositeFilter filter = new CompositeFilter();</div><div class="line">    List&lt;Filter&gt; filters = new ArrayList&lt;&gt;();</div><div class="line">    OAuth2ClientAuthenticationProcessingFilter facebookFilter = new OAuth2ClientAuthenticationProcessingFilter(&quot;/login/facebook&quot;);</div><div class="line">    OAuth2RestTemplate facebookTemplate = new OAuth2RestTemplate(facebook(), oauth2ClientContext);</div><div class="line">    facebookFilter.setRestTemplate(facebookTemplate);</div><div class="line">    UserInfoTokenServices tokenServices = new UserInfoTokenServices(facebookResource().getUserInfoUri(), facebook().getClientId());</div><div class="line">    tokenServices.setRestTemplate(facebookTemplate);</div><div class="line">    facebookFilter.setTokenServices(tokenServices);</div><div class="line">    filters.add(facebookFilter);</div><div class="line">    OAuth2ClientAuthenticationProcessingFilter githubFilter = new OAuth2ClientAuthenticationProcessingFilter(&quot;/login/github&quot;);</div><div class="line">    OAuth2RestTemplate githubTemplate = new OAuth2RestTemplate(github(), oauth2ClientContext);</div><div class="line">    githubFilter.setRestTemplate(githubTemplate);</div><div class="line">    tokenServices = new UserInfoTokenServices(githubResource().getUserInfoUri(), github().getClientId());</div><div class="line">    tokenServices.setRestTemplate(githubTemplate);</div><div class="line">    githubFilter.setTokenServices(tokenServices);</div><div class="line">    filters.add(githubFilter);</div><div class="line">    filter.setFilters(filters);</div><div class="line">    return filter;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>Tambah Konfigurasi OAuth2 Github(resources/application.yml)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">github:</div><div class="line">  client:</div><div class="line">    clientId: bd1c0a783ccdd1c9b9e4</div><div class="line">    clientSecret: 1a9030fbca47a5b2c28e92f19050bb77824b5ad1</div><div class="line">    accessTokenUri: https://github.com/login/oauth/access_token</div><div class="line">    userAuthorizationUri: https://github.com/login/oauth/authorize</div><div class="line">    clientAuthenticationScheme: form</div><div class="line">  resource:</div><div class="line">    userInfoUri: https://api.github.com/user</div></pre></td></tr></table></figure>
</li>
</ul>
<p>#Membuat authorization server</p>
<ul>
<li><p>Merapikan ssoFilter</p>
<p>Note : kita akan membagi menjadi 2 agar terlihat rapi   </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">private Filter ssoFilter() &#123;</div><div class="line">		CompositeFilter filter = new CompositeFilter();</div><div class="line">		List&lt;Filter&gt; filters = new ArrayList&lt;&gt;();</div><div class="line">		filters.add(ssoFilter(facebook(), &quot;/login/facebook&quot;));</div><div class="line">		filters.add(ssoFilter(github(), &quot;/login/github&quot;));</div><div class="line">		filter.setFilters(filters);</div><div class="line">		return filter;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">private Filter ssoFilter(ClientResources client, String path) &#123;</div><div class="line">    OAuth2ClientAuthenticationProcessingFilter filter = new OAuth2ClientAuthenticationProcessingFilter(</div><div class="line">            path);</div><div class="line">    OAuth2RestTemplate template = new OAuth2RestTemplate(client.getClient(), oauth2ClientContext);</div><div class="line">    filter.setRestTemplate(template);</div><div class="line">    UserInfoTokenServices tokenServices = new UserInfoTokenServices(</div><div class="line">            client.getResource().getUserInfoUri(), client.getClient().getClientId());</div><div class="line">    tokenServices.setRestTemplate(template);</div><div class="line">    filter.setTokenServices(tokenServices);</div><div class="line">    return filter;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>membuat class ClientResources untuk mengatur otorisasi client dan akses resource yang pada tadinya terpisah</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">class ClientResources &#123;</div><div class="line"></div><div class="line">  @NestedConfigurationProperty</div><div class="line">  private AuthorizationCodeResourceDetails client = new AuthorizationCodeResourceDetails();</div><div class="line"></div><div class="line">  @NestedConfigurationProperty</div><div class="line">  private ResourceServerProperties resource = new ResourceServerProperties();</div><div class="line"></div><div class="line">  public AuthorizationCodeResourceDetails getClient() &#123;</div><div class="line">    return client;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  public ResourceServerProperties getResource() &#123;</div><div class="line">    return resource;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li></li>
</ul>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Melihat data User yang sedang Login menggunakan Spring Security]]></title>
      <url>http://ciazhar.github.io/2017/05/27/pemrograman/spring/4-melihat-data-user-login-dengan-spring-security-md/</url>
      <content type="html"><![CDATA[<p>Untuk dapat melihar user yang sedang login dapat menggunakan <code>Authentication</code> yang nilainya akan diinjek oleh spring security. Berikut contoh kodenya :<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@RestController</span></div><div class="line"><span class="meta">@RequestMapping</span>(<span class="string">"api/user"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/current"</span>)</div><div class="line">    <span class="function"><span class="keyword">public</span> Authentication <span class="title">currentUser</span><span class="params">(Authentication authentication)</span></span>&#123;</div><div class="line">        <span class="keyword">return</span> authentication;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Mendebug Spring Security]]></title>
      <url>http://ciazhar.github.io/2017/05/27/pemrograman/spring/4-debug-spring-security/</url>
      <content type="html"><![CDATA[<p>Spring security memberikan fasilitas untuk mendebug. Untuk menggunakannya cukup dengan menambahkan anotasi <code>@EnableWebSecurity(debug = true)</code> pada file KonfigurasiSecurity.</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@EnableWebSecurity</span>(debug = <span class="keyword">true</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">KonfigurasiSecurity</span> <span class="keyword">extends</span> <span class="title">WebSecurityConfigurerAdapter</span></span>&#123;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Debug ini hanya disarankan pada tahap development saja.</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Otorisasi methode dengan Spring Security]]></title>
      <url>http://ciazhar.github.io/2017/05/27/pemrograman/spring/4-otorisasi-method-dengan-spring-security/</url>
      <content type="html"><![CDATA[<p>Require :</p>
<ul>
<li>otorisasi login dengan spring security</li>
<li>crud</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@EnableGlobalMethodSecurity</span>(prePostEnabled = <span class="keyword">true</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">KonfigurasiSecurity</span> <span class="keyword">extends</span> <span class="title">WebSecurityConfigurerAdapter</span></span>&#123;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@RestController</span></div><div class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/api/harga"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HargaRestController</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Autowired</span> <span class="keyword">private</span> HargaDao hargaDao;</div><div class="line"></div><div class="line">    <span class="meta">@PreAuthorize</span>(<span class="string">"hasAuthority('HARGA_EDIT')"</span>)</div><div class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/"</span>)</div><div class="line">    <span class="function"><span class="keyword">public</span> Page&lt;Harga&gt; <span class="title">daftarHarga</span><span class="params">(Pageable page)</span></span>&#123;</div><div class="line">        <span class="keyword">return</span> hargaDao.findAll(page);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Integrasi Spring dan Oauth2]]></title>
      <url>http://ciazhar.github.io/2017/05/27/pemrograman/spring/4-oauth2-spring/</url>
      <content type="html"><![CDATA[<p><img src="/images/springboot.png" alt=""></p>
<h1 id="Setup-Development-Environment"><a href="#Setup-Development-Environment" class="headerlink" title="Setup Development Environment"></a>Setup Development Environment</h1><p>Untuk memulai Development sistem ini user diharuskan sudah memenuhi Development Environment sebagai berikut :</p>
<ul>
<li>JDK 1.8</li>
<li>MySQL (Database)</li>
<li>Tomcat (Web Server)</li>
</ul>
<h1 id="Gambaran-Umum"><a href="#Gambaran-Umum" class="headerlink" title="Gambaran Umum"></a>Gambaran Umum</h1><p>Aplikasi yang akan kita buat nantinya akan dibagi menjadi beberapa aplikasi kecil dengan fungsinya masing-masing. Diantaranya adalah :</p>
<ul>
<li>Resource Server. Aplikasi ini menyediakan resource yang dibutuhkan oleh user.</li>
<li>Authorization Server. Aplikasi ini menyediakan layanan otorisasi.</li>
<li>Aplikasi Client. Aplikasi yang dipakai oleh client. Dapat berupa aplikasi web ataupun native.</li>
</ul>
<h1 id="Membuat-Resource-Server-Sederhana"><a href="#Membuat-Resource-Server-Sederhana" class="headerlink" title="Membuat Resource Server Sederhana"></a>Membuat Resource Server Sederhana</h1><p>Pertama kita akan membuat resource server sedehana menggunakan Spring Framework. Apabila anda sudah membuatnya dapat melewati langkah ini.<br>Step by Step nya adalah sebagai berikut :</p>
<ul>
<li>Download Setup projek di <code>http://start.spring.io</code></li>
<li>Isi projek metadata berupa :<ul>
<li>artifact id :</li>
<li>lupa</li>
</ul>
</li>
<li>Isi dependency yang dubutuhkan berupa :<ul>
<li>web</li>
<li>thymeleaf</li>
</ul>
</li>
<li>Download lalu pindahkan ke text editor</li>
<li><p>Kita coba bikin Controller sebagi resources (resource-server/src/main/java/domain/controller/HaloController)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">@Controller</div><div class="line">public class ResourceServerController&#123;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>Kita bikin methode untuk di proses ke user. Methode ini akan mengembalikan waktu sekarang menggunakan variabel <code>waktu</code>. methode ini dapat diakses di url /halo.(resource-server/src/main/java/domain/controller/HaloController)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">@RequestMapping(&quot;/api/halo&quot;)</div><div class="line">@ResponseBody</div><div class="line">public Map&lt;String, Object&gt; haloApi(@RequestBody(required = false) Map&lt;String, String&gt; input)&#123;</div><div class="line">    Map&lt;String, Object&gt; data = new HashMap&lt;&gt;();</div><div class="line">    data.put(&quot;waktu&quot;, new Date());</div><div class="line"></div><div class="line">    if(input != null)&#123;</div><div class="line">        String nama = input.get(&quot;nama&quot;);</div><div class="line">        if(nama != null &amp;&amp; !nama.isEmpty())&#123;</div><div class="line">            data.put(&quot;pesan&quot;, &quot;Halo &quot;+nama);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    return data;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>Kita bikin UI untuk mengeluarkan informasi dari methode halo yang telah buat tadi.(resource-server/src/main/resources/templates/halo.html)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&lt;html&gt;</div><div class="line">    &lt;head&gt;</div><div class="line">        &lt;title&gt;Halo Spring Boot&lt;/title&gt;</div><div class="line">    &lt;/head&gt;</div><div class="line">    &lt;body&gt;</div><div class="line">        &lt;h1&gt;Halo Spring Boot&lt;/h1&gt;</div><div class="line">        &lt;h2&gt;Waktu saat ini : &lt;span th:text=&quot;$&#123;waktu&#125;&quot;&gt;&lt;/span&gt;&lt;/h2&gt;</div><div class="line">        &lt;h3&gt;Pesan : &lt;span th:text=&quot;*&#123;pesan&#125;?:&apos;&apos;&quot;&gt;Halo&lt;/span&gt;&lt;/h3&gt;</div><div class="line">    &lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="Proteksi-Resource-Server-Dengan-Spring-Security"><a href="#Proteksi-Resource-Server-Dengan-Spring-Security" class="headerlink" title="Proteksi Resource Server Dengan Spring Security"></a>Proteksi Resource Server Dengan Spring Security</h1><ul>
<li><p>Lalu coba kita proteksi Resource Server kita menggunakan Spring Security dengan menambahkan dependency di pom.xml. (resource-server/pom.xml)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;dependency&gt;</div><div class="line">  &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</div><div class="line">  &lt;artifactId&gt;spring-boot-starter-security&lt;/artifactId&gt;</div><div class="line">&lt;/dependency&gt;</div></pre></td></tr></table></figure>
<p>Pada keadaan ini kita akan diminta otorisasi jika kita mengakses di browser dengan username : <code>user</code> dan password yang ada pada CLI. karena tidak efisien kita akan tambahkan konfigurasi untuk otorisasi.</p>
</li>
<li><p>Buat class untuk konfigurasi otorisasi (/resource-server/src/main/java/domain/config/KonfigurasiSecurity)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">@Configuration</div><div class="line">public class KonfigurasiSecurity  extends WebSecurityConfigurerAdapter &#123;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>Buat methode untuk mengkonfigurasi otorisasi(/resource-server/src/main/java/domain/config/KonfigurasiSecurity.java)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">@Autowired</div><div class="line">public void configureGlobal(AuthenticationManagerBuilder auth) throws Exception &#123;</div><div class="line">    auth.inMemoryAuthentication()</div><div class="line">            .withUser(&quot;admin&quot;)</div><div class="line">                .password(&quot;123&quot;)</div><div class="line">                .roles(&quot;USER&quot;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Pada keadaan ini kita sudah dapat login tapi masih dengan interface dari browser. Selanjutnya kita akan konfig untuk interface htmlnya.</p>
</li>
<li><p>Konfigurasi UI untuk login(/resource-server/src/main/java/domain/config/KonfigurasiSecurity.java)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">@Override</div><div class="line">protected void configure(HttpSecurity http) throws Exception &#123;</div><div class="line">    http</div><div class="line">            .authorizeRequests()</div><div class="line">            .anyRequest().authenticated()</div><div class="line">            .and()</div><div class="line">            .formLogin().loginPage(&quot;/login&quot;).permitAll()</div><div class="line">            .defaultSuccessUrl(&quot;/halo&quot;)</div><div class="line">            .and()</div><div class="line">            .logout();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Pada keadaan ini kita sudah dapat login dengan UI html yang disediakan oleh spring</p>
</li>
<li><p>Membuat UI html sendiri(/resource-server/src/main/resources/templates/login.html)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line">&lt;html&gt;</div><div class="line">    &lt;head&gt;</div><div class="line">        &lt;title&gt;Login Page&lt;/title&gt;</div><div class="line">        &lt;!-- Latest compiled and minified CSS --&gt;</div><div class="line">        &lt;link rel=&quot;stylesheet&quot;</div><div class="line">              href=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css&quot;/&gt;</div><div class="line"></div><div class="line">        &lt;!-- Optional theme --&gt;</div><div class="line">        &lt;link rel=&quot;stylesheet&quot;</div><div class="line">              href=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap-theme.min.css&quot;/&gt;</div><div class="line"></div><div class="line">        &lt;link rel=&quot;stylesheet&quot;</div><div class="line">              href=&quot;css/aplikasi.css&quot;/&gt;</div><div class="line"></div><div class="line">    &lt;/head&gt;</div><div class="line">    &lt;body&gt;</div><div class="line">        &lt;div class=&quot;container&quot;&gt;</div><div class="line"></div><div class="line">          &lt;form class=&quot;form-signin&quot; th:action=&quot;@&#123;/login&#125;&quot; method=&quot;post&quot;&gt;</div><div class="line"></div><div class="line">              &lt;div th:if=&quot;$&#123;param.error&#125;&quot; class=&quot;alert alert-error&quot;&gt;    </div><div class="line">                    Invalid username and password.</div><div class="line">                &lt;/div&gt;</div><div class="line">                &lt;div th:if=&quot;$&#123;param.logout&#125;&quot; class=&quot;alert alert-success&quot;&gt;</div><div class="line">                    You have been logged out.</div><div class="line">                &lt;/div&gt;</div><div class="line"></div><div class="line">            &lt;h2 class=&quot;form-signin-heading&quot;&gt;Please sign in&lt;/h2&gt;</div><div class="line">            &lt;label for=&quot;username&quot; class=&quot;sr-only&quot;&gt;Email address&lt;/label&gt;</div><div class="line">            &lt;input type=&quot;text&quot; id=&quot;username&quot; name=&quot;username&quot; class=&quot;form-control&quot;</div><div class="line">                   placeholder=&quot;Username&quot;/&gt;</div><div class="line">            &lt;label for=&quot;password&quot; class=&quot;sr-only&quot;&gt;Password&lt;/label&gt;</div><div class="line">            &lt;input type=&quot;password&quot; id=&quot;password&quot; name=&quot;password&quot;</div><div class="line">                   class=&quot;form-control&quot; placeholder=&quot;Password&quot; /&gt;</div><div class="line">            &lt;button class=&quot;btn btn-lg btn-primary btn-block&quot; type=&quot;submit&quot;&gt;Sign in&lt;/button&gt;</div><div class="line">          &lt;/form&gt;</div><div class="line"></div><div class="line">        &lt;/div&gt; &lt;!-- /container --&gt;        </div><div class="line"></div><div class="line">        &lt;!-- Latest compiled and minified JavaScript --&gt;</div><div class="line">        &lt;script src=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js&quot;/&gt;</div><div class="line">    &lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure>
<p>Selanjutnya kita akan mendaftarkan template ini agar dapat diproses sebagai template yang tidak memiliki controller</p>
</li>
<li><p>Membuat Class KonfigurasiWeb(/resource-server/src/main/java/domain/config/Web.java)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">@Configuration</div><div class="line">public class KonfigurasiWeb extends WebMvcConfigurerAdapter &#123;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>Buat methode untuk mendaftarkan template(/resource-server/src/main/java/domain/config/Web.java)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">@Override</div><div class="line">public void addViewControllers(ViewControllerRegistry registry) &#123;</div><div class="line">    registry.addViewController(&quot;/login&quot;).setViewName(&quot;login&quot;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>Selanjutnya kita akan tambahkan fasilitas logout pada UI(/resource-server/src/main/resources/templates/halo.html)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;form name=&quot;f&quot; th:action=&quot;@&#123;/logout&#125;&quot; method=&quot;post&quot;&gt;</div><div class="line">    &lt;input type=&quot;submit&quot; value=&quot;Logout&quot; /&gt;</div><div class="line">&lt;/form&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="Integrasi-otorisasi-Resources-Server-ke-database"><a href="#Integrasi-otorisasi-Resources-Server-ke-database" class="headerlink" title="Integrasi otorisasi Resources Server ke database"></a>Integrasi otorisasi Resources Server ke database</h1><p>Selanjutnya kita akan pindahkan otorisasi kita yang ada di (/resource-server/src/main/java/domain/config/KonfigurasiSecurity.java) ke database.</p>
<ul>
<li><p>Pertama kita tambahkan dependency  (/resource-server/pom.xml)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&lt;dependency&gt;</div><div class="line">  &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</div><div class="line">  &lt;artifactId&gt;spring-boot-starter-data-jpa&lt;/artifactId&gt;</div><div class="line">&lt;/dependency&gt;</div><div class="line">&lt;dependency&gt;</div><div class="line">  &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</div><div class="line">  &lt;artifactId&gt;mysql-connector&lt;/artifactId&gt;</div><div class="line">&lt;/dependency&gt;</div></pre></td></tr></table></figure>
</li>
<li><p>Lalu kita akan konfigurasi database di (/resource-server/src/main/resources/application.properties)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">spring.datasource.url=jdbc:mysql://localhost:3306/belajar_oauth</div><div class="line">spring.datasource.username=belajar</div><div class="line">spring.datasource.password=belajar</div></pre></td></tr></table></figure>
</li>
<li><p>Generate JPA(/resource-server/src/main/resources/application.properties)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">spring.jpa.generate-ddl=true</div></pre></td></tr></table></figure>
</li>
<li><p>Pertama kita akan buat database dulu(CLI)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mysql -u root -p</div><div class="line">grant all on belajar_oauth.* to belajar@localhost identified by &apos;belajar&apos;</div><div class="line">create database belajar_oauth;</div></pre></td></tr></table></figure>
</li>
<li><p>Cara menggunakan mysql (CLI)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">use pelatihan;			///menggunakan tabel</div><div class="line">show tables;			///memperlihatkan tabel dan datanya</div><div class="line">show create table peserta \G	///memperlihatkan detil tabel</div><div class="line">drop table peserta;		///redeploy tabel</div></pre></td></tr></table></figure>
</li>
<li><p>buat super user (CLI)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">drop table if exists s_users;</div><div class="line"></div><div class="line">create table s_users (</div><div class="line">    id INT PRIMARY KEY AUTO_INCREMENT,</div><div class="line">    username VARCHAR(100) UNIQUE NOT NULL,</div><div class="line">    password VARCHAR(255) NOT NULL,</div><div class="line">    enabled BOOLEAN</div><div class="line">) Engine=InnoDB;</div><div class="line"></div><div class="line">insert into s_users (username, password, enabled)</div><div class="line">values (&apos;admin&apos;, &apos;123&apos;, true);</div><div class="line">insert into s_users (username, password, enabled)</div><div class="line">values (&apos;ciazhar&apos;, &apos;123&apos;, true);</div><div class="line"></div><div class="line">create table s_permissions (</div><div class="line">    id INT PRIMARY KEY AUTO_INCREMENT,</div><div class="line">    id_user VARCHAR(100) NOT NULL REFERENCES s_users(id),</div><div class="line">    user_role VARCHAR(255) NOT NULL</div><div class="line">) Engine=InnoDB;</div><div class="line"></div><div class="line">insert into s_permissions (id_user, user_role)</div><div class="line">values (1, &apos;ROLE_SUPERVISOR&apos;);</div><div class="line"></div><div class="line">insert into s_permissions (id_user, user_role)</div><div class="line">values (1, &apos;ROLE_OPERATOR&apos;);</div><div class="line"></div><div class="line">insert into s_permissions (id_user, user_role)</div><div class="line">values (2, &apos;ROLE_OPERATOR&apos;);</div></pre></td></tr></table></figure>
</li>
<li><p>pindah otorisasi ke database (/resource-server/src/main/java/domain/config/KonfigurasiSecurity)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">@Autowired</div><div class="line">private DataSource dataSource;</div><div class="line"></div><div class="line">@Autowired</div><div class="line">public void configureGlobal(AuthenticationManagerBuilder auth) throws Exception &#123;</div><div class="line">    auth.jdbcAuthentication().dataSource(dataSource)</div><div class="line">            .usersByUsernameQuery(&quot;select username, password, &quot;</div><div class="line">                    + &quot;enabled from s_users where username=?&quot;)</div><div class="line">            .authoritiesByUsernameQuery(&quot;select u.username, p.user_role  &quot;</div><div class="line">                    + &quot;from s_users u  &quot;</div><div class="line">                    + &quot;inner join s_permissions p on u.id = p.id_user &quot;</div><div class="line">                    + &quot;where u.username=?&quot;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="Memisahkan-otorisai-pada-resources-server-agar-menjadi-authorization-server-tersendiri"><a href="#Memisahkan-otorisai-pada-resources-server-agar-menjadi-authorization-server-tersendiri" class="headerlink" title="Memisahkan otorisai pada resources server agar menjadi authorization server tersendiri"></a>Memisahkan otorisai pada resources server agar menjadi authorization server tersendiri</h1><ul>
<li>Selanjutnya kita akan kita pisahkan Aplikasi yang telah kita buat kemarin menjadi resources server dan Authorization server. Pertama kita akan buat dulu aplikasi untuk authorization server, seperti Pertama kali kita membuat project resources server. Step by Step nya adalah sebagai berikut :<ul>
<li>Download Setup projek di <code>http://start.spring.io</code></li>
<li>Isi projek metadata berupa :<ul>
<li>artifact id :</li>
<li>lupa</li>
</ul>
</li>
<li>Isi dependency yang dubutuhkan berupa :<ul>
<li>web</li>
<li>thymeleaf</li>
<li>security</li>
<li>jdbc</li>
<li>mysql</li>
</ul>
</li>
<li>Download lalu pindahkan ke text editor</li>
</ul>
</li>
<li>Lalu kita akan pindahkan file file otorisasi sebagai berikut :<ul>
<li>KonfigurasiSecurity.java</li>
<li>KonfigurasiWeb.java</li>
<li>login.html<br>kedalam projek authorization server kita</li>
</ul>
</li>
</ul>
<h1 id="Konfigurasi-Resource-Server-dan-Authorization-Sever-agar-dapat-berhubungan"><a href="#Konfigurasi-Resource-Server-dan-Authorization-Sever-agar-dapat-berhubungan" class="headerlink" title="Konfigurasi Resource Server dan Authorization Sever agar dapat berhubungan"></a>Konfigurasi Resource Server dan Authorization Sever agar dapat berhubungan</h1><p>Ada beberapa file yang perlu dikonfigurasi yaitu :</p>
<ul>
<li>pom.xml kedua aplikasi</li>
<li>KonfigurasiResourceServer.java</li>
<li>KonfigurasiAuthorizationServer.java</li>
<li>application.properties kedua aplikasi</li>
<li>KonfigurasiSecurity</li>
</ul>
<h2 id="Konfigurasi-Resource-Server"><a href="#Konfigurasi-Resource-Server" class="headerlink" title="Konfigurasi Resource Server"></a>Konfigurasi Resource Server</h2><ul>
<li><p>Tambahkan dependeny OAuth2(resource-server/pom.xml)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;dependency&gt;</div><div class="line">    &lt;groupId&gt;org.springframework.security.oauth&lt;/groupId&gt;</div><div class="line">    &lt;artifactId&gt;spring-security-oauth2&lt;/artifactId&gt;</div><div class="line">    &lt;version&gt;2.0.7.RELEASE&lt;/version&gt;</div><div class="line">&lt;/dependency&gt;</div></pre></td></tr></table></figure>
</li>
<li><p>setup security (resource-server/src/main/resources/application.properties)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">logging.level.org.springframework.security=DEBUG</div></pre></td></tr></table></figure>
</li>
<li><p>Buat class KonfigurasiResourceServer (resource-server/src/main/java/domain/config/KonfigurasiResourceServer.java)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">@Configuration</div><div class="line">public class KonfigurasiResourceServer &#123;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>Setup RESOURCE_ID(resource-server/src/main/java/domain/config/KonfigurasiResourceServer.java)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">private static final String RESOURCE_ID = &quot;belajar&quot;;</div></pre></td></tr></table></figure>
</li>
<li><p>Buat inner class ResourceServerConfiguration (resource-server/src/main/java/domain/config/KonfigurasiResourceServer.java)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">@Configuration</div><div class="line">@EnableResourceServer</div><div class="line">protected static class ResourceServerConfiguration extends ResourceServerConfigurerAdapter &#123;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>Buat methode (resource-server/src/main/java/domain/config/KonfigurasiResourceServer.java/ResourceServerConfiguration). Methode ini berfungsi untuk menyuruh authorization server melakukan pengecekan apakah access token valid atau tidak.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">@Override</div><div class="line">public void configure(ResourceServerSecurityConfigurer resources) &#123;</div><div class="line">    RemoteTokenServices tokenService = new RemoteTokenServices();</div><div class="line">    tokenService.setClientId(&quot;clientauthcode&quot;);</div><div class="line">    tokenService.setClientSecret(&quot;123456&quot;);</div><div class="line">    tokenService.setCheckTokenEndpointUrl(&quot;http://localhost:10000/oauth/check_token&quot;);</div><div class="line">    resources</div><div class="line">            .resourceId(RESOURCE_ID)</div><div class="line">            .tokenServices(tokenService);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>Buat methode(resource-server/src/main/java/domain/config/KonfigurasiResourceServer.java/ResourceServerConfiguration). Methode ini berfungsi untuk memgatur api apa saja  yang dapat diakses dan oleh siapa saja yang dapat mengakses.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">@Override</div><div class="line">public void configure(HttpSecurity http) throws Exception &#123;</div><div class="line">    http.authorizeRequests()</div><div class="line">            .antMatchers(&quot;/api/halo&quot;).hasRole(&quot;OPERATOR&quot;)</div><div class="line">            .antMatchers(&quot;/api/waktu&quot;).authenticated();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="Konfigurasi-Authorization-Server"><a href="#Konfigurasi-Authorization-Server" class="headerlink" title="Konfigurasi Authorization Server"></a>Konfigurasi Authorization Server</h2><ul>
<li><p>Tambahkan dependeny OAuth2(auth-server/pom.xml)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;dependency&gt;</div><div class="line">    &lt;groupId&gt;org.springframework.security.oauth&lt;/groupId&gt;</div><div class="line">    &lt;artifactId&gt;spring-security-oauth2&lt;/artifactId&gt;</div><div class="line">    &lt;version&gt;2.0.7.RELEASE&lt;/version&gt;</div><div class="line">&lt;/dependency&gt;</div></pre></td></tr></table></figure>
</li>
<li><p>setup security (auth-server/src/main/resources/application.properties)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">logging.level.org.springframework.security=DEBUG</div><div class="line">server.port=10000</div></pre></td></tr></table></figure>
</li>
<li><p>Buat class KonfigurasiAuthorizationServer (auth-server/src/main/java/domain/config/KonfigurasiAuthorizationServer.java)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">@Configuration</div><div class="line">public class KonfigurasiAuthorizationServer &#123;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>Buat inner class AuthorizationServerConfiguration (auth-server/src/main/java/domain/config/KonfigurasiAuthorizationServer.java)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">@Configuration</div><div class="line">@EnableAuthorizationServer</div><div class="line">protected static class AuthorizationServerConfiguration extends AuthorizationServerConfigurerAdapter &#123;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>Setup RESOURCE_ID (auth-server/src/main/java/domain/config/KonfigurasiAuthorizationServer.java)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">private static final String RESOURCE_ID = &quot;belajar&quot;;</div></pre></td></tr></table></figure>
</li>
<li><p>Setup AuthenticationManager</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">@Autowired</div><div class="line">@Qualifier(&quot;authenticationManagerBean&quot;)</div><div class="line">private AuthenticationManager authenticationManager;</div></pre></td></tr></table></figure>
</li>
<li><p>Buat methode (auth-server/src/main/java/domain/config/KonfigurasiAuthorizationServer.java/AuthorizationServerConfiguration). Methode ini berfungsi untuk menyimpan token yang nanti akan di cek kembali</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">@Override</div><div class="line">public void configure(AuthorizationServerEndpointsConfigurer endpoints)</div><div class="line">        throws Exception &#123;</div><div class="line">    endpoints</div><div class="line">            .tokenStore(new InMemoryTokenStore())</div><div class="line">            .authenticationManager(authenticationManager);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>Buat methode (auth-server/src/main/java/domain/config/KonfigurasiAuthorizationServer.java/AuthorizationServerConfiguration). Methode ini berfungsi untuk menentukan role apa saja yang dapat mendapat mengakses check token</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">@Override</div><div class="line">public void configure(AuthorizationServerSecurityConfigurer oauthServer) throws Exception &#123;</div><div class="line">    oauthServer.checkTokenAccess(&quot;hasRole(&apos;CLIENT&apos;)&quot;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>Buat methode (auth-server/src/main/java/domain/config/KonfigurasiAuthorizationServer.java/AuthorizationServerConfiguration). Methode ini berisi list role client berasarkan grant tye</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">@Override</div><div class="line">public void configure(ClientDetailsServiceConfigurer clients) throws Exception &#123;</div><div class="line">  clients</div><div class="line">    .inMemory()</div><div class="line">    .withClient(&quot;clientauthcode&quot;)</div><div class="line">      .secret(&quot;123456&quot;)</div><div class="line">      .authorizedGrantTypes(&quot;authorization_code&quot;,&quot;refresh_token&quot;)</div><div class="line">      .authorities(&quot;CLIENT&quot;)</div><div class="line">      .scopes(&quot;read&quot;,&quot;write&quot;)</div><div class="line">      .resourceIds(RESOURCE_ID)</div><div class="line">    .and()</div><div class="line">    .withClient(&quot;clientcred&quot;)</div><div class="line">      .secret(&quot;123456&quot;)</div><div class="line">      .authorizedGrantTypes(&quot;client_credentials&quot;)</div><div class="line">      .scopes(&quot;trust&quot;)</div><div class="line">      .resourceIds(RESOURCE_ID)</div><div class="line">    .and()</div><div class="line">    .withClient(&quot;clientapp&quot;)</div><div class="line">      .secret(&quot;123456&quot;)</div><div class="line">      .authorizedGrantTypes(&quot;password&quot;)</div><div class="line">      .scopes(&quot;read&quot;,&quot;write&quot;)</div><div class="line">      .resourceIds(RESOURCE_ID)  </div><div class="line">    .and()</div><div class="line">    .withClient(&quot;jsclient&quot;)</div><div class="line">      .secret(&quot;123456&quot;)</div><div class="line">      .authorizedGrantTypes(&quot;implicit&quot;)</div><div class="line">      .authorities(&quot;CLIENT&quot;)</div><div class="line">      .scopes(&quot;read&quot;,&quot;write&quot;)</div><div class="line">      .resourceIds(RESOURCE_ID)</div><div class="line">      .redirectUris(&quot;http://localhost:20000/implicit-client&quot;)</div><div class="line">      .accessTokenValiditySeconds(60* 60 *24)</div><div class="line">      .autoApprove(true);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>Konfigurasi Security (auth-server/src/main/java/domain/config/KonfigurasiSecurity)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">@Override</div><div class="line">    @Bean</div><div class="line">    public AuthenticationManager authenticationManagerBean() throws Exception &#123;</div><div class="line">        return super.authenticationManagerBean();</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="Flow-untuk-masing-masing-role-clint"><a href="#Flow-untuk-masing-masing-role-clint" class="headerlink" title="Flow untuk masing masing role clint"></a>Flow untuk masing masing role clint</h1><p>Perlu diketahui authorization server akan jalan di port 10000 dan resource server akan jalan di port 8080. OAuth 2 sendiri menyediakan 4 role yaitu :</p>
<ul>
<li>Authorization Code (Akses yang dalam mendapatkan resource memerlukan kode)</li>
<li>Username Password</li>
<li>Client Credential (Akses yang memungkinkan client tidak perlu login untuk mendapatkan akses)</li>
<li>Client Impicit (Akses yang biasanya digunakan untuk mendapatkan resource berupa js)</li>
</ul>
<h2 id="Authorization-Code"><a href="#Authorization-Code" class="headerlink" title="Authorization Code"></a>Authorization Code</h2><p>Karena kita belum memiliki aplikasi client maka kita akan langsung redirect ke authorization server dengan memasukkan url<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://localhost:10000/oauth/authorize?client_id=clientauthcode&amp;response_type=code&amp;redirect_uri=http://localhost:8080/api/halo</div></pre></td></tr></table></figure></p>
<p>  Note : url tersebut akan diproses oleh auth server (<a href="http://localhost:10000/oauth/authorize" target="_blank" rel="external">http://localhost:10000/oauth/authorize</a>) dengan parameter client_id yaitu <code>clientauthcode</code>, response_type berupa <code>code</code> dan ingin request ke <code>http://localhost:8080/api/halo</code></p>
<ul>
<li>Kita akan langsung di redirect ke <code>http://localhost:10000/login</code>. Kita diminta untuk memasukkan otorisasi login</li>
<li>Lalu akan muncul form approval dengan scope <code>read</code> dan <code>write</code>, untuk approval ini dapat dikonfigurasi agar tidak tampil atau otomatis authorize.</li>
<li><p>Lalu akan muncul url sebagai berikut</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://localhost:8080/api/halo?code=Ixd8e</div></pre></td></tr></table></figure>
<p>Kemudian kita ambil code tersebut</p>
</li>
<li>Lalu ditukarkan kode tersebut dengan access token dengan cara mengakses kembali ke auth server dengan mencantumkan<ul>
<li>Methode HTTP berupa <code>POST</code></li>
<li>client_id berupa <code>clientauthcode</code> dan secret <code>123456</code></li>
<li>Url berupa <code>http://localhost:10000/oauth/token</code></li>
<li>Header berupa <code>application/json</code></li>
<li>data yaitu:<ul>
<li>grant_type berupa <code>authorization_code</code></li>
<li>code berupa <code>Ixd8e</code></li>
<li>redirect_uri berupa <code>http://localhost:8080/api/halo</code></li>
</ul>
</li>
</ul>
</li>
<li>Setelah itu kita akan mendapatkan data sebagai berikut :<ul>
<li>access_token : <code>blablabla</code></li>
<li>token_type : <code>bearer</code></li>
<li>refresh_token : <code>baba</code></li>
<li>expires_in : <code>43199</code></li>
<li>scope : <code>read</code>,<code>write</code></li>
</ul>
</li>
<li>Lalu akses ke resource server dengan menambahkan access token yang telah kita dapatkan tadi dengan url <code>http://localhost:8080/api/halo?access_token=blablabla</code></li>
<li>Selamat anda sudah dapat mengakses resource.<br>  Sebenarnya sebelum token mendapatkan resource tersebut resource server melakukan pengecekan ke authorization server terhadap acces token tadi apakah valid atau tidak.Namun perlu diketahui bahwa saat ini kedua aplikasi berjalan di port yang berbeda (auth server port 10000, dan resource server di port 8080) sehingga tidak dapat sharing token via memory.<br>Solusinya adalah :</li>
<li>Token tadi akan disimpan ke database menggunakan jdbc token store oleh auth server. Lalu resource server akan diarahkan ke database tersebut. Tetapi ada kalanya resource server tidak dapat mendapatkan akses ke database.</li>
<li><p>Menggunakan RemoteTokenServices yang ada pada setting KonfigurasiResourceServer</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">@Override</div><div class="line">public void configure(ResourceServerSecurityConfigurer resources) &#123;</div><div class="line">    RemoteTokenServices tokenService = new RemoteTokenServices();</div><div class="line">    tokenService.setClientId(&quot;clientauthcode&quot;);</div><div class="line">    tokenService.setClientSecret(&quot;123456&quot;);</div><div class="line">    tokenService.setCheckTokenEndpointUrl(&quot;http://localhost:10000/oauth/check_token&quot;);</div><div class="line">    resources</div><div class="line">            .resourceId(RESOURCE_ID)</div><div class="line">            .tokenServices(tokenService);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>resource server akan mengarahkan ke url <code>http://localhost:10000/oauth/check_token</code> dengan menambahkan client id berupa <code>clientauthcode</code>, secret berupa <code>123456</code> dan access_token menggunakn methode GET. sehingga resource server mendapat data sebagai berikut :</p>
<ul>
<li>rid :  <code>belajar</code></li>
<li>exp : <code>14441</code></li>
<li>username : <code>endy</code></li>
<li>authorities : <code>[ROLE_OPERATOR]</code>,<code>[ROLE_SUPERVISOR]</code></li>
<li>client_id : <code>clientauthcode</code></li>
<li>scope : <code>read</code>,<code>write</code><br>dari sini resource server tahu role dari user tersebut dan dapat memutuskan user tersebut dapat mengakses resource tersebut atau tidak</li>
</ul>
</li>
</ul>
<h2 id="Username-Password"><a href="#Username-Password" class="headerlink" title="Username Password"></a>Username Password</h2><ul>
<li>Kita akses auth server dengan mencantumkan<ul>
<li>Methode HTTP berupa <code>POST</code></li>
<li>client_id berupa <code>clientapp</code> dan secret <code>123456</code></li>
<li>Url berupa <code>http://localhost:10000/oauth/token</code></li>
<li>Header berupa <code>application/json</code></li>
<li>data yaitu:<ul>
<li>client_id berupa <code>clientapp</code></li>
<li>grant_type berupa <code>password</code></li>
<li>username berupa <code>endy</code><ul>
<li>password berupa <code>123</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>Setelah itu kita akan mendapatkan data sebagai berikut :<ul>
<li>access_token : <code>blablabla</code></li>
<li>token_type : <code>bearer</code></li>
<li>expires_in : <code>43199</code></li>
<li>scope : <code>read</code>,<code>write</code></li>
</ul>
</li>
<li>Kemudian Kita akses auth server dengan mencantumkan<ul>
<li>Methode HTTP berupa <code>GET</code></li>
<li>client_id berupa <code>clientapp</code> dan secret <code>123456</code> dan authorization header <code>Bearer blablabla</code></li>
<li>Url berupa <code>http://localhost:8080/api/halo</code></li>
<li>Header berupa <code>application/json</code></li>
</ul>
</li>
<li>Selamat anda sudah dapat mengakses resource.</li>
</ul>
<h2 id="Client-Credential"><a href="#Client-Credential" class="headerlink" title="Client Credential"></a>Client Credential</h2><ul>
<li>Kita akses auth server dengan mencantumkan<ul>
<li>Methode HTTP berupa <code>POST</code></li>
<li>client_id berupa <code>clientcred</code> dan secret <code>123456</code></li>
<li>Url berupa <code>http://localhost:10000/oauth/token</code></li>
<li>Header berupa <code>application/json</code></li>
<li>data yaitu:<ul>
<li>client_id berupa <code>clientcred</code></li>
<li>grant_type berupa <code>client_credentials</code></li>
</ul>
</li>
</ul>
</li>
<li>Setelah itu kita akan mendapatkan data sebagai berikut :<ul>
<li>access_token : <code>blablabla</code></li>
<li>token_type : <code>bearer</code></li>
<li>expires_in : <code>43199</code></li>
<li>scope : <code>read</code>,<code>write</code></li>
</ul>
</li>
<li>Kemudian Kita akses auth server dengan mencantumkan<ul>
<li>Methode HTTP berupa <code>GET</code></li>
<li>client_id berupa <code>clientcred</code> dan secret <code>123456</code> dan authorization header <code>Bearer blablabla</code></li>
<li>Url berupa <code>http://localhost:8080/api/halo</code></li>
<li>Header berupa <code>application/json</code></li>
<li>data yaitu:<ul>
<li>client_id berupa <code>clientcred</code></li>
</ul>
</li>
</ul>
</li>
<li>Perlu diketahui karena client cred ini tidak menggunakan username dan password maka dia tidak dapat digunakan dalam aplikasi ini karena resource server telah kita setting hanya untuk menerima authentifikasi dari user dengan role operator.</li>
</ul>
<h2 id="Implicit-Client"><a href="#Implicit-Client" class="headerlink" title="Implicit Client"></a>Implicit Client</h2><ul>
<li><p>Karena kita belum memiliki aplikasi client maka kita akan langsung redirect ke authorization server dengan memasukkan url</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://localhost:10000/oauth/authorize?client_id=jsclient&amp;response_type=token&amp;redirect_uri=http://localhost:2000/implicit-client</div></pre></td></tr></table></figure>
<p>Note : url tersebut akan diproses oleh auth server (<a href="http://localhost:10000/oauth/authorize" target="_blank" rel="external">http://localhost:10000/oauth/authorize</a>) dengan parameter client_id yaitu <code>jsclient</code>, response_type berupa <code>token</code> dan ingin request ke <code>http://localhost:2000/implicit-client</code></p>
</li>
<li>Kita akan langsung di redirect ke <code>http://localhost:10000/login</code>. Kita diminta untuk memasukkan otorisasi login</li>
<li>Selanjutnya kita akan mendapatkan url <code>http://localhost:2000/implicit-client/#access_token=blabla&amp;token_type=bearer</code></li>
<li>Kemudian Kita akses auth server dengan mencantumkan<ul>
<li>Methode HTTP berupa <code>GET</code><br>authorization header <code>Bearer blablabla</code></li>
<li>Url berupa <code>http://localhost:8080/api/halo</code></li>
<li>Header berupa <code>application/json</code></li>
</ul>
</li>
</ul>
<h1 id="Mendapatkan-Informasi-User"><a href="#Mendapatkan-Informasi-User" class="headerlink" title="Mendapatkan Informasi User"></a>Mendapatkan Informasi User</h1><ul>
<li><p>Pertama class buat controller(resource-server/src/main/java/domain/controller/InfoController)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">@RestController</div><div class="line">@EnableResourceServer</div><div class="line">public class InfoController&#123;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>Buat methode untuk mengakses info user</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">@RequestMapping(&quot;/userinfo&quot;)</div><div class="line">public Principal user info (Principal principal)&#123;</div><div class="line">  return principal;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>Untuk mengaksesnya kita login dulu dengan menggunakan grant type clientauthcode sampai kita mendapatkan access tokenya</p>
</li>
<li>Setelah mendapatkanya masukkan url <code>http://localhost:8080/userinfo?access_token=blabla</code></li>
</ul>
<h1 id="Membuat-Aplikasi-Client-Auhtorization-Code"><a href="#Membuat-Aplikasi-Client-Auhtorization-Code" class="headerlink" title="Membuat Aplikasi Client Auhtorization Code"></a>Membuat Aplikasi Client Auhtorization Code</h1><p>Pertama kita akan membuat aplikasi client authcode sedehana menggunakan Spring Framework.<br>Step by Step nya adalah sebagai berikut :</p>
<ul>
<li>Download Setup projek di <code>http://start.spring.io</code></li>
<li>Isi projek metadata berupa :<ul>
<li>artifact id :</li>
<li>groupId :</li>
</ul>
</li>
<li>Isi dependency yang dubutuhkan berupa :<ul>
<li>web</li>
<li>thymeleaf</li>
</ul>
</li>
<li>Download lalu pindahkan ke text editor</li>
<li><p>Kita coba bikin Controller sebagi resources (client-authcode/src/main/java/domain/controller/InfoController)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">@Controller</div><div class="line">public class InfoController &#123;</div><div class="line"></div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>Kita bikin methode untuk di proses ke user. Methode ini akan mengembalikan waktu sekarang menggunakan variabel <code>waktu</code>. methode ini dapat diakses di url /halo.(client-authcode/src/main/java/domain/controller/InfoController)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">@RequestMapping(&quot;/info&quot;)</div><div class="line">public void info(Model m)&#123;</div><div class="line">  m.addAttribute(&quot;waktu&quot;, new Date().toString());</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>Kita bikin UI untuk mengeluarkan informasi dari methode halo yang telah buat tadi.(client-authcode/src/main/resources/templates/halo.html)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&lt;html&gt;</div><div class="line">    &lt;head&gt;</div><div class="line">        &lt;title&gt;Halo Spring Boot&lt;/title&gt;</div><div class="line">    &lt;/head&gt;</div><div class="line">    &lt;body&gt;</div><div class="line">        &lt;h1&gt;Halo Spring Boot&lt;/h1&gt;</div><div class="line">        &lt;h2&gt;Waktu saat ini : &lt;span th:text=&quot;$&#123;waktu&#125;&quot;&gt;&lt;/span&gt;&lt;/h2&gt;</div><div class="line">    &lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="Proteksi-Client-Authorization-Code-Dengan-Spring-Security"><a href="#Proteksi-Client-Authorization-Code-Dengan-Spring-Security" class="headerlink" title="Proteksi Client Authorization Code Dengan Spring Security"></a>Proteksi Client Authorization Code Dengan Spring Security</h2><ul>
<li><p>Lalu coba kita proteksi Resource Server kita menggunakan Spring Security dengan menambahkan dependency di pom.xml. (client-authcode/pom.xml)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&lt;dependency&gt;</div><div class="line">  &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</div><div class="line">  &lt;artifactId&gt;spring-boot-starter-security&lt;/artifactId&gt;</div><div class="line">&lt;/dependency&gt;</div><div class="line">&lt;dependency&gt;</div><div class="line">    &lt;groupId&gt;org.springframework.security.oauth&lt;/groupId&gt;</div><div class="line">    &lt;artifactId&gt;spring-security-oauth2&lt;/artifactId&gt;</div><div class="line">    &lt;version&gt;2.0.7.RELEASE&lt;/version&gt;</div><div class="line">&lt;/dependency&gt;</div></pre></td></tr></table></figure>
<p>Pada keadaan ini kita akan diminta otorisasi jika kita mengakses di browser dengan username : <code>user</code> dan password yang ada pada CLI. karena tidak efisien mengabaikan otorisasi.</p>
</li>
<li><p>Buat class untuk konfigurasi otorisasi (/client-authcode/src/main/java/domain/config/KonfigurasiSecurity)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">@Configuration</div><div class="line">public class KonfigurasiSecurity  extends WebSecurityConfigurerAdapter &#123;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>Override methode configure (/client-authcode/src/main/java/domain/config/KonfigurasiSecurity). Methode untuk mengabaikan otorisasi</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">@Override</div><div class="line">public void configure (WebSecurity web) throws Exception&#123;</div><div class="line">  web.ignoring().anyRequest();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>Buat class untuk konfigurasi OAuth Client (/client-authcode/src/main/java/domain/config/KonfigurasiOauth2Client).</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">@Configuration</div><div class="line">@EnableOAuth2Client</div><div class="line">public class KonfigurasiOauth2Client&#123;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>Konfigurasi untuk Oauth2 Client (/client-authcode/src/main/java/domain/config/KonfigurasiOauth2Client)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">private String urlAuthorization = &quot;http://localhost:10000/oauth/authorize&quot;;</div><div class="line">private String urlToken = &quot;http://localhost:10000/oauth/token&quot;;</div><div class="line"></div><div class="line">@Bean</div><div class="line">public OAuth2RestOperations restOperations(OAuth2ClientContext context)&#123;</div><div class="line">    OAuth2RestTemplate restTemplate = new OAuth2RestTemplate(resource(),context);</div><div class="line">    return restTemplate;</div><div class="line">&#125;</div><div class="line"></div><div class="line">@Bean</div><div class="line">public OAuth2ProtectedResourceDetails resource()&#123;</div><div class="line">    AuthorizationCodeResourceDetails resourceDetails= new AuthorizationCodeResourceDetails();</div><div class="line">    resourceDetails.setClientId(&quot;clientauthcode&quot;);</div><div class="line">    resourceDetails.setClientSecret(&quot;123456&quot;);</div><div class="line">    resourceDetails.setUserAuthorizationUri(urlAuthorization);</div><div class="line">    resourceDetails.setAccessTokenUri(urlToken);</div><div class="line">    return resourceDetails;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>Membuat Controler untuk mengakses api dari resource server</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">@Autowired</div><div class="line">private OAuth2RestOperations restOperations;</div><div class="line"></div><div class="line">private String urlApi = &quot;http://localhost:8080/api/halo&quot;;</div><div class="line"></div><div class="line">@RequestMapping(&quot;/api&quot;)</div><div class="line">@ResponseBody</div><div class="line">public Map&lt;String, Object&gt; api ()&#123;</div><div class="line">  Map&lt;String, Object&gt; hasil = restOperations.getForObject(urlApi, HashMap.class);</div><div class="line">  return hasil;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>Tambahkan konfigurasi context path dan server port</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">server.port=9090</div><div class="line">server.context-path=/authcode</div></pre></td></tr></table></figure>
<p>Keterangan :<br>membuat context-path wajib dikarenakan agar tidak terjadi error saat penyimpanan cookies</p>
</li>
</ul>
<h1 id="Membuat-Aplikasi-Client-Implicit"><a href="#Membuat-Aplikasi-Client-Implicit" class="headerlink" title="Membuat Aplikasi Client Implicit"></a>Membuat Aplikasi Client Implicit</h1><p>Pertama kita akan membuat aplikasi client authcode sedehana menggunakan Spring Framework.<br>Step by Step nya adalah sebagai berikut :</p>
<ul>
<li>Download Setup projek di <code>http://start.spring.io</code></li>
<li>Isi projek metadata berupa :<ul>
<li>artifact id :</li>
<li>groupId :</li>
</ul>
</li>
<li>Isi dependency yang dubutuhkan berupa :<ul>
<li>web</li>
</ul>
</li>
<li>Download lalu pindahkan ke text editor</li>
</ul>
<h3 id="Setting-Server-port-dan-Server-Context-Path"><a href="#Setting-Server-port-dan-Server-Context-Path" class="headerlink" title="Setting Server port dan Server Context Path"></a>Setting Server port dan Server Context Path</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">server.port=7070</div><div class="line">server.context-path=/implicit</div></pre></td></tr></table></figure>
<h3 id="Membuat-HTML-sederhana"><a href="#Membuat-HTML-sederhana" class="headerlink" title="Membuat HTML sederhana"></a>Membuat HTML sederhana</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html lang=&quot;en&quot;&gt;</div><div class="line">&lt;head&gt;</div><div class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</div><div class="line">    &lt;title&gt;Oauth Client Implicit&lt;/title&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line">    &lt;div&gt;</div><div class="line">        &lt;h1&gt;Oauth Client Implicit&lt;/h1&gt;</div><div class="line">    &lt;/div&gt;</div><div class="line">&lt;body&gt;</div></pre></td></tr></table></figure>
<h3 id="Setup-Angular-JS"><a href="#Setup-Angular-JS" class="headerlink" title="Setup Angular JS"></a>Setup Angular JS</h3><ul>
<li>tambahkan file angualar js ke project</li>
<li><p>buat file aplikasi js</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var app = angular.module(&apos;ImplicitApp&apos;,[]);</div><div class="line">app.controller(&apos;DummyController&apos;,function()&#123;</div><div class="line">)&#125;;</div></pre></td></tr></table></figure>
</li>
<li><p>include ke html</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">  &lt;body ng-app=&quot;ImplicitApp&quot;&gt;</div><div class="line">  &lt;div ng-controller=&quot;DummyController&quot;&gt;</div><div class="line">      &lt;h1&gt;Oauth Client Implicit&lt;/h1&gt;</div><div class="line">  &lt;/div&gt;</div><div class="line"></div><div class="line">  &lt;script src=&quot;js/angular.min.js&quot;&gt;&lt;/script&gt;</div><div class="line">  &lt;script src=&quot;js/aplikasi.js&quot;&gt;&lt;/script&gt;</div><div class="line">&lt;/body&gt;</div></pre></td></tr></table></figure>
</li>
<li><p>test angular js</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;div ng-controller=&quot;DummyController&quot;&gt;</div><div class="line">    &lt;h1&gt;Oauth Client Implicit&lt;/h1&gt;</div><div class="line">    Masukkan Nama Anda : &lt;input type=&quot;text&quot; ng-model=&quot;nama&quot;&gt;&lt;br&gt;</div><div class="line">    Selamat Datang  &#123;&#123;nama&#125;&#125;</div><div class="line">&lt;/div&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="Impicit-Client"><a href="#Impicit-Client" class="headerlink" title="Impicit Client"></a>Impicit Client</h3><ul>
<li><p>angular js</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line">app.controller(&apos;DummyController&apos;,function($http, $scope, $window, $location)&#123;</div><div class="line">    var urlResourceServer = &quot;http://localhost:8080/api/halo&quot;;</div><div class="line">    var urlAuthServer = &quot;http://localhost:10000/oauth/authorize?client_id=jsclient&amp;response_type=token&quot;;</div><div class="line"></div><div class="line">    $scope.bukaLoginPage = function () &#123;</div><div class="line">        $window.location.href = urlAuthServer;</div><div class="line">    &#125;;</div><div class="line"></div><div class="line">    $scope.ambilTokenDariServer = function () &#123;</div><div class="line">        var location = $location.url(); /// ngambil hash yang isinya #access_token=f2b50438-2c3a-4637-b6b9-e469543ff26d&amp;token_type=bearer&amp;expires_in=86399&amp;scope=read%20write</div><div class="line">        console.log(&quot;Location : &quot;+location);</div><div class="line">        var params = location.split(&quot;&amp;&quot;);///jadi array yang isinya [access_token=f2b50438-2c3a-4637-b6b9-e469543ff26d , token_type=bearer , expires_in=86399 , scope=read%20write]</div><div class="line">        console.log(&quot;Param : &quot;+params);</div><div class="line">        var tokenParam = params[0];///ambile param indek ke 0 yaitu access token</div><div class="line">        console.log(&quot;token Param : &quot;+tokenParam);</div><div class="line">        var token = tokenParam.split(&quot;=&quot;)[1];</div><div class="line">        console.log(&quot;token : &quot;+token);</div><div class="line">        $window.sessionStorage.setItem(&apos;token&apos;,token);</div><div class="line">    &#125;;</div><div class="line"></div><div class="line">    $scope.requestKeResourceServer = function () &#123;</div><div class="line"></div><div class="line">        var token = $window.sessionStorage.getItem(&apos;token&apos;);</div><div class="line">        if (!token)&#123;</div><div class="line">            alert(&apos;Belum Login&apos;);</div><div class="line">            return;</div><div class="line">        &#125;</div><div class="line">        $http.get(urlResourceServer+&quot;?access_token=&quot;+token).then(</div><div class="line">            function (response) &#123;</div><div class="line">                $scope.responseDariServer = response.data;</div><div class="line">            &#125;,</div><div class="line">            function (response) &#123;</div><div class="line">                alert(&apos;Error Code&apos;+response.status+&apos;, Error Text : &apos;+response.statusText);</div><div class="line">            &#125;</div><div class="line">        );</div><div class="line">    &#125;;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
</li>
<li><p>html</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">&lt;div ng-controller=&quot;DummyController&quot;&gt;</div><div class="line">    &lt;h1&gt;Oauth Client Implicit&lt;/h1&gt;</div><div class="line">    Masukkan Nama Anda : &lt;input type=&quot;text&quot; ng-model=&quot;nama&quot;&gt;&lt;br&gt;</div><div class="line">    Selamat Datang  &#123;&#123;nama&#125;&#125;</div><div class="line"></div><div class="line">    &lt;hr&gt;</div><div class="line"></div><div class="line">    &lt;button ng-click=&quot;bukaLoginPage()&quot;&gt;Login ke Server&lt;/button&gt;</div><div class="line">    &lt;button ng-click=&quot;ambilTokenDariServer()&quot;&gt;Ambil Token dari Server&lt;/button&gt;</div><div class="line"></div><div class="line">    &lt;hr&gt;</div><div class="line"></div><div class="line">    &lt;button ng-click=&quot;requestKeResourceServer()&quot;&gt;Merequest ke Resource Server&lt;/button&gt;</div><div class="line">    &lt;div&gt;</div><div class="line">        &#123;&#123;responseDariServer&#125;&#125;</div><div class="line">    &lt;/div&gt;</div><div class="line">&lt;/div&gt;</div></pre></td></tr></table></figure>
</li>
<li><p>Note<br>Untuk mengatasi masalah CORS pastikan api anda telah mengunakan anotasi <code>@CrossOrigin</code></p>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Pemrograman </category>
            
            <category> Spring </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Authorization and Authentification Service]]></title>
      <url>http://ciazhar.github.io/2017/05/20/pemrograman/angular2/5-Auth-Service/</url>
      <content type="html"><![CDATA[<p><img src="/images/angular.png" alt=""></p>
<h1 id="Membuat-service-otorisasi"><a href="#Membuat-service-otorisasi" class="headerlink" title="Membuat service otorisasi"></a>Membuat service otorisasi</h1><ul>
<li><p>Membuat shared module.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ng g module shared</div></pre></td></tr></table></figure>
</li>
<li><p>Membuat service auth di dalam shared module</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd shared</div><div class="line">ng g service auth</div></pre></td></tr></table></figure>
</li>
<li><p>Membuat service (auth.service.ts)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">import &#123; Injectable &#125; from &apos;@angular/core&apos;;</div><div class="line"></div><div class="line">@Injectable()</div><div class="line">export class AuthService &#123;</div><div class="line"></div><div class="line">  constructor() &#123; &#125;</div><div class="line"></div><div class="line">  isLogin() : boolean&#123;</div><div class="line">    return localStorage.getItem(&quot;authentification&quot;)!=null;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  getUserInfo() : any&#123;</div><div class="line">    return localStorage.getItem(&quot;authentification&quot;);</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  login(username : string, password : string) : boolean&#123;</div><div class="line">    if(username == &quot;admin&quot; &amp;&amp; password == &quot;123&quot;)&#123;</div><div class="line">      let userObject = &#123;</div><div class="line">        username: &quot;admin&quot;,</div><div class="line">        permissions: [</div><div class="line">          &quot;TRANSAKSI_VIEW&quot;,</div><div class="line">          &quot;TRANSAKSI_EDIT&quot;</div><div class="line">        ]</div><div class="line">      &#125;</div><div class="line">      localStorage.setItem(&quot;authentification&quot;,JSON.stringify(userObject));</div><div class="line">      return true;</div><div class="line">    &#125;</div><div class="line">    return false;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  logout()&#123;</div><div class="line">    localStorage.removeItem(&quot;authentification&quot;);</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>Import auth service (shared.module.ts)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">import &#123; AuthService &#125; from &apos;./auth.service&apos;;</div></pre></td></tr></table></figure>
</li>
<li><p>Definisikan di ngModule sebagai exports</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">@NgModule(&#123;</div><div class="line">  exports: [</div><div class="line">    AuthService</div><div class="line">  ]</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
</li>
<li><p>Membuat file authguard.ts</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">import &#123; Injectable &#125;     from &apos;@angular/core&apos;;</div><div class="line">import &#123; CanActivate, CanActivateChild &#125;    from &apos;@angular/router&apos;;</div><div class="line"></div><div class="line">import &#123; AuthService &#125; from &apos;./auth.service&apos;;</div><div class="line"></div><div class="line">@Injectable()</div><div class="line">export class AuthGuard implements CanActivate, CanActivateChild &#123;</div><div class="line"></div><div class="line">  constructor(private auth : AuthService)&#123;&#125;</div><div class="line"></div><div class="line">  canActivate() &#123;</div><div class="line">    console.log(&apos;AuthGuard#canActivate called&apos;);</div><div class="line">    return this.auth.isLogin();</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  canActivateChild() &#123;</div><div class="line">	  console.log(&apos;AuthGuard#canActivateChild called&apos;);</div><div class="line">      return this.canActivate();</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>import shared module (app.module.ts)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">import &#123; AuthService &#125; from &apos;./shared/auth.service&apos;;</div><div class="line">import &#123; AuthGuard &#125; from &apos;./shared/authguard&apos;;</div></pre></td></tr></table></figure>
</li>
<li><p>definisikan di ngModule sebagai provider</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">@NgModule(&#123;</div><div class="line">  providers: [</div><div class="line">    AuthGuard, AuthService</div><div class="line">  ],</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
</li>
<li><p>implement ke routing (app.module.ts)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">const routingAplikasi: Routes = [</div><div class="line">  &#123; path: &quot;about&quot;, component: AboutComponent, canActivate : [AuthGuard] &#125;,</div><div class="line">  &#123; path: &quot;transaksi&quot;, redirectTo: &quot;/transaksi&quot;, pathMatch: &quot;full&quot;, canActivateChild : [AuthGuard]&#125;,</div><div class="line">  &#123; path: &quot;**&quot;, component: WelcomeComponent &#125;</div><div class="line">]</div></pre></td></tr></table></figure>
</li>
<li><p>implement ke routing (transaksi.module.ts)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">const routingTransaksi : Routes = [</div><div class="line">  &#123; path: &quot;transaksi/beli&quot;, component: BeliComponent, canActivate : [AuthGuard] &#125;,</div><div class="line">  &#123; path: &quot;transaksi/jual&quot;, component: JualComponent, canActivate : [AuthGuard] &#125;,</div><div class="line">  &#123; path: &quot;transaksi/rekap&quot;, component: RekapComponent &#125;</div><div class="line">]</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="Mengatur-kondisi-layout-jika-belum-login"><a href="#Mengatur-kondisi-layout-jika-belum-login" class="headerlink" title="Mengatur kondisi layout jika belum login"></a>Mengatur kondisi layout jika belum login</h2><p>Apabila anda ingin membuat suatu menu tidak ditampilkan jika belum login, anda dapat menggunakan fungsi <code>isLogin</code> yang telah kita buat tadi. Anda cukup menyisipkan menu yang tidak ingin ditampilkan diantara tag yang berisi kondisi isLogin. Berikut adalah contoh penggunaannya :<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">span</span> *<span class="attr">ngIf</span>=<span class="string">"authService.isLogin()"</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">routerLink</span>=<span class="string">"path"</span>&gt;</span>Menu yang tidak ingin ditampilkan<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;/<span class="name">span</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>Kemudian definisikan service pada konstruktor pada module.ts nya.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">constructor(private authService : AuthService) &#123; &#125;</div></pre></td></tr></table></figure></p>
<p>Jangan lupa di import AuthService nya</p>
<h1 id="Membuat-Form-Login"><a href="#Membuat-Form-Login" class="headerlink" title="Membuat Form Login"></a>Membuat Form Login</h1><ul>
<li><p>membuat component login form</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd shared</div><div class="line">ng g component login</div></pre></td></tr></table></figure>
</li>
<li><p>membuat html nya</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&lt;div class=&quot;container&quot;&gt;</div><div class="line">  &lt;form class=&quot;form-signin&quot;&gt;</div><div class="line">   &lt;h2 class=&quot;form-signin-heading&quot;&gt;Please sign in&lt;/h2&gt;</div><div class="line">   &lt;label for=&quot;username&quot; class=&quot;sr-only&quot;&gt;Username&lt;/label&gt;</div><div class="line">   &lt;input [(ngModel)]=&quot;username&quot; type=&quot;text&quot; id=&quot;username&quot; name=&quot;username&quot; class=&quot;form-control&quot; placeholder=&quot;Username&quot; required autofocus&gt;</div><div class="line">   &lt;label for=&quot;password&quot; class=&quot;sr-only&quot;&gt;Password&lt;/label&gt;</div><div class="line">   &lt;input [(ngModel)]=&quot;password&quot; type=&quot;password&quot; id=&quot;password&quot; name=&quot;password&quot; class=&quot;form-control&quot; placeholder=&quot;Password&quot; required&gt;</div><div class="line">   &lt;button class=&quot;btn btn-lg btn-primary btn-block&quot; (click)=login()&gt;Sign in&lt;/button&gt;</div><div class="line"> &lt;/form&gt;</div><div class="line">&lt;/div&gt;</div></pre></td></tr></table></figure>
</li>
<li><p>import shared.module</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">import &#123; FormsModule &#125; from &apos;@angular/forms&apos;;</div><div class="line">import &#123; LoginComponent &#125; from &apos;./login/login.component&apos;;</div></pre></td></tr></table></figure>
</li>
<li><p>definisikan</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">@NgModule(&#123;</div><div class="line">  imports: [</div><div class="line">    FormsModule</div><div class="line">  ],</div><div class="line">  declarations: [LoginComponent],</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
</li>
<li><p>import app.module</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">import &#123; LoginComponent &#125; from &apos;./shared/login/login.component&apos;;</div></pre></td></tr></table></figure>
</li>
<li><p>definisikan</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">@NgModule(&#123;</div><div class="line">  declarations: [LoginComponent],</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
</li>
<li><p>routing</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123; path: &quot;login&quot;, component: LoginComponent&#125;,</div></pre></td></tr></table></figure>
</li>
<li><p>method login login.component</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">username : string;</div><div class="line">password : string;</div><div class="line"></div><div class="line">login()&#123;</div><div class="line">  let apa = this.authService.login(this.username, this.password);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>constructor</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">constructor (private authService : AuthService)&#123;&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>import</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">import &#123; AuthService &#125; from &apos;../auth.service&apos;;</div></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="Membuat-Logout"><a href="#Membuat-Logout" class="headerlink" title="Membuat Logout"></a>Membuat Logout</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;li *ngIf=&quot;authService.isLogin()&quot;&gt;&lt;a (click)=&quot;logout()&quot;&gt;Keluar&lt;/a&gt;&lt;/li&gt;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">logout()&#123;</div><div class="line">  this.authService.logout();</div><div class="line">  this.router.navigate([&apos;login&apos;]);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">import &#123; AuthService &#125; from &apos;../shared/auth.service&apos;;</div><div class="line">import &#123; Router &#125;   from &apos;@angular/router&apos;;</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> Pemrograman </category>
            
            <category> Angular </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Service]]></title>
      <url>http://ciazhar.github.io/2017/05/09/pemrograman/angular2/4-Service/</url>
      <content type="html"><![CDATA[<p><img src="/images/angular.png" alt=""><br>Service ini pada dasarnya digunakan untuk membuat suatu layanan.</p>
<ul>
<li>Untuk membuat service dapat menggunakan perintah sebagai berikut :<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ng g service NAMA_SERVICE;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>Sebagai contoh kita akan membuat service di dalam transaksi.</p>
<ul>
<li><p>Struktur foldernya akan seperti berikut</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">transaksi</div><div class="line">├── beli</div><div class="line">│   ├── beli.component.css</div><div class="line">│   ├── beli.component.html</div><div class="line">│   ├── beli.component.spec.ts</div><div class="line">│   └── beli.component.ts</div><div class="line">├── jual</div><div class="line">│   ├── jual.component.css</div><div class="line">│   ├── jual.component.html</div><div class="line">│   ├── jual.component.spec.ts</div><div class="line">│   └── jual.component.ts</div><div class="line">├── rekap</div><div class="line">│   ├── rekap.component.css</div><div class="line">│   ├── rekap.component.html</div><div class="line">│   ├── rekap.component.spec.ts</div><div class="line">│   └── rekap.component.ts</div><div class="line">├── transaksi.module.ts</div><div class="line">├── transaksi.service.spec.ts</div><div class="line">└── transaksi.service.ts</div></pre></td></tr></table></figure>
</li>
<li><p>Pada file service.ts terdapat anotasi <code>@Injectable</code>. Anotasi ini berfungsi untuk menandai koding javascript agar langsung injek ketika proses compilasi berlangsung.</p>
</li>
<li><p>Buat methode sederhana untuk service(transaksi.service.ts)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">getDaftarTransaksi()&#123;</div><div class="line">  let dataTransaksi = [</div><div class="line">    &#123;tanggal : &quot;tanggal&quot;, keterangan : &quot;Saldo awal&quot;,nilai : 0, saldo : 0&#125;,</div><div class="line">    &#123;tanggal : &quot;tanggal&quot;, keterangan : &quot;Tambah&quot;,nilai : 10, saldo : 10&#125;,</div><div class="line">    &#123;tanggal : &quot;tanggal&quot;, keterangan : &quot;Kurang&quot;,nilai : 5, saldo : 5&#125;,</div><div class="line">    &#123;tanggal : &quot;tanggal&quot;, keterangan : &quot;Tambah&quot;,nilai : 20, saldo : 25&#125;</div><div class="line">  ];</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>Buat promise untuk menjembatani apabila service mengalami kegagalan dalam http request.(transaksi.service.ts)</p>
<figure class="highlight ts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">getDaftarTransaksi()&#123;</div><div class="line">  <span class="keyword">let</span> dataTransaksi = [</div><div class="line">    &#123;tanggal : <span class="string">"tanggal"</span>, keterangan : <span class="string">"Saldo awal"</span>,nilai : <span class="number">0</span>, saldo : <span class="number">0</span>&#125;,</div><div class="line">    &#123;tanggal : <span class="string">"tanggal"</span>, keterangan : <span class="string">"Tambah"</span>,nilai : <span class="number">10</span>, saldo : <span class="number">10</span>&#125;,</div><div class="line">    &#123;tanggal : <span class="string">"tanggal"</span>, keterangan : <span class="string">"Kurang"</span>,nilai : <span class="number">5</span>, saldo : <span class="number">5</span>&#125;,</div><div class="line">    &#123;tanggal : <span class="string">"tanggal"</span>, keterangan : <span class="string">"Tambah"</span>,nilai : <span class="number">20</span>, saldo : <span class="number">25</span>&#125;</div><div class="line">  ];</div><div class="line">  <span class="keyword">return</span> <span class="built_in">Promise</span>.resolve(dataTransaksi);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>Import service (transaksi.module.ts)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">import &#123; TransaksiService &#125; from &apos;./transaksi.service&apos;</div></pre></td></tr></table></figure>
</li>
<li><p>Definisikan pada ngModule sebagai provider (transaksi.module.ts)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">@NgModule(&#123;</div><div class="line">  provider:[</div><div class="line">    TransaksiService</div><div class="line">  ]  </div><div class="line">&#125;)</div></pre></td></tr></table></figure>
</li>
<li><p>Service telah siap digunakan. Kemudian kita akan menggunakanya di component rekap(rekap.component.ts)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">export class RekapComponent implements OnIt &#123;</div><div class="line"></div><div class="line">  dataTransaksi = [];</div><div class="line"></div><div class="line">  constructor(private transaksiService : TransaksiService)&#123;&#125;</div><div class="line"></div><div class="line">  ngOnIt()&#123;</div><div class="line">    this.transaksiService.getDaftarTransaksi().then(hasil =&gt; this.dataTransaksi = hasil)</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>Tampilkan hasilnya di UI(rekap.component.html)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">&lt;table class=&quot;table table-hover table-condensed table-striped&quot;&gt;</div><div class="line">  &lt;thead&gt;</div><div class="line">    &lt;tr&gt;</div><div class="line">      &lt;th&gt;Tanggal&lt;/th&gt;</div><div class="line">      &lt;th&gt;Keterangan&lt;/th&gt;</div><div class="line">      &lt;th&gt;Beli&lt;/th&gt;</div><div class="line">      &lt;th&gt;Jual&lt;/th&gt;</div><div class="line">      &lt;th&gt;Saldo&lt;/th&gt;</div><div class="line">    &lt;/tr&gt;</div><div class="line">  &lt;/thead&gt;</div><div class="line">  &lt;tbody&gt;</div><div class="line">    &lt;tr *ngFor=&quot;let transaksi of dataTransaksi&quot;&gt;</div><div class="line">      &lt;th&gt;&#123;&#123;transaksi.tanggal&#125;&#125;&lt;/th&gt;</div><div class="line">      &lt;th&gt;&#123;&#123;transaksi.keterangan&#125;&#125;&lt;/th&gt;</div><div class="line">      &lt;th&gt;&#123;&#123;transaksi.nilai&#125;&#125;&lt;/th&gt;</div><div class="line">      &lt;th&gt;&#123;&#123;transaksi.nilai&#125;&#125;&lt;/th&gt;</div><div class="line">      &lt;th&gt;&#123;&#123;transaksi.saldo&#125;&#125;&lt;/th&gt;</div><div class="line">    &lt;/tr&gt;</div><div class="line">  &lt;/tbody&gt;</div><div class="line">&lt;/table&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Pemrograman </category>
            
            <category> Angular </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Setup Project Hexo]]></title>
      <url>http://ciazhar.github.io/2017/05/07/pemrograman/hexo/1-Setup-Project-Hexo/</url>
      <content type="html"><![CDATA[<p><img src="/images/hexo.png" alt=""></p>
<h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
      
        <categories>
            
            <category> Pemrograman </category>
            
            <category> Hexo </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Introduction to Hexo]]></title>
      <url>http://ciazhar.github.io/2017/05/07/pemrograman/hexo/0-Introduction-to-Hexo/</url>
      <content type="html"><![CDATA[<p><img src="/images/hexo.png" alt=""></p>
<h1 id="Sekilas-tentang-Hexo"><a href="#Sekilas-tentang-Hexo" class="headerlink" title="Sekilas tentang Hexo"></a>Sekilas tentang Hexo</h1><p><a href="http://hexo.io/" target="_blank" rel="external">Hexo</a> merupakan suatu framework untuk mempermudah dalam membuat Blog atau Website probadi. Untuk mengulis konten pada Hexo, dapat menggunakan <a href="https://en.wikipedia.org/wiki/Markdown" target="_blank" rel="external">markdown</a> yang kemudian akan dicompile menjadi html. Untuk Layout dan Design dapat menggunkaan <a href="http://ejs.co/" target="_blank" rel="external">EJS</a>.</p>
<h1 id="Roadmap-Belajar-Hexo"><a href="#Roadmap-Belajar-Hexo" class="headerlink" title="Roadmap Belajar Hexo"></a>Roadmap Belajar Hexo</h1><ul>
<li><a href="">Setup Project Hexo</a></li>
<li><a href="">Menulis Konten pada Hexo</a></li>
<li><a href="">Mengganti Tema pada Hexo</a></li>
<li><a href="">Mengkonfigurasi Teman pada Hexo</a></li>
<li><a href="">Hosting Hexo ke Github Page</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> Pemrograman </category>
            
            <category> Hexo </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Introduction to Android]]></title>
      <url>http://ciazhar.github.io/2017/05/07/pemrograman/android/0-Introduction-to-Android/</url>
      <content type="html"><![CDATA[<p><img src="/images/android.png" alt=""></p>
<h1 id="Sekilas-tentang-Android"><a href="#Sekilas-tentang-Android" class="headerlink" title="Sekilas tentang Android"></a>Sekilas tentang Android</h1><p><a href="https://developer.android.com/" target="_blank" rel="external">Android</a> merupakan Sistem Operasi untuk mobile. Aplikasi android native sendiri dapat dibangun menggunakan XML(untuk design) dan Java(untuk logic). Pada Tutorial kali ini kita akan coba membuat aplikasi Android native.</p>
<h1 id="Roadmap-Belajar-Android-Native"><a href="#Roadmap-Belajar-Android-Native" class="headerlink" title="Roadmap Belajar Android Native"></a>Roadmap Belajar Android Native</h1><ul>
<li><a href="">Setup Project Android</a></li>
<li><a href="">View</a></li>
<li><a href="">Java</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> Pemrograman </category>
            
            <category> Android </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Routing]]></title>
      <url>http://ciazhar.github.io/2017/04/28/pemrograman/angular2/3-Routing/</url>
      <content type="html"><![CDATA[<p><img src="/images/angular.png" alt=""><br>Laman Web pada umumnya untuk berkomunikasi dengan menggunakan hyperlink. Sementara itu untuk berkomunikasi antar komponen, Angular menggunakan routing. Routing hampir seperti mapping di java. Untuk pergi ke komponen lain, jalurnya harus didefinisikan terlebih dahulu.<br>Routing sendiri berdasarkan letaknya dibedakan menjadi 2 yaitu routing Top Level Component dan routing Component pada Module.</p>
<h2 id="Routing-Top-Level-Component"><a href="#Routing-Top-Level-Component" class="headerlink" title="Routing Top Level Component"></a>Routing Top Level Component</h2><ol>
<li><p>Sebelum melakukan routing kita akan buat terlebih dahulu membuat top level componentnya, sebagai contoh kita akan membuat 2 buah component yaitu home dan help. Struktur foldernya akan menjadi seperti ini</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">app/</div><div class="line">├── app.component.css</div><div class="line">├── app.component.html</div><div class="line">├── app.component.spec.ts</div><div class="line">├── app.component.ts</div><div class="line">├── app.module.ts</div><div class="line">├── home</div><div class="line">│   ├── home.component.css</div><div class="line">│   ├── home.component.html</div><div class="line">│   ├── home.component.spec.ts</div><div class="line">│   └── home.component.ts</div><div class="line">├── help</div><div class="line">    ├── help.component.css</div><div class="line">    ├── help.component.html</div><div class="line">    ├── help.component.spec.ts</div><div class="line">    └── help.component.ts</div></pre></td></tr></table></figure>
</li>
<li><p>Selanjunya import <code>RouterModule</code> dan <code>Routes</code>  (app.module.ts)</p>
<figure class="highlight ts"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> &#123; RouterModule, Routes &#125; <span class="keyword">from</span> <span class="string">'@angular/router'</span>;</div></pre></td></tr></table></figure>
</li>
<li><p>Selanjutnya routing tiap module (app.module.ts)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">const routingAplikasi : Routes = [</div><div class="line">  &#123; path: &quot;help&quot;, component: HelpComponent &#125;,</div><div class="line">  &#123; path: &quot;**&quot;, component: HomeComponent &#125;</div><div class="line">]</div></pre></td></tr></table></figure>
</li>
</ol>
<p>Keteranga :<br>Routes diatas melakukan routing untuk HelpComponent ke url <code>help</code> dan WelcomeComponent ke url lainya.</p>
<ol>
<li><p>Inisialisasi router (app.module.ts)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">@NgModule(&#123;</div><div class="line">  ....</div><div class="line">  imports: [</div><div class="line">    ....</div><div class="line">    RouterModule.forRoot(routingAplikasi)</div><div class="line">  ],</div><div class="line">  ...</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
</li>
<li><p>Mapping router ke html menggunakan <code>routerLink</code></p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">routerLink</span>=<span class="string">"help"</span>&gt;</span>Help<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p>Menambahkan router outlet sebagai tempat keluarnya konten sehabis di routing.<br>(app.component.html)</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">router-outlet</span>&gt;</span><span class="tag">&lt;/<span class="name">router-outlet</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="Routing-Component-pada-Module"><a href="#Routing-Component-pada-Module" class="headerlink" title="Routing Component pada Module"></a>Routing Component pada Module</h2><ul>
<li><p>import RouterModule dan Routes (transaksi.module.ts)</p>
<figure class="highlight ts"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> &#123; RouterModule, Routes &#125; <span class="keyword">from</span> <span class="string">'@angular/router'</span>;</div></pre></td></tr></table></figure>
</li>
<li><p>buat Routes beserta path (transaksi.module.ts)</p>
<figure class="highlight ts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> routingTransaksi : Routes = [</div><div class="line">  &#123; path: <span class="string">"transaksi/beli"</span>, component: BeliComponent &#125;,</div><div class="line">  &#123; path: <span class="string">"transaksi/jual"</span>, component: JualComponent &#125;,</div><div class="line">  &#123; path: <span class="string">"transaksi/rekap"</span>, component: RekapComponent &#125;</div><div class="line">]</div></pre></td></tr></table></figure>
</li>
<li><p>Inisialisasi Routes (transaksi.module.ts)</p>
<figure class="highlight ts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@NgModule</span>(&#123;</div><div class="line">  ....</div><div class="line">  imports: [</div><div class="line">    RouterModule.forChild(routingTransaksi)</div><div class="line">  ]</div></pre></td></tr></table></figure>
</li>
<li><p>import TransaksiComponent(app.module.ts)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">import &#123; TransaksiModule &#125; from &apos;./transaksi/transaksi.module&apos;;</div></pre></td></tr></table></figure>
</li>
<li><p>tambah path untuk routing module(app.module.ts)</p>
<figure class="highlight ts"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123; path: <span class="string">"transaksi"</span>, redirectTo: <span class="string">"/transaksi"</span>, pathMatch: <span class="string">"full"</span>&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>Inisialisasi Routes (app.module.ts)</p>
<figure class="highlight ts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@NgModule</span>(&#123;</div><div class="line">  ....</div><div class="line">  imports: [</div><div class="line">    TransaksiModule,</div><div class="line">  ]</div></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Pemrograman </category>
            
            <category> Angular </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Component dan Module]]></title>
      <url>http://ciazhar.github.io/2017/04/28/pemrograman/angular2/2-Component-dan-Module/</url>
      <content type="html"><![CDATA[<p><img src="/images/angular.png" alt=""></p>
<h2 id="Komponen"><a href="#Komponen" class="headerlink" title="Komponen"></a>Komponen</h2><p>Komponen ini dapat digunakan untuk membuat suatu layout atau menu. Contoh komponen yang digunakan sebagai layout yaitu seperti navbar, sidebar dan footer. Ada juga komponen yang digunakan sebagai menu seperti beranda, pengaturan, profil dan sebagainya.<br>Untuk membuat componen dapat menggunakan perintah sebagai berikut :<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ng g component NAMA_COMPONENT</div></pre></td></tr></table></figure></p>
<p>Sehingga Struktur foldernya akan menjadi seperti :<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">app/</div><div class="line">├── app.component.css</div><div class="line">├── app.component.html</div><div class="line">├── app.component.spec.ts</div><div class="line">├── app.component.ts</div><div class="line">├── app.module.ts</div><div class="line">├── navbar</div><div class="line">|   ├── navbar.component.css</div><div class="line">|   ├── navbar.component.html</div><div class="line">|   ├── navbar.component.spec.ts</div><div class="line">|   └── navbar.component.ts</div><div class="line">├── sidebar</div><div class="line">|   ├── sidebar.component.css</div><div class="line">|   ├── sidebar.component.html</div><div class="line">|   ├── sidebar.component.spec.ts</div><div class="line">|   └── sidebar.component.ts</div><div class="line">├── footer</div><div class="line">    ├── footer.component.css</div><div class="line">    ├── footer.component.html</div><div class="line">    ├── footer.component.spec.ts</div><div class="line">    └── footer.component.ts</div></pre></td></tr></table></figure></p>
<h2 id="Membuat-Module"><a href="#Membuat-Module" class="headerlink" title="Membuat Module"></a>Membuat Module</h2><p>Module ini seperti package atau folder. Dia berfungsi untuk menampung beberapa component yang memiliki fungsi yang sama. Analoginya seperti suatu transaksi memiliki aksi seperti jual, beli &amp; rekap. Transaksi merupakan modulenya dan jual beli &amp; rekap adalah componentnya.<br>Untuk membuat module dapat menggunakan perintah sebagai berikut :<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ng g module NAMA_MODULE</div></pre></td></tr></table></figure></p>
<p>Setelah itu struktur foldernya akan seperti berikut<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">app/</div><div class="line">├── app.component.css</div><div class="line">├── app.component.html</div><div class="line">├── app.component.spec.ts</div><div class="line">├── app.component.ts</div><div class="line">├── app.module.ts</div><div class="line">├── navbar</div><div class="line">|   ├── navbar.component.css</div><div class="line">|   ├── navbar.component.html</div><div class="line">|   ├── navbar.component.spec.ts</div><div class="line">|   └── navbar.component.ts</div><div class="line">├── sidebar</div><div class="line">|   ├── sidebar.component.css</div><div class="line">|   ├── sidebar.component.html</div><div class="line">|   ├── sidebar.component.spec.ts</div><div class="line">|   └── sidebar.component.ts</div><div class="line">├── footer</div><div class="line">|    ├── footer.component.css</div><div class="line">|    ├── footer.component.html</div><div class="line">|    ├── footer.component.spec.ts</div><div class="line">|    └── footer.component.ts</div><div class="line">└── transaksi</div><div class="line">    └── transaksi.module.ts</div></pre></td></tr></table></figure></p>
<p>Kemudian kita buat beberapa component di dalamnya sehingga sebagai berikut<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">├── navbar</div><div class="line">|   ├── navbar.component.css</div><div class="line">|   ├── navbar.component.html</div><div class="line">|   ├── navbar.component.spec.ts</div><div class="line">|   └── navbar.component.ts</div><div class="line">├── sidebar</div><div class="line">|   ├── sidebar.component.css</div><div class="line">|   ├── sidebar.component.html</div><div class="line">|   ├── sidebar.component.spec.ts</div><div class="line">|   └── sidebar.component.ts</div><div class="line">├── footer</div><div class="line">|    ├── footer.component.css</div><div class="line">|    ├── footer.component.html</div><div class="line">|    ├── footer.component.spec.ts</div><div class="line">|    └── footer.component.ts</div><div class="line">└── transaksi</div><div class="line">    ├── jual</div><div class="line">    │   ├── jual.component.css</div><div class="line">    │   ├── beli.component.html</div><div class="line">    │   ├── beli.component.spec.ts</div><div class="line">    │   └── beli.component.ts</div><div class="line">    ├── beli</div><div class="line">    │   ├── beli.component.css</div><div class="line">    │   ├── beli.component.html</div><div class="line">    │   ├── beli.component.spec.ts</div><div class="line">    │   └── beli.component.ts</div><div class="line">    ├── rekap</div><div class="line">    │   ├── rekap.component.css</div><div class="line">    │   ├── rekap.component.html</div><div class="line">    │   ├── rekap.component.spec.ts</div><div class="line">    │   └── rekap.component.ts</div><div class="line">    └── transaksi.module.ts</div></pre></td></tr></table></figure></p>
<p>jual, beli dan rekap merupakan component dari module transaksi. Sedangkan navbar, sidebar dan footer dikenal sebagai layout component.</p>
]]></content>
      
        <categories>
            
            <category> Pemrograman </category>
            
            <category> Angular </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Setup Project Angular2]]></title>
      <url>http://ciazhar.github.io/2017/04/28/pemrograman/angular2/1-Setup-Project-Angular2/</url>
      <content type="html"><![CDATA[<p><img src="/images/angular.png" alt=""></p>
<h2 id="Menginstall-Node"><a href="#Menginstall-Node" class="headerlink" title="Menginstall Node"></a>Menginstall Node</h2><p>Untuk menginstall node saya menyarankan menggunakan tutorial dari <a href="https://www.digitalocean.com/community/tutorials/how-to-install-node-js-on-ubuntu-16-04" target="_blank" rel="external">Digital Ocean</a> dengan menggunakan nvm.</p>
<h1 id="Menginstall-npm"><a href="#Menginstall-npm" class="headerlink" title="Menginstall npm"></a>Menginstall npm</h1><p>Untuk menginstall npm cukup tulis kode berikut pada terminal anda (khusus untuk ubuntu):<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt install npm</div></pre></td></tr></table></figure></p>
<p>Atau apabila anda menggunakan Sistem Operasi yang lain anda bisa mencarinya di internet.</p>
<h2 id="Menginstall-Angular-CLI"><a href="#Menginstall-Angular-CLI" class="headerlink" title="Menginstall Angular CLI"></a>Menginstall Angular CLI</h2><p>Angular ini adalah salah satu tools untuk membuat aplikasi angular2. Untuk menggunakanya cukup tulis kode berikut pada terminal anda :<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install -g @angular/cli</div></pre></td></tr></table></figure></p>
<h2 id="Membuat-Project-Angular2"><a href="#Membuat-Project-Angular2" class="headerlink" title="Membuat Project Angular2"></a>Membuat Project Angular2</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ng new NAMA_PROJECT</div></pre></td></tr></table></figure>
<p>Setelah itu akan dibuat struktur folder sebagai berikut :<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div></pre></td><td class="code"><pre><div class="line">NAMA_FOLDER/</div><div class="line">├── .git</div><div class="line">│   ├── branches</div><div class="line">│   ├── COMMIT_EDITMSG</div><div class="line">│   ├── config</div><div class="line">│   ├── description</div><div class="line">│   ├── HEAD</div><div class="line">│   ├── hooks</div><div class="line">│   │   ├── applypatch-msg.sample</div><div class="line">│   │   ├── commit-msg.sample</div><div class="line">│   │   ├── post-update.sample</div><div class="line">│   │   ├── pre-applypatch.sample</div><div class="line">│   │   ├── pre-commit.sample</div><div class="line">│   │   ├── prepare-commit-msg.sample</div><div class="line">│   │   ├── pre-push.sample</div><div class="line">│   │   ├── pre-rebase.sample</div><div class="line">│   │   └── update.sample</div><div class="line">│   ├── index</div><div class="line">│   ├── info</div><div class="line">│   │   └── exclude</div><div class="line">│   ├── logs</div><div class="line">│   │   ├── HEAD</div><div class="line">│   │   └── refs</div><div class="line">│   │       └── heads</div><div class="line">│   │           └── master</div><div class="line">│   ├── objects</div><div class="line">│   │   ├── 82</div><div class="line">│   │   │   └── e3a754b6a0fcb238b03c0e47d05219fbf9cf89</div><div class="line">│   │   ├── e6</div><div class="line">│   │   │   └── 9de29bb2d1d6434b8b29ae775ad8c2e48c5391</div><div class="line">│   │   ├── f1</div><div class="line">│   │   │   └── 65300d6c67d5599ceb9b0ed355c2a8cbe336bf</div><div class="line">│   │   ├── info</div><div class="line">│   │   └── pack</div><div class="line">│   └── refs</div><div class="line">│       ├── heads</div><div class="line">│       │   └── master</div><div class="line">│       └── tags</div><div class="line">├── .gitignore</div><div class="line">└── NAMA_PROJECT</div><div class="line">    ├── .angular-cli.json</div><div class="line">    ├── e2e</div><div class="line">    │   ├── app.e2e-spec.ts</div><div class="line">    │   ├── app.po.ts</div><div class="line">    │   └── tsconfig.e2e.json</div><div class="line">    ├── .editorconfig</div><div class="line">    ├── .gitignore</div><div class="line">    ├── karma.conf.js</div><div class="line">    ├── package.json</div><div class="line">    ├── protractor.conf.js</div><div class="line">    ├── README.md</div><div class="line">    ├── src</div><div class="line">    │   ├── app</div><div class="line">    │   │   ├── app.component.css</div><div class="line">    │   │   ├── app.component.html</div><div class="line">    │   │   ├── app.component.spec.ts</div><div class="line">    │   │   ├── app.component.ts</div><div class="line">    │   │   └── app.module.ts</div><div class="line">    │   ├── assets</div><div class="line">    │   │   └── .gitkeep</div><div class="line">    │   ├── environments</div><div class="line">    │   │   ├── environment.prod.ts</div><div class="line">    │   │   └── environment.ts</div><div class="line">    │   ├── favicon.ico</div><div class="line">    │   ├── index.html</div><div class="line">    │   ├── main.ts</div><div class="line">    │   ├── polyfills.ts</div><div class="line">    │   ├── styles.css</div><div class="line">    │   ├── test.ts</div><div class="line">    │   ├── tsconfig.app.json</div><div class="line">    │   ├── tsconfig.spec.json</div><div class="line">    │   └── typings.d.ts</div><div class="line">    ├── tsconfig.json</div><div class="line">    └── tslint.json</div></pre></td></tr></table></figure></p>
<p>Pada Project tersebut terdapat beberapa file yaitu :</p>
<ul>
<li>angular-cli.json. File ini berisi konfigurasi dari tools angular cli.</li>
<li>package.json. File ini digenerate untuk setiap project yang menggunakan npm. Berisi konfigurasi dependency/library.</li>
<li>tsconfig.json. File ini berisi konfigurasi untuk typscript compiler. Terdapat <code>emitDecoratorMetadata</code> yang digunakan memproses decorator dimana fungsinya sama dengan anotation pada spring framework. Decorator berfungsi untuk mengkonversi Typescript ke Javascript. Terdapat juga <code>module</code> yang berisi module systemnya. Terdapat juga <code>target</code> untuk outputnya nanti menjadi apa. Terdapat juga <code>moduleResolution</code> untuk system modulnya. Terdapat juga <code>outDir</code> untuk compilenya kemana. Terdapat juga <code>sourceMap</code> untuk mapping hasil compile ke sourcecode aslinya.</li>
<li>node_module. Folder ini merupakan repository local yang berisi dependency yang telah didownload.</li>
<li>index.html. File ini merupaka html indexnya. Angular2 ini menggenerate Single Page Aplication. Jadi file html cuma 1 dan yang lainya JS.</li>
<li>main.ts. File ini merupaka main class nya.</li>
<li>style.css. File css untuk global.</li>
<li>app. Folder yang berisi sourcecode. Di folder ini terdapat beberapa file yaitu <code>.css</code> untuk cssnya, <code>.html</code> untuk templatenya, <code>.spec.ts</code> untuk testing, <code>.ts</code> untuk konfigurasi template dan ts, <code>module.ts</code> untuk modulenya (kalo di java seperti package).</li>
</ul>
<h2 id="Running-Project"><a href="#Running-Project" class="headerlink" title="Running Project"></a>Running Project</h2><p>Untuk running project dapat gunakan code berikut pada terminal<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd NAMA_PROJECT</div><div class="line">ng serve</div></pre></td></tr></table></figure></p>
<p>Hasilnya dapat anda lihat di browser pada <code>localhost:4200</code>.</p>
<h2 id="Build-Project"><a href="#Build-Project" class="headerlink" title="Build Project"></a>Build Project</h2><p>Untuk running project dapat gunakan code berikut pada terminal<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ng serve</div></pre></td></tr></table></figure></p>
<p>Hasilnya dapat anda lihat pada folder dist</p>
<h2 id="Flow-Angular2"><a href="#Flow-Angular2" class="headerlink" title="Flow Angular2"></a>Flow Angular2</h2><ol>
<li>main.ts akan dijalankan pertama kali. Di main.ts sendiri dia mengimport app.module.ts melalui koding <code>import { AppModule } from &#39;./app/app.module&#39;;</code>. Selain itu main.ts juga membootrap app.module.ts melalui koding <code>platformBrowserDynamic().bootstrapModule(AppModule);</code></li>
<li>Selanjutnya app.module.ts. Di app.module.ts dia terdapat <code>declaration</code> yang berisi kelas-kelas apa saja yang ada di modul ini. Selanjutnya ada <code>import</code> yang berisi kelas-kelas apa saja yang diimport. Selanjutnya ada <code>bootstrap</code> yang digunakan untuk menjalankan file (yaitu AppComponent).</li>
<li>Selanjutnya app.component.ts. Di app.component.ts terdapat <code>selector</code> yang digunakan untuk tag pada html. Jadi dia akan mencari tag di html (yaitu app-root), apabila ada maka dia akan menginjectkan templatenya ke dalam tag tersebut. Templatenya sendiri berasa dari <code>templateUrl</code>.</li>
<li>Selanjutnya app.component.html. Di app.component.html apabila ada variabel maka dia akan mengambilnya dari app.component.ts bagian export.</li>
</ol>
<h2 id="Install-Bootstrap"><a href="#Install-Bootstrap" class="headerlink" title="Install Bootstrap"></a>Install Bootstrap</h2><p>Step ini optional karena untuk css bisa pake framework yang lain atau menginputkan sendiri cssnya. Step ini hanya untuk mempermudah saja.<br>Untuk menginstallnya dapat menggunakan kode<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install ng2-bootstrap bootstrap --save</div></pre></td></tr></table></figure></p>
<p>Setelah itu includekan bootstrapnya ke file angular-cli.json.<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">"styles": [</div><div class="line">  "styles.css",</div><div class="line">  "../node_modules/bootstrap/dist/css/bootstrap.min.css"</div><div class="line">],</div></pre></td></tr></table></figure></p>
<h2 id="Arsitektur-Aplikasi-Angular2"><a href="#Arsitektur-Aplikasi-Angular2" class="headerlink" title="Arsitektur Aplikasi Angular2"></a>Arsitektur Aplikasi Angular2</h2><p>Arsitekturnya kurang lebih seperti berikut<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">Aplikasi</div><div class="line">├── Top Level Component</div><div class="line">├── Module</div><div class="line">    ├── Component</div><div class="line">        |── File Typescript/JS</div><div class="line">        |── File HTML</div></pre></td></tr></table></figure></p>
<p>Penjelasanya adalah setiap aplikasi terdiri dari satu atau lebih Component. Module yang tersusun dari satu atau lebih Component. Component sendiri dibuat berdasarkan file Typescript dan HTML. Berikut contoh sederhananya:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">Aplikasi Tabungan Emas</div><div class="line">├── Sidebar Component</div><div class="line">│   ├── Informasi Rekening</div><div class="line">│   ├── Transaksi Emas</div><div class="line">│   │   ├── Form</div><div class="line">│   │   ├── Rekap</div><div class="line">├── Navbar Component</div><div class="line">│   ├── Settings</div><div class="line">│   ├── Profile</div><div class="line">│   ├── Help</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> Pemrograman </category>
            
            <category> Angular </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Introduction to Angular2]]></title>
      <url>http://ciazhar.github.io/2017/04/28/pemrograman/angular2/0-Introduction-to-Angular2/</url>
      <content type="html"><![CDATA[<p><img src="/images/angular.png" alt=""></p>
<h1 id="Sekilas-tentang-Angular"><a href="#Sekilas-tentang-Angular" class="headerlink" title="Sekilas tentang Angular"></a>Sekilas tentang Angular</h1><p><a href="https://angular.io" target="_blank" rel="external">Angular</a> merupakan framework untuk membangun aplikasi frontend web, desktop dan mobile. Angular sendiri pada awalnya berbasis bahasa pemrograman <a href="https://www.javascript.com" target="_blank" rel="external">Javascript</a> tetapi kemudian mulai versi 2 keatas ditambahkan untuk bahasa pemrograman <a href="https://www.typescriptlang.org/" target="_blank" rel="external">Typescript</a>. Pada Tutorial kali ini kita akan coba membuat aplikasi angular untuk frontend web.</p>
<h1 id="Roadmap-Belajar-Angular"><a href="#Roadmap-Belajar-Angular" class="headerlink" title="Roadmap Belajar Angular"></a>Roadmap Belajar Angular</h1><ul>
<li><a href="">Setup Project Angular</a></li>
<li><a href="">Component dan Module</a></li>
<li><a href="">Routing Top Level Conponent</a></li>
<li>[Routing Module]</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Pemrograman </category>
            
            <category> Angular </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Jasper Report]]></title>
      <url>http://ciazhar.github.io/2017/04/23/pemrograman/spring/6-jasper-report/</url>
      <content type="html"><![CDATA[<p><img src="/images/springboot.png" alt=""></p>
<ol>
<li><p>Tambahkan dependency</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context-support<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.github.jpenren<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>thymeleaf-spring-data-dialect<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>net.sf.jasperreports<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jasperreports<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>6.3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.poi<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>poi<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>3.10.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p>Membuat file .jrxml menggunakan Jaspersoft Studio</p>
</li>
<li>Copy file ke resource/reports</li>
<li>tambahkan bean <code>JasperReportsViewResolver</code> ke konfigurasiweb<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Bean</span></div><div class="line">    <span class="function"><span class="keyword">public</span> JasperReportsViewResolver <span class="title">getJasperReportsViewResolver</span><span class="params">()</span></span>&#123;</div><div class="line">        JasperReportsViewResolver resolver = <span class="keyword">new</span> JasperReportsViewResolver();</div><div class="line">        resolver.setPrefix(<span class="string">"classpath:/reports/"</span>);</div><div class="line">        resolver.setSuffix(<span class="string">".jrxml"</span>);</div><div class="line">        resolver.setViewNames(<span class="string">"report_*"</span>);</div><div class="line">        resolver.setViewClass(JasperReportsMultiFormatView.class);</div><div class="line">        resolver.setOrder(<span class="number">0</span>);</div><div class="line">        <span class="keyword">return</span> resolver;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
</li>
</ol>
<ul>
<li>buat controllernya<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Controller</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BugReportController</span> </span>&#123;</div><div class="line">    <span class="meta">@Autowired</span> <span class="keyword">private</span> BugDao dao;</div><div class="line"></div><div class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/bug"</span>)</div><div class="line">    <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">generateAllBugReport</span><span class="params">(ModelAndView m,</span></span></div><div class="line">                                             @RequestParam(value = <span class="string">"format"</span>, required = <span class="keyword">false</span>) String format)&#123;</div><div class="line">        Iterable&lt;Bug&gt; data = dao.findAll();</div><div class="line">        m.addObject(<span class="string">"dataSource"</span>, data);</div><div class="line">        m.addObject(<span class="string">"tanggalUpdate"</span>, <span class="keyword">new</span> Date());</div><div class="line">        m.addObject(<span class="string">"format"</span>, <span class="string">"pdf"</span>);</div><div class="line"></div><div class="line">        <span class="keyword">if</span>(format != <span class="keyword">null</span> &amp;&amp; !format.isEmpty())&#123;</div><div class="line">            m.addObject(<span class="string">"format"</span>, format);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        m.setViewName(<span class="string">"report_bug"</span>);</div><div class="line">        <span class="keyword">return</span> m;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Pemrograman </category>
            
            <category> Spring </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Thymeleaf]]></title>
      <url>http://ciazhar.github.io/2017/04/23/pemrograman/spring/5-layout-dengan-thymeleaf/</url>
      <content type="html"><![CDATA[<p><img src="/images/springboot.png" alt=""></p>
<h1 id="Layout-dengan-Thymeleaf"><a href="#Layout-dengan-Thymeleaf" class="headerlink" title="Layout dengan Thymeleaf"></a>Layout dengan Thymeleaf</h1><p>  Thymeleaf adalah template engine untuk JVM. Dia support HTMl, XML, TEXT, CSS, JS, dan RAW. Thymeleaf emmpunya kemampuan yang dikenal dengan Natural Template yaitu dimana kita dapat membuat 2 buah value yang sama. Hal ini mempermudah antara designer dan programer agar dapat bekerja bersama. Ketika value dari backed belum ada designer dapat menggunakan value html.<br>    <figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"userName"</span> <span class="attr">value</span>=<span class="string">"James Carrot"</span> <span class="attr">th:value</span>=<span class="string">"$&#123;user.name&#125;"</span> /&gt;</span></div></pre></td></tr></table></figure></p>
<h1 id="Menggunakan-Thymeleaf"><a href="#Menggunakan-Thymeleaf" class="headerlink" title="Menggunakan Thymeleaf"></a>Menggunakan Thymeleaf</h1><p>  Tambahkan xmlns dibawah ini pada tag html<br>  <figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns:th</span>=<span class="string">"http://www.thymeleaf.org"</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h1 id="Expression-di-Thymeleaf"><a href="#Expression-di-Thymeleaf" class="headerlink" title="Expression di Thymeleaf"></a>Expression di Thymeleaf</h1><ul>
<li><p>Menampilkan pesan menggunakan <code>#{}</code><br>Contoh Menampilkan nama user yang sedang online</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:utext</span>=<span class="string">"#&#123;home.welcome($&#123;session.user.name&#125;)&#125;"</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p>Menampilkan variabel menggunakan <code>${}</code><br>contoh menggunakan th:each:</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">th:each</span>=<span class="string">"pesertas : $&#123;peserta&#125;"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">"$&#123;pesertas.nama&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">"$&#123;pesertas.email&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">"$&#123;pesertas.noHp&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">"$&#123;'/peserta/edit/'+pesertas.id&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-edit"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">"$&#123;'/peserta/hapus/'+pesertas.id&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-remove"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p>Menampilkan link url menggunakan <code>@{}</code>.<br>Contoh url dapat berasal dari mapping controller :</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/peserta&#125;"</span>&gt;</span>Daftar Peserta<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div></pre></td></tr></table></figure>
<p>Contoh url dapat berasal dari default folder :</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/css/bootstrap.min.css&#125;"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> /&gt;</span></div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="Template-Inheritance"><a href="#Template-Inheritance" class="headerlink" title="Template Inheritance"></a>Template Inheritance</h2><p>  Template Inheritance dapat menggunakan<br>  <figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">layout:fragment</span>=<span class="string">"content"</span>&gt;</span></div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> Pemrograman </category>
            
            <category> Spring </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Otorisasi Login dengan spring security]]></title>
      <url>http://ciazhar.github.io/2017/04/23/pemrograman/spring/4-otorisasi-login-dengan-spring-security/</url>
      <content type="html"><![CDATA[<p><img src="/images/springboot.png" alt=""></p>
<h1 id="Bikin-Otorisasi-Login"><a href="#Bikin-Otorisasi-Login" class="headerlink" title="Bikin Otorisasi Login"></a>Bikin Otorisasi Login</h1><ul>
<li><p>Tambahkan dependency (pom.xml)</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-security<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p>Bikin KonfigurasiSecurity (main/java/domain/config/KonfigurasiSecurity.java)</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Configuration</span></div><div class="line"><span class="meta">@EnableWebSecurity</span></div><div class="line"><span class="meta">@EnableGlobalMethodSecurity</span>(prePostEnabled = <span class="keyword">true</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">KonfigurasiSecurity</span> <span class="keyword">extends</span> <span class="title">WebSecurityConfigurerAdapter</span></span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String SQL_LOGIN</div><div class="line">            = <span class="string">"SELECT username,password, enable "</span> +</div><div class="line">            <span class="string">"FROM s_users WHERE username = ?"</span>;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String SQL_PERMISSION</div><div class="line">            = <span class="string">"SELECT u.username, r.nama as authority "</span> +</div><div class="line">            <span class="string">"FROM s_users u "</span> +</div><div class="line">            <span class="string">"JOIN s_user_role ur on u.id = ur.id_user "</span> +</div><div class="line">            <span class="string">"JOIN s_roles r on ur.id_role = r.id "</span> +</div><div class="line">            <span class="string">"WHERE u.username = ?"</span>;</div><div class="line"></div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    <span class="keyword">private</span> DataSource dataSource;</div><div class="line"></div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">configureGlobal</span><span class="params">(AuthenticationManagerBuilder auth)</span> <span class="keyword">throws</span> Exception</span>&#123;</div><div class="line"></div><div class="line">        <span class="comment">//setting security non database</span></div><div class="line">        auth</div><div class="line">                .inMemoryAuthentication()</div><div class="line">                .withUser(<span class="string">"ciazhar"</span>)</div><div class="line">                .password(<span class="string">"123"</span>)</div><div class="line">                .roles(<span class="string">"apa"</span>);</div><div class="line"></div><div class="line">        <span class="comment">///Setting security database</span></div><div class="line">        <span class="comment">/*auth</span></div><div class="line">                .jdbcAuthentication()</div><div class="line">                .dataSource(dataSource)</div><div class="line">                .usersByUsernameQuery(SQL_LOGIN)</div><div class="line">                .authoritiesByUsernameQuery(SQL_PERMISSION);*/</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">///konfigurasi web mana yg boleh diakses admin staf user dll</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception</span>&#123;</div><div class="line">        http</div><div class="line">                .authorizeRequests()</div><div class="line">                .antMatchers(<span class="string">"/css/**"</span>,<span class="string">"/js/**"</span>).permitAll()</div><div class="line">                .anyRequest().authenticated()</div><div class="line">                .and()</div><div class="line">                .formLogin()</div><div class="line">                .loginPage(<span class="string">"/login"</span>)</div><div class="line">                .defaultSuccessUrl(<span class="string">"/"</span>)</div><div class="line">                .permitAll()</div><div class="line">                .and()</div><div class="line">                .logout();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>Register UI(src/main/java/domain/config/KonfigurasiWeb.java)<br>Karena form login kita tidak menggunakan controller, maka harus didaftarkan terlebih dahulu.</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Configuration</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">KonfigurasiWeb</span> <span class="keyword">extends</span> <span class="title">WebMvcConfigurerAdapter</span></span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addViewControllers</span><span class="params">(ViewControllerRegistry registry)</span></span>&#123;</div><div class="line">        registry.addViewController(<span class="string">"/login"</span>).setViewName(<span class="string">"login"</span>);</div><div class="line">        registry.addViewController(<span class="string">"/materi/list"</span>).setViewName(<span class="string">"materi/listMateri"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>Bikin UI Login(main/resources/login.html)</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns:th</span>=<span class="string">"http://www.thymeleaf.org"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Log In<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- Bootstrap core CSS --&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/css/bootstrap.min.css&#125;"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/css/bootstrap-theme.min.css&#125;"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/css/signin.css&#125;"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> /&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></div><div class="line"></div><div class="line">      <span class="tag">&lt;<span class="name">form</span> <span class="attr">name</span>=<span class="string">"f"</span> <span class="attr">class</span>=<span class="string">"form-signin"</span>  <span class="attr">th:action</span>=<span class="string">"@&#123;/login&#125;"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">th:if</span>=<span class="string">"$&#123;param.error&#125;"</span> <span class="attr">class</span>=<span class="string">"alert alert-error"</span>&gt;</span></div><div class="line">          Invalid username and password.</div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">th:if</span>=<span class="string">"$&#123;param.logout&#125;"</span> <span class="attr">class</span>=<span class="string">"alert alert-success"</span>&gt;</span></div><div class="line">          You have been logged out.</div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">"form-signin-heading"</span>&gt;</span>Please sign in<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"username"</span> <span class="attr">class</span>=<span class="string">"sr-only"</span>&gt;</span>Username<span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">id</span>=<span class="string">"username"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">placeholder</span>=<span class="string">"Username"</span> <span class="attr">required</span>=<span class="string">"true"</span> <span class="attr">autofocus</span>=<span class="string">"true"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"password"</span> <span class="attr">class</span>=<span class="string">"sr-only"</span>&gt;</span>Password<span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">id</span>=<span class="string">"password"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">placeholder</span>=<span class="string">"Password"</span> <span class="attr">required</span>=<span class="string">"true"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-lg btn-primary btn-block"</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span>Sign in<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">form</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">"@&#123;/js/jquery.min.js&#125;"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">"@&#123;/js/bootstrap.min.js&#125;"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Pemrograman </category>
            
            <category> Spring </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Kardinalitas pada Spring Data JPA]]></title>
      <url>http://ciazhar.github.io/2017/04/23/pemrograman/spring/3.4-kardinalitas/</url>
      <content type="html"><![CDATA[<p><img src="/images/springboot.png" alt=""></p>
]]></content>
      
        <categories>
            
            <category> Pemrograman </category>
            
            <category> Spring </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[CRUD dengan Content digenerate di Client Side Menggunakan Spring Data JPA dan AngularJS]]></title>
      <url>http://ciazhar.github.io/2017/04/23/pemrograman/spring/3.2.3-generate-content-dari-client-side-dengan-AngularJS/</url>
      <content type="html"><![CDATA[<p><img src="/images/springboot.png" alt=""></p>
<h2 id="Memulai-AngularJS"><a href="#Memulai-AngularJS" class="headerlink" title="Memulai AngularJS"></a>Memulai AngularJS</h2><ul>
<li><p>Membuat file html (src/main/resources/templates/materi/listMateri.html)</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns:th</span>=<span class="string">"http://www.thymeleaf.org"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Daftar Materi<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">body</span> <span class="attr">ng-app</span>=<span class="string">""</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Daftar Materi<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">"@&#123;/js/angular.min.js&#125;"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p>Register view(src/main/java/domain/config/KonfigurasiWeb)</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">registry.addViewController(<span class="string">"/materi/list"</span>).setViewName(<span class="string">"materi/listMateri"</span>);</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="Binding"><a href="#Binding" class="headerlink" title="Binding"></a>Binding</h2><p>  Binding yaitu menggunakan data input untuk di outputkan secara dinamis(tanpa submit/client side). Prosesnya adalah user menginputkan data. Kemudian data itu disimpan ke sebuah variabel. Kemudian variabel itu dioutputkan lagi. Contoh<br>  <figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">ng-app</span>=<span class="string">""</span>&gt;</span></div><div class="line"></div><div class="line">  Nama anda : <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">ng-model</span>=<span class="string">"nama"</span>/&gt;</span></div><div class="line">  Selamat datang &#123;&#123;nama&#125;&#125;</div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">"@&#123;/js/angular.min.js&#125;"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h2 id="Menggunakan-scope"><a href="#Menggunakan-scope" class="headerlink" title="Menggunakan $scope"></a>Menggunakan $scope</h2><p>$scope digunakan untuk menghubungkan variabel di html dengan javascript.</p>
<h3 id="Mencetak-data-Array"><a href="#Mencetak-data-Array" class="headerlink" title="Mencetak data Array"></a>Mencetak data Array</h3><ul>
<li><p>(src/main/resources/templates/materi/listMateri.html)</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-controller</span>=<span class="string">"MateriController"</span>&gt;</span></div><div class="line">  Input Materi <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">ng-model</span>=<span class="string">"namaMateri"</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></div><div class="line">  Materi &#123;&#123;namaMateri&#125;&#125; berhasil diinput.</div><div class="line">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">ng-repeat</span>=<span class="string">"materi in daftarMateri"</span>&gt;</span>&#123;&#123;materi&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">"@&#123;/js/materi.js&#125;"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p>Membuat file JS(/src/main/resources/static/js/materi.js)</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> materiapp = angular.module (<span class="string">'materiapp'</span>,[]);</div><div class="line">materiapp.controller(<span class="string">'MateriController'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">$scope</span>)</span>&#123;</div><div class="line">    $scope.daftarMateri = [</div><div class="line">      <span class="string">'Java Fundamental'</span>,</div><div class="line">      <span class="string">'Spring Framework'</span></div><div class="line">    ];</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="Memasukkan-Data-ke-Array"><a href="#Memasukkan-Data-ke-Array" class="headerlink" title="Memasukkan Data ke Array"></a>Memasukkan Data ke Array</h3><ul>
<li><p>(src/main/resources/templates/materi/listMateri.html)</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">ng-click</span>=<span class="string">"tambahMateri()"</span>&gt;</span>Tambahkan<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p>(/src/main/resources/static/js/materi.js)</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$scope.tambahMateri = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">  $scope.daftarMateri.push($scope.namaMateri);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="Menghapus-Data-dari-Array"><a href="#Menghapus-Data-dari-Array" class="headerlink" title="Menghapus Data dari Array"></a>Menghapus Data dari Array</h3><ul>
<li><p>(src/main/resources/templates/materi/listMateri.html)</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">ng-click</span>=<span class="string">"tambahMateri()"</span>&gt;</span>Tambahkan<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p>(/src/main/resources/static/js/materi.js)</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$scope.tambahMateri = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">  $scope.daftarMateri.push($scope.namaMateri);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>-</p>
<h2 id="Generate-daftar-Materi"><a href="#Generate-daftar-Materi" class="headerlink" title="Generate daftar Materi"></a>Generate daftar Materi</h2><ul>
<li><p>membuat controller</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@RestController</span></div><div class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/api"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MateriApiController</span> </span>&#123;</div><div class="line">    <span class="meta">@Autowired</span> <span class="keyword">private</span> MateriDao md;</div><div class="line"></div><div class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"/materi"</span>, method = RequestMethod.GET)</div><div class="line">    <span class="function"><span class="keyword">public</span> Page&lt;Materi&gt; <span class="title">daftarMateri</span><span class="params">(Pageable page)</span></span>&#123;</div><div class="line">        <span class="keyword">return</span> md.findAll(page);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Keteranga :<br>Karena kita menggunakan RestController maka hasil output akan berupa rest(biasanya json).</p>
</li>
<li><p>javascript</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">materiapp.controller(<span class="string">'GenerateMateriController'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">$http, $scope</span>)</span>&#123;</div><div class="line">  $scope.daftarMateri = &#123;&#125;;</div><div class="line"></div><div class="line">  $scope.listMateri = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    $http.get(<span class="string">'/api/materi'</span>).then(sukses,gagal);</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">sukses</span>(<span class="params">response</span>)</span>&#123;</div><div class="line">      $scope.daftarMateri = response.data;</div><div class="line">      <span class="built_in">console</span>.log($scope.daftarMateri);</div><div class="line">    &#125;;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">gagal</span>(<span class="params">response</span>)</span>&#123;</div><div class="line">      <span class="built_in">console</span>.log(response);</div><div class="line">      alert(<span class="string">'Error'</span>+response);</div><div class="line">    &#125;;</div><div class="line">  &#125;;</div><div class="line">  $scope.listMateri();</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>Keterangan:<br>Kita membuat controller baru dengan nama GenerateMateriController. Lalu kita membuat daftarMateri sebagai penampung data json yang akan kita dapat dari <code>/api/materi</code> menggunakan fungsi listMateri.</p>
</li>
<li><p>html</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-controller</span>=<span class="string">"GenerateMateriController"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">thead</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>Kode<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>Nama<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">tr</span> <span class="attr">ng-repeat</span>= <span class="string">"materi in daftarMateri.content"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;materi.kode&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;materi.nama&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">table</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<p>Keterangan :<br>membuat div yang telah diinjek dengan GenerateMateriController. kemudian menggenerate materi dari daftarMateri menggunakan ng-repeat.</p>
</li>
</ul>
<h2 id="Menghapus-materi"><a href="#Menghapus-materi" class="headerlink" title="Menghapus materi"></a>Menghapus materi</h2><ul>
<li><p>membuat fungsi hapus (javascript)</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">$scope.hapusMateri = <span class="function"><span class="keyword">function</span>(<span class="params">materi</span>)</span>&#123;</div><div class="line">     $http.delete(<span class="string">'/api/materi/'</span>+materi.id).then(sukses, gagal);</div><div class="line">     <span class="function"><span class="keyword">function</span> <span class="title">sukses</span>(<span class="params">response</span>)</span>&#123;</div><div class="line">         $scope.listMateri();</div><div class="line">     &#125;</div><div class="line">     <span class="function"><span class="keyword">function</span> <span class="title">gagal</span>(<span class="params">response</span>)</span>&#123;</div><div class="line">         <span class="built_in">console</span>.log(response);</div><div class="line">         alert(<span class="string">'Error : '</span>+response);</div><div class="line">     &#125;;</div><div class="line"> &#125;;</div></pre></td></tr></table></figure>
</li>
<li><p>menambahkan button hapus (html)</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">ng-click</span>=<span class="string">"hapusMateri(materi)"</span>&gt;</span>hapus<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="Menyimpan-materi"><a href="#Menyimpan-materi" class="headerlink" title="Menyimpan materi"></a>Menyimpan materi</h2><ul>
<li><p>membuat fungsi simpan (javascript)</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">$scope.simpanMateri = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">  $http.post(<span class="string">'/api/materi'</span>, $scope.materi).then(sukses,gagal);</div><div class="line">  <span class="function"><span class="keyword">function</span> <span class="title">sukses</span>(<span class="params">response</span>)</span>&#123;</div><div class="line">     $scope.listMateri();</div><div class="line">  &#125;</div><div class="line">  <span class="function"><span class="keyword">function</span> <span class="title">gagal</span>(<span class="params">response</span>)</span>&#123;</div><div class="line">     <span class="built_in">console</span>.log(response);</div><div class="line">     alert(<span class="string">'Error : '</span>+response);</div><div class="line">   &#125;;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
</li>
<li><p>menambahkan form input (html)</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>Kode<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">ng-model</span>=<span class="string">"materi.kode"</span> <span class="attr">required</span>=<span class="string">"true"</span>/&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>Kode<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>Nama<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">ng-model</span>=<span class="string">"materi.nama"</span> <span class="attr">required</span>=<span class="string">"true"</span>/&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>Kode<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>&amp;nbsp;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">ng-click</span>=<span class="string">"simpanMateri()"</span>&gt;</span>Simpan<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>Kode<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Pemrograman </category>
            
            <category> Spring </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[CRUD dengan Content digenerate di Server Side Menggunakan Spring Data JPA dan Thymeleaf]]></title>
      <url>http://ciazhar.github.io/2017/04/23/pemrograman/spring/3.2.1-generate-content-dari-server-side-dengan-thymeleaf/</url>
      <content type="html"><![CDATA[<p><img src="/images/springboot.png" alt=""></p>
<ul>
<li><p>Membuat controller (src/main/java/domain/controller/PesertaPagingController.java)</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Controller</span></div><div class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/peserta"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PesertaPagingController</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    PesertaPagingDao pesertaPagingDao;</div><div class="line"></div><div class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/list"</span>)</div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">listPeserta</span><span class="params">(ModelMap modelMap)</span></span>&#123;</div><div class="line">        modelMap.put(<span class="string">"peserta"</span>,pesertaPagingDao.findAll());</div><div class="line">        <span class="keyword">return</span> <span class="string">"/peserta/list"</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"/form"</span>, method = RequestMethod.GET)</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">tampilkanForm</span><span class="params">(</span></span></div><div class="line">            @RequestParam(required = <span class="keyword">false</span>, name = <span class="string">"id"</span>) PesertaPaging peserta,</div><div class="line">            ModelMap mm)&#123;</div><div class="line">        <span class="keyword">if</span>(peserta != <span class="keyword">null</span>)&#123;</div><div class="line">            mm.addAttribute(<span class="string">"peserta"</span>, peserta);</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            mm.addAttribute(<span class="string">"peserta"</span>, <span class="keyword">new</span> PesertaPaging());</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"/form"</span>, method = RequestMethod.POST)</div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">prosesForm</span><span class="params">(@ModelAttribute @Valid PesertaPaging p, BindingResult hasilValidasi)</span></span>&#123;</div><div class="line">        <span class="keyword">if</span>(hasilValidasi.hasErrors())&#123;</div><div class="line">            <span class="keyword">return</span> <span class="string">"/peserta/form"</span>;</div><div class="line">        &#125;</div><div class="line">        pesertaPagingDao.save(p);</div><div class="line">        <span class="keyword">return</span> <span class="string">"redirect:list"</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"/hapus"</span>)</div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">hapusPeserta</span><span class="params">(@RequestParam(name = <span class="string">"id"</span>)</span>String id,ModelMap modelMap)</span>&#123;</div><div class="line">        pesertaPagingDao.delete(id);</div><div class="line">        <span class="keyword">return</span> <span class="string">"redirect:list"</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>Membuat UI untuk list(src/main/resources/templates/peserta/list.html)</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns:th</span>=<span class="string">"http://www.thymeleaf.org"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Aplikasi Spring Boot<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/css/bootstrap.min.css&#125;"</span>  <span class="attr">media</span>=<span class="string">"screen"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/css/starter-template.css&#125;"</span> <span class="attr">media</span>=<span class="string">"screen"</span>/&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">"navbar navbar-inverse navbar-fixed-top"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"navbar-header"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"navbar-toggle collapsed"</span> <span class="attr">data-toggle</span>=<span class="string">"collapse"</span> <span class="attr">data-target</span>=<span class="string">"#navbar"</span> <span class="attr">aria-expanded</span>=<span class="string">"false"</span> <span class="attr">aria-controls</span>=<span class="string">"navbar"</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"sr-only"</span>&gt;</span>Toggle navigation<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"icon-bar"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"icon-bar"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"icon-bar"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"navbar-brand"</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/&#125;"</span>&gt;</span>ciazhar<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"navbar"</span> <span class="attr">class</span>=<span class="string">"collapse navbar-collapse"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav navbar-nav"</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/peserta&#125;"</span>&gt;</span>Daftar Peserta<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#about"</span>&gt;</span>About<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#contact"</span>&gt;</span>Contact<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!--/.nav-collapse --&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Daftar Peserta<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">th:if</span>=<span class="string">"$&#123;not #lists.isEmpty(peserta)&#125;"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"table table-striped"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>Nama<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>Email<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>No Hp<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>Action<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">tr</span> <span class="attr">th:each</span>=<span class="string">"pesertas : $&#123;peserta&#125;"</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">"$&#123;pesertas.nama&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">"$&#123;pesertas.email&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">"$&#123;pesertas.noHp&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/peserta/form(id=$&#123;pesertas.id&#125;)&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-edit"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/peserta/hapus(id=$&#123;pesertas.id&#125;)&#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-remove"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">table</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/peserta/form&#125;"</span>&gt;</span>New<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">"@&#123;/js/jquery.min.js&#125;"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">"@&#123;/js/bootstrap.min.js&#125;"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p>Membuat UI untuk form(src/main/resources/templates/peserta/form.html)</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns:th</span>=<span class="string">"http://www.thymeleaf.org"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Aplikasi Spring Boot<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/css/bootstrap.min.css&#125;"</span>  <span class="attr">media</span>=<span class="string">"screen"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/css/starter-template.css&#125;"</span> <span class="attr">media</span>=<span class="string">"screen"</span>/&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">"navbar navbar-inverse navbar-fixed-top"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"navbar-header"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"navbar-toggle collapsed"</span> <span class="attr">data-toggle</span>=<span class="string">"collapse"</span> <span class="attr">data-target</span>=<span class="string">"#navbar"</span> <span class="attr">aria-expanded</span>=<span class="string">"false"</span> <span class="attr">aria-controls</span>=<span class="string">"navbar"</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"sr-only"</span>&gt;</span>Toggle navigation<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"icon-bar"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"icon-bar"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"icon-bar"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"navbar-brand"</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/&#125;"</span>&gt;</span>ciazhar<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"navbar"</span> <span class="attr">class</span>=<span class="string">"collapse navbar-collapse"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav navbar-nav"</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/peserta&#125;"</span>&gt;</span>Daftar Peserta<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#about"</span>&gt;</span>About<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#contact"</span>&gt;</span>Contact<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!--/.nav-collapse --&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Form Peserta<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-8"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">"form-horizontal"</span> <span class="attr">th:object</span>=<span class="string">"$&#123;peserta&#125;"</span> <span class="attr">th:action</span>=<span class="string">"@&#123;/peserta/form&#125;"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">th:field</span>=<span class="string">"*&#123;id&#125;"</span>/&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>Nama:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-10"</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">th:field</span>=<span class="string">"*&#123;nama&#125;"</span>/&gt;</span></div><div class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>Email:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-10"</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"email"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">th:field</span>=<span class="string">"*&#123;email&#125;"</span>/&gt;</span></div><div class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>Nomer HP:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-10"</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">th:field</span>=<span class="string">"*&#123;noHp&#125;"</span>/&gt;</span></div><div class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">class</span>=<span class="string">"btn btn-deffault"</span>&gt;</span>Simpan<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">form</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">"@&#123;/js/jquery.min.js&#125;"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">"@&#123;/js/bootstrap.min.js&#125;"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Pemrograman </category>
            
            <category> Spring </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Setup Project Untuk CRUD dengan Spring Data JPA]]></title>
      <url>http://ciazhar.github.io/2017/04/23/pemrograman/spring/3.0-setup-project-crud/</url>
      <content type="html"><![CDATA[<p><img src="/images/springboot.png" alt=""></p>
<h1 id="Setup-Project-untuk-CRUD"><a href="#Setup-Project-untuk-CRUD" class="headerlink" title="Setup Project untuk CRUD"></a>Setup Project untuk CRUD</h1><p>Pada tutorial kali ini kita akan melakukan Create Read Update Delete (CRUD) menggunakan Spring Data JPA. Kita akan menggunakan mysql untuk databasenya, jadi anda harus menginstallnya terlebih dahulu.<br>Berikut ini merupakan langkah-langkahnya :</p>
<h2 id="Pertama-tama-kita-akan-tambahkan-dependendcy-spring-data-jpa-pom-xml"><a href="#Pertama-tama-kita-akan-tambahkan-dependendcy-spring-data-jpa-pom-xml" class="headerlink" title="Pertama-tama kita akan tambahkan dependendcy spring data jpa (pom.xml)"></a>Pertama-tama kita akan tambahkan dependendcy spring data jpa (pom.xml)</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-jpa<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>6.0.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure>
<p>Untuk mencari dependency dapat dilihat di <a href="https://mvnrepository.com" target="_blank" rel="external">Maven Repostory</a></p>
<h2 id="Setting-Database-main-resources-application-properties"><a href="#Setting-Database-main-resources-application-properties" class="headerlink" title="Setting Database (main/resources/application.properties)"></a>Setting Database (main/resources/application.properties)</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="string">spring.datasource.url=jdbc:mysql://localhost:3306/pelatihan</span></div><div class="line"><span class="string">spring.datasource.username=pelatihanuser</span></div><div class="line"><span class="string">spring.datasource.password=pelatihanpasswd</span></div></pre></td></tr></table></figure>
<p>Keterangan :</p>
<ol>
<li><code>spring.datasource.url</code> merupakan url untuk database. Dalam pengisianya harap disesuaikan dengan jenis database, port pada perangkat, dan nama database yang telah dibuat. Pada contoh tersebut menggunakan jenis database (mysql), port pada perangkat (3306), dan nama database(pelatihan)</li>
<li><code>spring.datasource.username</code> merupakan username database.</li>
<li><code>spring.datasource.password</code> merupakan password database.</li>
</ol>
<h2 id="Membuat-Schema-CLI"><a href="#Membuat-Schema-CLI" class="headerlink" title="Membuat Schema (CLI)."></a>Membuat Schema (CLI).</h2><p>Untuk schema tetap harus dibuat manual. Berikut langkah-langkahnya untuk mysql.</p>
<ul>
<li>Login ke mysql. Jika sudah login dapat diabaikan langkah ini.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql -u root -p</div></pre></td></tr></table></figure>
<ul>
<li>Memasang otentifikasi database</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">grant all on pelatihan.* to pelatihanuser@localhost identified by &apos;pelatihanpasswd&apos;</div></pre></td></tr></table></figure>
<ul>
<li>Membuat database</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">create database pelatihan;</div></pre></td></tr></table></figure>
<h2 id="Meggunakan-MySQL-CLI"><a href="#Meggunakan-MySQL-CLI" class="headerlink" title="Meggunakan MySQL (CLI)"></a>Meggunakan MySQL (CLI)</h2><p>Berikut adalah sintaks yang akan sering digunakan dalam mysql.</p>
<ul>
<li>Menggunakan database</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">use pelatihan;</div></pre></td></tr></table></figure>
<ul>
<li>Melihat list tabel dalam database</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">show tables;</div></pre></td></tr></table></figure>
<ul>
<li>Melihat atribut pada tabel secara detail</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">show create table nama_tabel \G</div></pre></td></tr></table></figure>
<ul>
<li>Melihat data pada tabel</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">select * from nama_tabel</div></pre></td></tr></table></figure>
<ul>
<li>Menghapus data pada tabel</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">drop table peserta;</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> Pemrograman </category>
            
            <category> Spring </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[CRUD dengan Spring Data JPA]]></title>
      <url>http://ciazhar.github.io/2017/04/23/pemrograman/spring/3.1-crud-dengan-spring-data-jpa/</url>
      <content type="html"><![CDATA[<p><img src="/images/springboot.png" alt=""></p>
<h1 id="CRUD-menggunakan-Spring-Data-JPA"><a href="#CRUD-menggunakan-Spring-Data-JPA" class="headerlink" title="CRUD menggunakan Spring Data JPA"></a>CRUD menggunakan Spring Data JPA</h1><p>Untuk melakukan CRUD, setiap entitas didefinisikan dengan beberapa tahap yaitu :</p>
<ul>
<li>Membuat Model.<br>Di model ini akan terdapat atribut-atribut yang nantinya akan ditrasformasikan menjadi tabel pada Database.</li>
<li>Membuat DAO.<br>Dia yang bertugas mendefinisikan metode apa saja yang dibutuhkan oleh Controller.</li>
<li>Membuat Controller.<br>Controller ini berfungsi untuk mengatur apa yang akan ditampilkan ke view, apa yang akan disimpan ke database dan melakukan mapping url.</li>
<li>Membuat View (List dan Form).<br>View ini akan menjadi apa yang akan dilihat oleh user.<br>Jadi Struktur foldernya akan seperti ini :<br>Struktur foldernya akan seperti berikut :<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">src</div><div class="line"> └── main</div><div class="line"> |    ├── java</div><div class="line"> |       └── com</div><div class="line"> |           └── example</div><div class="line"> |               ├── DemoApplication.java</div><div class="line"> |               ├── controllers</div><div class="line"> |               ├── dao</div><div class="line"> |               └── model</div><div class="line"> └── resources</div><div class="line">         ├── application.properties</div><div class="line">         ├── static</div><div class="line">         │   ├── css</div><div class="line">         │   ├── fonts</div><div class="line">         │   └── js</div><div class="line">         └── templates</div></pre></td></tr></table></figure>
</li>
</ul>
<p>CRUD sendiri dapat dibagi menjadi 2 tipe tergantung dimana menggenerate contenya, yaitu client side dan server side.  Dalam mengiplementasikanya, bentuk Model dan Dao nya tetap sama, yang membedakan adalah controller dan viewnya saja.</p>
<h2 id="Membuat-Model"><a href="#Membuat-Model" class="headerlink" title="Membuat Model"></a>Membuat Model</h2><ul>
<li>Membuat class untuk model</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Entity</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Peserta</span> </span>&#123;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Keterangan :<br>Untuk setiap kelas yang ingin dibuat menjadi model, harus diberi anotasi <code>Entity</code> pada bagian atasnya.</p>
<ul>
<li>Menambahkan atribut</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Entity</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Peserta</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> String id;</div><div class="line">    <span class="keyword">private</span> String nama;</div><div class="line">    <span class="keyword">private</span> String email;</div><div class="line">    <span class="keyword">private</span> String noHp;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>Menambahkan validasi tiap atribut</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Entity</span> <span class="meta">@Table</span>(name = <span class="string">"tabel_peserta"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Peserta</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Id</span> <span class="meta">@GeneratedValue</span>(generator = <span class="string">"uuid"</span>)</div><div class="line">    <span class="meta">@GenericGenerator</span>(name = <span class="string">"uuid"</span>, strategy = <span class="string">"uuid2"</span>)</div><div class="line">    <span class="keyword">private</span> String id;</div><div class="line"></div><div class="line">    <span class="meta">@Column</span>(nullable=<span class="keyword">false</span>)</div><div class="line">    <span class="meta">@NotNull</span></div><div class="line">    <span class="meta">@NotEmpty</span></div><div class="line">    <span class="meta">@Size</span>(min = <span class="number">1</span>, max = <span class="number">150</span>)</div><div class="line">    <span class="keyword">private</span> String nama;  </div><div class="line"></div><div class="line">    <span class="meta">@Column</span>(nullable=<span class="keyword">false</span>,unique=<span class="keyword">true</span>)</div><div class="line">    <span class="meta">@Email</span></div><div class="line">    <span class="meta">@NotNull</span></div><div class="line">    <span class="meta">@NotEmpty</span></div><div class="line">    <span class="keyword">private</span> String email;</div><div class="line"></div><div class="line">    <span class="meta">@Column</span>(nullable=<span class="keyword">false</span>,unique=<span class="keyword">true</span>)</div><div class="line">    <span class="meta">@NotNull</span></div><div class="line">    <span class="meta">@NotEmpty</span></div><div class="line">    <span class="keyword">private</span> String noHp;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Keterangan :<br>Validasi di spring sendiri menggunkan JSR-303. Setiap variabel dapat didefinisikan secara spesifik menggunakan validasi. Sebagai Table, NotNull, NotEmpty dll.</p>
<ul>
<li>Menambahkan getter dan setter</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getId</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> id;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(String id)</span> </span>&#123;</div><div class="line">    <span class="keyword">this</span>.id = id;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getNama</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> nama;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setNama</span><span class="params">(String nama)</span> </span>&#123;</div><div class="line">    <span class="keyword">this</span>.nama = nama;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getEmail</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> email;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEmail</span><span class="params">(String email)</span> </span>&#123;</div><div class="line">    <span class="keyword">this</span>.email = email;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getNoHp</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> noHp;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setNoHp</span><span class="params">(String noHp)</span> </span>&#123;</div><div class="line">    <span class="keyword">this</span>.noHp = noHp;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="Membuat-DAO"><a href="#Membuat-DAO" class="headerlink" title="Membuat DAO"></a>Membuat DAO</h2><ul>
<li>Membuat interface dao dan menginherit class PagingAndSortingRepository</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">PesertaDao</span> <span class="keyword">extends</span> <span class="title">PagingAndSortingRepository</span>&lt;<span class="title">Peserta</span>, <span class="title">String</span>&gt;</span>&#123;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Keterangan :<br>Dengan menginherit class PagingAndSortingRepository kita dapat menggunakan method yang biasa digunakan untuk CRUD seperti findAll, findOne, save, delete dll.</p>
<ul>
<li>Membuat methode untuk searching (optional)</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">PesertaDao</span> <span class="keyword">extends</span> <span class="title">PagingAndSortingRepository</span>&lt;<span class="title">Peserta</span>, <span class="title">String</span>&gt;</span>&#123;</div><div class="line"></div><div class="line">  <span class="meta">@Query</span>(value = <span class="string">"select p from Peserta p where p.kelas.id = ?1 ORDER BY id_kelas"</span>)</div><div class="line">  <span class="function"><span class="keyword">public</span> Page&lt;Peserta&gt; <span class="title">findByKelasId</span><span class="params">(String id_kelas, Pageable pageable)</span></span>;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Keterangan :<br>Selain spring sudah mendefinisikan method yang sering digunakan, spring juga memperbolehkan kita untuk membuat method sesuai yang kita inginkan. Sebagai contoh diatas kita membuat Page yang berisi daftar peserta berdasar kelas tertentu. Dalam pembuatanya spring juga memperbolehkan menggunakan query sql atau query jpa.</p>
]]></content>
      
        <categories>
            
            <category> Pemrograman </category>
            
            <category> Spring </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Membuat Laman Web Sederhana denga Spring Boot dan Thymeleaf]]></title>
      <url>http://ciazhar.github.io/2017/04/23/pemrograman/spring/2-membuat-web-sederhana-dengan-spring-boot-starter-web-dan-thymeleaf/</url>
      <content type="html"><![CDATA[<p><img src="/images/springboot.png" alt=""><br><a href="https://ciazhar.github.io/2017/04/23/pemrograman/spring/1-setup-project/">Pada tutorial sebelumnya</a> kita sudah melakukan setup project spring pada perangkat anda. Sekarang kita akan coba melihat bagaimana aplikasi spring dibuat.<br>Untuk pertama kali kita akan coba membuat laman web sederhana. Langkah-langkahnya adalah sebagai berikut :</p>
<ul>
<li>Membuat controller sederhana (main/java/domain/Controllers/HaloController.java)<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Controller</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HaloController</span></span>&#123;</div><div class="line">  <span class="meta">@RequestMapping</span>(<span class="string">"/"</span>)</div><div class="line">  <span class="function"><span class="keyword">public</span> String <span class="title">halo</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="string">"index"</span>;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>Keterangan :</p>
<ol>
<li><code>@Controller</code> digunakan untuk menandai bahwa class <code>HaloController</code> adalah class controller</li>
<li><code>@RequestMapping</code> digunakan untuk melakukan mapping url pada metode bernama halo ke <code>/</code>. Kemudian controller itu akan di tampilkan pada view bernama <code>index</code>.</li>
</ol>
<ul>
<li>Membuat file HTML (main/resources/templates/index.html)<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns:th</span>=<span class="string">"http://www.thymeleaf.org"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Aplikasi Spring Boot<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/css/bootstrap.min.css&#125;"</span>  <span class="attr">media</span>=<span class="string">"screen"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/css/signin.css&#125;"</span> <span class="attr">media</span>=<span class="string">"screen"</span>/&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">"navbar navbar-inverse navbar-fixed-top"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"navbar-header"</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"navbar-toggle collapsed"</span> <span class="attr">data-toggle</span>=<span class="string">"collapse"</span> <span class="attr">data-target</span>=<span class="string">"#navbar"</span> <span class="attr">aria-expanded</span>=<span class="string">"false"</span> <span class="attr">aria-controls</span>=<span class="string">"navbar"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"sr-only"</span>&gt;</span>Toggle navigation<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"icon-bar"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"icon-bar"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"icon-bar"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">          <span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"navbar-brand"</span> <span class="attr">th:href</span>=<span class="string">"@&#123;/&#125;"</span>&gt;</span>ciazhar<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Aplikasi Spring Boot Dengan Thymeleaf<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">"@&#123;/js/jquery.min.js&#125;"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">"@&#123;/js/bootstrap.min.js&#125;"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
</ul>
<p>Keterangan :</p>
<ol>
<li><code>&lt;html xmlns:th=&quot;http://www.thymeleaf.org&quot;&gt;</code> menandai bahwa html itu menggunakan template engine thymeleaf</li>
<li><code>th:href</code> (jika di html bernama <code>href</code>) digunakan untuk menginjek css. css tersebut dapat di simpan di <code>src/main/resources/static/css</code>. Tetapi karena <code>src/main/resources/static</code> merupakan classpath maka untuk menginjeknya hanya perlu dari folder css saja. contoh : <code>&lt;link rel=&quot;stylesheet&quot; th:href=&quot;@{/css/bootstrap.min.css}&quot;  media=&quot;screen&quot;/&gt;</code><br>Selain itu kita juga dapat menggunakanya untuk melakukan link sesuai mapping di controller. contoh : <code>&lt;a class=&quot;navbar-brand&quot; th:href=&quot;@{/}&quot;&gt;ciazhar&lt;/a&gt;</code></li>
<li><code>th:src</code>(jika di html bernama <code>src</code>) digunakan untuk menginjek js. js tersebut dapat di simpan di <code>src/main/resources/static/js</code>. contoh : <code>&lt;script th:src=&quot;@{/js/jquery.min.js}&quot;&gt;&lt;/script&gt;</code></li>
</ol>
<ul>
<li>Memasang Library (/src/main/resources)<br>Jika kita lihat pada html diatas kita memerlukan beberapa library yaitu bootstrap dan jquery. Library tersebut dapat anda download di official masing-masing library tersebut. Kemudian masukkan ke /src/main/resources/css untuk file CSS dan /src/main/resources/js untuk file JS. Jika anda asset diinjek menggunakan CDN anda dapat melewati langkah berikut.</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Pemrograman </category>
            
            <category> Spring </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Android]]></title>
      <url>http://ciazhar.github.io/2017/04/23/pemrograman/android/1-view/</url>
      <content type="html"><![CDATA[<p><img src="/images/android.png" alt=""></p>
<h1 id="Android-for-Beginner"><a href="#Android-for-Beginner" class="headerlink" title="Android for Beginner"></a>Android for Beginner</h1><h2 id="Layouting"><a href="#Layouting" class="headerlink" title="Layouting"></a>Layouting</h2><h3 id="View"><a href="#View" class="headerlink" title="View"></a>View</h3><h4 id="Pengertian-View"><a href="#Pengertian-View" class="headerlink" title="Pengertian View"></a>Pengertian View</h4><p>View pada dasarnya adalah sebuah kotak yang berisi berbagai macam konten. Konten tersebut dapat berupa kalimat gambar, tulisan tombol dan sebagainya.</p>
<h4 id="Macam-macam-view-berdasar-kontenya"><a href="#Macam-macam-view-berdasar-kontenya" class="headerlink" title="Macam - macam view berdasar kontenya"></a>Macam - macam view berdasar kontenya</h4><ul>
<li>Text View</li>
<li>Image View</li>
<li>Button</li>
</ul>
<p>Dalam menuliskan pemrograman, kita diharuskan untuk menulis kode program sebagai instruksi yang spesifik dan detail.</p>
<p>IDE (Integrated Development Environment) merupakan suatu ruang kerja berupa perangkat lunak yang digunakan untuk menulis kode program. IDE yang biasa digunakan untuk menulis kode program android adalah Android Studio.</p>
<p>Bahasa yang digunakan untuk membuat view pada Android berupa XML.</p>
<p>Untuk menulis kode xml anda dapat menggunakan <a href="https://udacity.github.io/android-layout" target="_blank" rel="external">https://udacity.github.io/android-layout</a>.</p>
<p>Kode XML digambarkan sebagai berikut :<br>    <!--gambar video ke 10--><br>    <figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">	<span class="attr">android:text</span>=<span class="string">"Ini Text"</span></div><div class="line">	<span class="attr">android:textColor</span>=<span class="string">"@android:color/white"</span></div><div class="line">	<span class="attr">android:background</span>=<span class="string">"@android:color/black"</span></div><div class="line">	<span class="attr">android:layout_width</span>=<span class="string">"200dp"</span></div><div class="line">	<span class="attr">android:layout_height</span>=<span class="string">"300dp"</span></div><div class="line">/&gt;</div></pre></td></tr></table></figure></p>
<p>Kode tersebut memiliki ketentuan yaitu :</p>
<ul>
<li>Kode program ditulis di dalam tag. Tag didefinisikan dengan <code>&lt;&gt;</code> (kurung siku).</li>
<li>Terdapat 2 tag yaitu tag pembuka dan tag penutup. Perbedaan antara tag pembuka dan tag penutup terdapat tanda <code>/</code>(garis miring).<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">  <span class="attr">.....</span></div><div class="line">/&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>Tag juga bisa didefinisikan seperti berikut :<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">TextView</span>&gt;</span></div><div class="line">  ....</div><div class="line"><span class="tag">&lt;/<span class="name">TextView</span>&gt;</span></div></pre></td></tr></table></figure></p>
<ul>
<li>Terdapat nama tag yang mewakili view yang ingin dipakai. Dalam contoh diatas nama tag adalah TextView.</li>
<li>Terdapat atribut(-atribut) yang digunakan untuk mengcustom view tersebut. Semisal untuk konten, warna tinggi dll.</li>
<li>Setiap atribut memiliki nilai. Nilai mewakili apa yang akan dicustom pada setiap atribut. Nilai tersebut dipisahkan dari atributnya oleh tanda  <code>=</code> (samadengan) dan ditulis di dalam <code>&quot;&quot;</code> (tanda petik dua).</li>
</ul>
<h4 id="Text-View"><a href="#Text-View" class="headerlink" title="Text View"></a>Text View</h4><p>Macam macam atribut untuk text view :</p>
<ul>
<li>Menulis text</li>
</ul>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">  <span class="attr">android:text</span>=<span class="string">"tulis text anda di sini"</span></div><div class="line">/&gt;</div></pre></td></tr></table></figure>
<ul>
<li>Mengatur tinggi dan lebar layout</li>
</ul>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">  <span class="attr">android:height_layout</span>=<span class="string">"300dp"</span></div><div class="line">  <span class="attr">android:width_layout</span>=<span class="string">"300dp"</span></div><div class="line">/&gt;</div></pre></td></tr></table></figure>
<p>Satuan panjang (untuk panjang, tinggi dll) biasanya didefinisikan dengan satuan <code>dp</code>.<br>Atau untuk membuatnya menyesuaikan lebar dan tinggi text, anda dapat menggunakan mengisi nilainya dengan <code>wrap_content</code>.<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">  <span class="attr">android:height_layout</span>=<span class="string">"wrap_content"</span></div><div class="line">  <span class="attr">android:width_layout</span>=<span class="string">"wrap_content"</span></div><div class="line">/&gt;</div></pre></td></tr></table></figure></p>
<ul>
<li>Mengganti warna text</li>
</ul>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">  <span class="attr">android:textColor</span>=<span class="string">"@android:color/white"</span></div><div class="line">  <span class="attr">atau</span></div><div class="line">  <span class="attr">android:textColor</span>=<span class="string">"#Kode_hexa_desimal"</span></div><div class="line">/&gt;</div></pre></td></tr></table></figure>
<ul>
<li>Mengganti ukuran font</li>
</ul>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">  <span class="attr">android:textSize</span>=<span class="string">"30sp"</span></div><div class="line">/&gt;</div></pre></td></tr></table></figure>
<p>Satuan ukuran font didefinisikan dengan <code>sp</code>. Ukuran font dapat juga didefinisikan sebagai berikut :</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">  <span class="attr">android:textAppearance</span>=<span class="string">"?android:textAppearanceLarge"</span></div><div class="line">  <span class="attr">android:textAppearance</span>=<span class="string">"?android:textAppearanceMedium"</span></div><div class="line">  <span class="attr">android:textAppearance</span>=<span class="string">"?android:textAppearanceSmall"</span></div><div class="line">/&gt;</div></pre></td></tr></table></figure>
<ul>
<li>Referensi untuk design dapat dilihat di <a href="https://www.google.com/design/spec/material-design/introduction.html" target="_blank" rel="external">Material Design Spec</a> atau <a href="https://plus.google.com/+AndroidDevelopers" target="_blank" rel="external">google+ #AndroidDev #Protip</a></li>
</ul>
<h4 id="Image-view"><a href="#Image-view" class="headerlink" title="Image view"></a>Image view</h4><p>Macam-macam atribut untuk Image View :</p>
<ul>
<li>Memilih gambar dari resource/assets:</li>
</ul>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ImageView</span></span></div><div class="line">  <span class="attr">android:src</span>=<span class="string">"@drawable/ocean"</span></div><div class="line">/&gt;</div></pre></td></tr></table></figure>
<ul>
<li>Mengatur tinggi dan lebar layout</li>
</ul>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">  <span class="attr">android:height_layout</span>=<span class="string">"300dp"</span></div><div class="line">  <span class="attr">android:width_layout</span>=<span class="string">"300dp"</span></div><div class="line">/&gt;</div></pre></td></tr></table></figure>
<ul>
<li>Mengatur posisi dan skala gambar</li>
</ul>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ImageView</span></span></div><div class="line">  <span class="attr">android:scaleType</span>=<span class="string">"centerCrop"</span></div><div class="line">  <span class="attr">atau</span></div><div class="line">  <span class="attr">android:scaleType</span>=<span class="string">"center"</span></div><div class="line">/&gt;</div></pre></td></tr></table></figure>
<h3 id="Memposisikan-View"><a href="#Memposisikan-View" class="headerlink" title="Memposisikan View"></a>Memposisikan View</h3><h4 id="View-Group"><a href="#View-Group" class="headerlink" title="View Group"></a>View Group</h4><p>View group ini digunakan untuk mengelompokkan berbagai macam view. Jadi dia seperti <code>div</code> pada html. View group ini juga dapat didefinisikan sebagai parent sedangkan view didefinisikan sebagai child.<br>Kode XML dari view grup digambarkan sebagai berikut :<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">LinearLayout</span></span></div><div class="line">  <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></div><div class="line">  <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">  <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span>&gt;</div><div class="line">  <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">    <span class="attr">android:text</span>=<span class="string">"Guest List"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">    /&gt;</div><div class="line">  <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">    <span class="attr">android:text</span>=<span class="string">"Kunai"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">    /&gt;</div><div class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>Note :<br>Perlu diketahui setiap XML yang kita buat harus kita tambahkan <code>xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</code>. Kode tersebut biasa disebut <code>XML namespace declaration</code>. Ini digunkan untuk mendefinisikan bahwa XML kita digunakan untuk android.  </p>
<p>Macam-macam view grup :</p>
<ol>
<li>Linear Layout<br>View disusun secara berderet baik horizontal ataupun vertikal pada view grup. Untuk menggunakan Linear Layout cukup menggunakan tag <code>LinearLayout</code>.<ul>
<li>Vertical row, yaitu view yang disusun secara vertical atas-bawah. Untuk menggunakan vertical row cukup tambahkan atribut <code>android:orientation=&quot;vertical&quot;</code>.</li>
<li>Horizontal column, yaitu view yang disusun secara horizontal kanan-kiri. Untuk menggunakan horizontal column cukup tambahkan atribut <code>android:orientation=&quot;horizontal&quot;</code>.</li>
</ul>
</li>
</ol>
<p>Untuk mengatur panjang dan tinggi view dengan menyesuaikan parentnya dapat menggunakan sintaks sebagai berikut :<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">LinearLayout</span></span></div><div class="line">  <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></div><div class="line">  <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></div><div class="line">  <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">  <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">  &gt;</div><div class="line">  <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">    <span class="attr">android:text</span>=<span class="string">"Guest List"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">    /&gt;</div><div class="line">  <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">    <span class="attr">android:text</span>=<span class="string">"Kunai"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">    /&gt;</div><div class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>Pada kode diatas LinearLayout menggunakan match parent yang mengakibatkanya memiliki tinggi dan lebar sebesar resolusi layar. Begitu juga dengan text view yang menyesuaikan LinearLayout memiliki lebar sebesar layar.</p>
<p>Untuk mengatur proporsi pajang dan lebar antar view kita dapat menggunakan <code>android:layout_weight=&quot;1&quot;</code> dan setiap panjang dan lebar diatur ke 0dp. Berikut contohnya :<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">LinearLayout</span></span></div><div class="line">  <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></div><div class="line">  <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></div><div class="line">  <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">  <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">  &gt;</div><div class="line">  <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">    <span class="attr">android:text</span>=<span class="string">"Guest List"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"0dp"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"0dp"</span></div><div class="line">    <span class="attr">android:layout_weight</span>=<span class="string">"1"</span></div><div class="line">    /&gt;</div><div class="line">  <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">    <span class="attr">android:text</span>=<span class="string">"Kunai"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"0dp"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"0dp"</span></div><div class="line">    <span class="attr">android:layout_weight</span>=<span class="string">"1"</span></div><div class="line">    /&gt;</div><div class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div></pre></td></tr></table></figure></p>
<ol>
<li><p>Relative Layout<br>View disusun secara sembarang. Posisi view dapat dibagi menjadi yaitu bagian atas, kanan, kiri dan bawah.</p>
<ul>
<li>Relative to parent, yaitu view yang disusun relatif berdasarkan pada parent.</li>
</ul>
<p>Untuk mengatur konten posisi konten berdasar parentnya dapat menggunakan atribut</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">RelativeView</span>&gt;</span></div><div class="line">  ....</div><div class="line">  <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">    <span class="attr">android:layout_alignParentTop</span>=<span class="string">"true/false"</span></div><div class="line">    <span class="attr">android:layout_alignParentButton</span>=<span class="string">"true/false"</span></div><div class="line">    <span class="attr">android:layout_alignParentLeft</span>=<span class="string">"true/false"</span></div><div class="line">    <span class="attr">android:layout_alignParentRight</span>=<span class="string">"true/false"</span>&gt;</div><div class="line"><span class="tag">&lt;<span class="name">RelativeView</span>&gt;</span></div></pre></td></tr></table></figure>
<p>Untuk mengatur perataan konten dapat menggunakan</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">RelativeView</span>&gt;</span></div><div class="line">  ....</div><div class="line">  <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">    <span class="attr">android:layout_centerHorizontal</span>=<span class="string">"true/false"</span></div><div class="line">    <span class="attr">android:layout_centerVertical</span>=<span class="string">"true/false"</span>&gt;</div><div class="line"><span class="tag">&lt;/<span class="name">RelativeView</span>&gt;</span></div></pre></td></tr></table></figure>
<p>Posisi tersebut dapat dicustom sesuka hati dan dapat di mix and match. Semisal untuk pojok kiri atas maka yang top dan left diberi nilai true dan seterusnya.</p>
<ul>
<li>Relative to other child, yaitu view yang disusun relatif berdasarkan pada child lainya.</li>
</ul>
<p>Untuk mengatur konten posisi konten berdasar parentnya dapat menggunakan atribut</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">RelativeView</span>&gt;</span></div><div class="line">  ....</div><div class="line">  <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">    <span class="attr">android:layout_alignParentTop</span>=<span class="string">"true/false"</span></div><div class="line">    <span class="attr">android:layout_alignParentButton</span>=<span class="string">"true/false"</span></div><div class="line">    <span class="attr">android:layout_alignParentLeft</span>=<span class="string">"true/false"</span></div><div class="line">    <span class="attr">android:layout_alignParentRight</span>=<span class="string">"true/false"</span>&gt;</div><div class="line"><span class="tag">&lt;<span class="name">RelativeView</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
</ol>
<p><a href="https://icons8.com/android-icons/" target="_blank" rel="external">https://icons8.com/android-icons/</a></p>
]]></content>
      
        <categories>
            
            <category> Pemrograman </category>
            
            <category> Android </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Setup Project Spring Boot]]></title>
      <url>http://ciazhar.github.io/2017/04/23/pemrograman/spring/1-setup-project/</url>
      <content type="html"><![CDATA[<p><img src="/images/springboot.png" alt=""></p>
<h1 id="Setup-Development-Environment"><a href="#Setup-Development-Environment" class="headerlink" title="Setup Development Environment"></a>Setup Development Environment</h1><p>Untuk menggunakan Spring Boot anda perlu menginstall beberapa Development Environment. Diantaranya adalah :</p>
<ul>
<li>Java Development Kit (JDK atau openJDK)</li>
<li>Build Tools (Apache Maven atau Gradle)</li>
<li>IDE (IntellijIDEA atau Netbeans)</li>
</ul>
<h1 id="Setup-Project-Mengunakan-Spring-Initializer"><a href="#Setup-Project-Mengunakan-Spring-Initializer" class="headerlink" title="Setup Project Mengunakan Spring Initializer"></a>Setup Project Mengunakan Spring Initializer</h1><ul>
<li>Buka browser lalu masukkan url <code>http://start.spring.io/</code></li>
<li>Selanjutnya anda akan diminta untuk mengisi beberapa data yaitu :<ul>
<li>Tipe Project. Project dapat berupa maven atau gradle. Isi dengan Build tools yang sudah anda install di komputer anda.</li>
<li>Versi Spring. Pilih versi terbaru yang bukan SNAPSHOOT.</li>
<li>Project Metadata. Format pengisianya adalah sebagai berikut :<br>Group : com.nama.domain.anda (dipisah dengan titik)<br>Artifact : nama-aplikasi-anda (tidak boleh diberi spasi)</li>
<li>Dependencies. Isi dengan library yang anda butuhkan. Pada tutorial ini kita kan menggunakan <code>Thymeleaf</code> dan <code>Web</code>.</li>
</ul>
</li>
<li>Generate Project</li>
<li>Add project ke text editor</li>
</ul>
<h1 id="Struktur-Folder-Aplikasi-Spring-Boot"><a href="#Struktur-Folder-Aplikasi-Spring-Boot" class="headerlink" title="Struktur Folder Aplikasi Spring Boot"></a>Struktur Folder Aplikasi Spring Boot</h1><p>Struktur foldernya akan seperti berikut :<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">demo</div><div class="line">├── mvnw</div><div class="line">├── mvnw.cmd</div><div class="line">├── pom.xml</div><div class="line">└── src</div><div class="line">    ├── main</div><div class="line">    │   ├── java</div><div class="line">    │   │   └── com</div><div class="line">    │   │       └── example</div><div class="line">    │   │           └── DemoApplication.java</div><div class="line">    │   └── resources</div><div class="line">    │       ├── application.properties</div><div class="line">    │       ├── static</div><div class="line">    │       └── templates</div><div class="line">    └── test</div><div class="line">        └── java</div><div class="line">            └── com</div><div class="line">                └── example</div><div class="line">                    └── DemoApplicationTests.java</div></pre></td></tr></table></figure></p>
<p>Sebagai catatan struktur folder tersebut dapat berubah sesuai data yang anda masukkan saat membuat project.<br>Anda dapat menghapus mvnw dan mvn.cmd. Pada Project tersebut terdapat beberapa file yaitu :</p>
<ul>
<li>pom.xml. File ini merupakan konfigurasi dari Maven. Jika anda menggunakan Gradle maka yang dibuat adalah file .gradle.</li>
<li>Di dalam folder src/main/java/com/example terdapat file DemoApplication.java. File ini merupakan main file dari aplikasi spring boot anda.</li>
<li>Folder src/main/java/com/example sendiri digunakan untuk menampung file-file java.</li>
<li>Di dalam folder src/main/resources terdapat file application.properties. File ini digunakan untuk mengkonfigurasi aplikasi spring.</li>
<li>Folder src/main/respurces/static digunakan untuk menampung file static (hmtl, css dan js)</li>
<li>Folder src/main/respurces/templates digunakan untuk menampung file html yang menggunakan Thymeleaf.</li>
<li>Folder src/test/java/com/example digunakan untuk menampung file-file testing.</li>
</ul>
<h1 id="Running-Project"><a href="#Running-Project" class="headerlink" title="Running Project"></a>Running Project</h1><p>Untuk menjalankan project dapat menggunakan perintah berikut pada CLI<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mvn clean spring-boot:run</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> Pemrograman </category>
            
            <category> Spring </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Introduction to Spring]]></title>
      <url>http://ciazhar.github.io/2017/04/23/pemrograman/spring/0-introduction-to-spring-boot/</url>
      <content type="html"><![CDATA[<p><img src="/images/spring.png" alt=""></p>
<h1 id="Sekilas-tentang-Spring"><a href="#Sekilas-tentang-Spring" class="headerlink" title="Sekilas tentang Spring"></a>Sekilas tentang Spring</h1><p><a href="http://spring.io" target="_blank" rel="external">Spring Framework</a> merupakan suatu framework untuk mempermudah dalam membangun aplikasi berbasis enterprise menggunakan <a href="https://en.wikipedia.org/wiki/List_of_JVM_languages" target="_blank" rel="external">bahasa-bahasa JVM</a>. Secara konsep, project spring yang akan kita buat akan  menggunakan beberapa design pattern seperti <a href="">Model View Controller</a>, <a href="">Dependecy Injection</a>, <a href="">Aspec Oriented Programming</a>, <a href="">Object Relational Mapping</a> dan lainya. Apabila anda merasa asing dengan beberapa istilah tersebut, silahkan anda mencari referensi di internet karena kita tidak akan membahas terlalu detail mengenai beberapa istilah tersebut.<br>Pada Tutorial kali ini kita akan coba membuat aplikasi untuk backend web menggunakan Spring Framework.</p>
<h1 id="Roadmap-Belajar-Spring"><a href="#Roadmap-Belajar-Spring" class="headerlink" title="Roadmap Belajar Spring"></a>Roadmap Belajar Spring</h1><p>Berikut sekilas peta jalan yang akan kita pelajari untuk dapat membuat aplikasi spring :</p>
<ul>
<li><a href="https://ciazhar.github.io/2017/04/23/pemrograman/spring/1-setup-project/">Setup Project Spring Boot</a></li>
<li><a href="https://ciazhar.github.io/2017/04/23/pemrograman/spring/2-membuat-web-sederhana-dengan-spring-boot-starter-web-dan-thymeleaf/">Membuat Web Menggunakan Spring Boot dan Thyeleaf</a></li>
<li><a href="">Setup Project Untuk CRUD dengan Spring Data JPA dan MySQL</a></li>
<li><a href="https://ciazhar.github.io/2017/04/23/pemrograman/spring/3.1-crud-dengan-spring-data-jpa/">CRUD dengan Spring Data JPA</a></li>
<li><a href="https://ciazhar.github.io/2017/04/23/pemrograman/spring/3.2-generate-content-dari-server-side-dengan-thymeleaf/">Generate Content di Server Side Menggunakan Spring Data JPA dan Thymeleaf</a></li>
<li><a href="https://ciazhar.github.io/2017/04/23/pemrograman/spring/3.3-generate-content-dari-client-side-dengan-AngularJS/">Generate Content di Client Side Menggunakan  AngularJS</a></li>
<li><a href="">Kardinalitas pada Spring Data JPA</a></li>
<li><a href="">Konfigurasi yang sering digunakan untuk CRUD pada Spring Data JPA</a></li>
<li><a href="">Migrasi Database dengan FlywayDB</a></li>
<li><a href="https://ciazhar.github.io/2017/04/23/pemrograman/spring/4-otorisasi-login-dengan-spring-security/">Otoriasai login dengan Spring Security</a></li>
<li><a href="https://ciazhar.github.io/2017/04/23/pemrograman/spring/5-layout-dengan-thymeleaf/">Layouting dengan Thymeleaf</a></li>
<li><a href="https://ciazhar.github.io/2017/04/23/pemrograman/spring/6-jasper-report/">Membuat Report dengan Jasper Report</a></li>
<li><a href="">Oauth2 dengan Spring Security</a></li>
<li><a href="">Single Signed On dengan Spring Security</a></li>
<li><a href="">Stack untuk Spring Framework</a></li>
<li><a href="">Full Stack Application</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> Pemrograman </category>
            
            <category> Spring </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Bagian Processor]]></title>
      <url>http://ciazhar.github.io/2017/04/17/kuliah/orakom/orakom-bagian-processor/</url>
      <content type="html"><![CDATA[<h1 id="ALU-Arithmetic-and-Logic-Unit"><a href="#ALU-Arithmetic-and-Logic-Unit" class="headerlink" title="ALU (Arithmetic and Logic Unit)"></a>ALU (Arithmetic and Logic Unit)</h1><p>  ALU merupakan bagian pengolah biner di processor. ALU bertugas melalukan operasi aritmatika dan logika sesuai instruksi yang diberikan.</p>
<h1 id="Control-Unit"><a href="#Control-Unit" class="headerlink" title="Control Unit"></a>Control Unit</h1><p>  Control Unit bertugas memberikan arahan / kendali / kontrol terhadap operasi yang dilakukan oleh ALU</p>
<h1 id="Register"><a href="#Register" class="headerlink" title="Register"></a>Register</h1><p>  Register merupakan perangkat memori sementara yang menyimpan data dari suatu program yang sedang berjalan.</p>
]]></content>
      
        <categories>
            
            <category> Teknologi </category>
            
            <category> Organisasi dan Arsitektur Komputer </category>
            
        </categories>
        
        
        <tags>
            
            <tag> komputer </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Sistem Bilangan]]></title>
      <url>http://ciazhar.github.io/2017/04/17/kuliah/orakom/orakom-sistem-bilangan/</url>
      <content type="html"><![CDATA[<h1 id="Macam-macam-Sistem-Bilangan"><a href="#Macam-macam-Sistem-Bilangan" class="headerlink" title="Macam-macam Sistem Bilangan"></a>Macam-macam Sistem Bilangan</h1><ul>
<li>Biner (basis 2)<br>Simbol : 0,1</li>
<li>Oktal (basis 8)<br>Simbol : 0,1,2,3,4,5,6,7</li>
<li>Desimal (basis 10)<br>Simbol : 0,1,2,3,4,5,6,7,8.9</li>
<li>Heksal (basis 16)<br>Simbol : 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15</li>
</ul>
<h1 id="Konversi-antar-Sistem-Bilangan"><a href="#Konversi-antar-Sistem-Bilangan" class="headerlink" title="Konversi antar Sistem Bilangan"></a>Konversi antar Sistem Bilangan</h1><ul>
<li>Desimal ke Biner</li>
</ul>
<p>  Contoh : Semisal kita akan mengubah 123(10) ke biner. Hal pertama yang harus kita lakukan adalah membagi angka tersebut dengan 2, kemudian hasil pembagian kita taruh dibagian bawah. Dan apabila angka habis dibagi 2 maka kita tulis 0 dan apabila bersisa kita tulis 1 di bagian samping. Lakukan langkah tersebut secara berulang-ulang sampai hasilnya tidak bisa dibagi 2 lagi. Contohnya adalah sebagai berikut :<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">123</div><div class="line">--- =  1</div><div class="line">61</div><div class="line">--- = 1</div><div class="line">30</div><div class="line">--- = 0</div><div class="line">15</div><div class="line">--- = 1</div><div class="line">7</div><div class="line">--- = 1</div><div class="line">3</div><div class="line">--- = 1</div><div class="line">1</div></pre></td></tr></table></figure></p>
<p>  Dari hasil diatas kita dapatkan hasil 1 1 1 1 0 1 1 (dibaca dari bawah). Jadi biner dari 123 adalah 1111011.</p>
<ul>
<li>Biner ke Desimal</li>
</ul>
<p>  Contoh : Semisal kita akan mengubah 1111011(2) ke desimal. Hal pertama yang kita lakukan adalah mendefinisikan tiap digit dengan 2 pangkat nomer digit. Digit dihitung dari belakang. Contohnya adalah sebagai berikut :<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">2^6   2^5   2^4   2^3   2^2   2^1   2^0</div><div class="line">64    32    16    8     4     2     1</div><div class="line"></div><div class="line">1     1     1     1     0     1     1</div></pre></td></tr></table></figure></p>
<p>  Kemudian kita tambahkan tiap hasil dari 2 pangkat nomer digit yang bilangan binernya 1.<br>  64+32+16+8+4+2+1 = 123. Dari penjumlahan tersebut kita dapatkan hasil 123, jadi desimal dari 1111011 adalah 123.</p>
]]></content>
      
        <categories>
            
            <category> Teknologi </category>
            
            <category> Organisasi dan Arsitektur Komputer </category>
            
        </categories>
        
        
        <tags>
            
            <tag> komputer </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Bagaimana Perangkat Elektronik Berjalan ?]]></title>
      <url>http://ciazhar.github.io/2017/04/15/kuliah/orakom/orakom_bagaimana-perangkat-elektronik-berjalan/</url>
      <content type="html"><![CDATA[<p>Dalam kehidupan sehari-hari kita sering sekali menggunakan perangkat elektronik seperti komputer, laptop dan hp. Perangkat elektronik tersebut sudah didesain sedimikian rupa agar dapat nyaman berinteraksi dengan penggunanya, baik dari desain, perangkat input dll. Tetapi pernahkah anda berpikir bagaimana cara kerjanya alat-alat tersebut? Bagaimana data dari keyboard, mouse atau perangkat input lainya diproses ? Dan tentunya akan banyak sekali pertanyaan mengenai hal tersebut. Pada kesempatan ini saya akan sedikit menceritakan bagaimana proses data di perangkat elektronik tersebut.</p>
<h2 id="Proses-Booting"><a href="#Proses-Booting" class="headerlink" title="Proses Booting"></a>Proses Booting</h2><p>Hal pertama yang dilakukan perangkat saat proses booting adalah melakukan booting Sistem Operasi. Kemudian perangkat akan melakukan inisialisasi, yaitu melakukan checklist terhadap hardware yang terhubung dengan perangkat kita.</p>
<h2 id="Transfer-Data-pada-Komputer"><a href="#Transfer-Data-pada-Komputer" class="headerlink" title="Transfer Data pada Komputer"></a>Transfer Data pada Komputer</h2><p>Data yang kita inputkan melalui perangkat masukan sebenarnya adalah kumpulan pola arus listrik yang dikonversi menjadi kode biner. Secara teknis untuk tegangan 0 volt akan dikonversi menjadi kode biner 0 dan tegangan 5 volt akan dikonversi menjadi kode biner 1. Proses konversi dari arus listrik menjadi biner ini dilakukan oleh <code>Flip Flop</code> yang terdiri dari kumpulan gerbang logika. Data biner tersebut kemudian dibawa menuju <code>register</code> yang ada pada processor untuk disimpan. Setiap kode biner akan menghuni satu space register. Pengggambaran bagaimana data tersebut disimpan adalah seperti gambar di bawah ini :<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">_________________________________</div><div class="line">|       |       |       |       |</div><div class="line">|   1   |   2   |   3   |   4   | --&gt; Register</div><div class="line">|_______|_______|_______|_______|   </div><div class="line">|       |       |       |       |</div><div class="line">|   0   |   1   |   0   |   0   | --&gt; Biner</div><div class="line">|_______|_______|_______|_______|</div></pre></td></tr></table></figure></p>
<p>Lanjut, data yang ada pada register kemudian diproses, apakah akan dioutputkan atau akan disimpan sesuai dengan yang kita inginkan. Apabila ingin dioutputkan data akan ditransfer menuju perangkat keluaran yang dikehendaki, semisal layar monitor. Dan apabila ingin disimpan sebelumnya akan dikonversi menuju kode heksal. Proses konversi dari kode biner dan heksal dan sebaliknya dilakukan oleh Sistem Operasi.</p>
<p>Data pada hardisk yang berupa kode heksal apabila ingin diproses maka harus dikonversi kembali menjadi kode desimal. Data tersebut kemudian diteruskan melalui RAM dan berakhir di Processor. Dalam tahap pemrosesan data, data tadi akan disimpan sementara pada cache memory yang ada pada processor.</p>
]]></content>
      
        <categories>
            
            <category> Teknologi </category>
            
            <category> Organisasi dan Arsitektur Komputer </category>
            
        </categories>
        
        
        <tags>
            
            <tag> komputer </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Fill in form dan Function Key]]></title>
      <url>http://ciazhar.github.io/2017/04/14/kuliah/imk/ui-ux-fill-in-form-dan-function-key/</url>
      <content type="html"><![CDATA[<p><img src="/images/ui-ux/Ui-Ux.jpg" alt=""></p>
<h1 id="FILL-IN-FORM"><a href="#FILL-IN-FORM" class="headerlink" title="FILL IN FORM"></a>FILL IN FORM</h1><h2 id="Definisi-Fill-in-Form"><a href="#Definisi-Fill-in-Form" class="headerlink" title="Definisi Fill in Form :"></a>Definisi Fill in Form :</h2><p>   Sebuah tabel data yang diwajibkan diisi oleh user, data tersebut biasanya digunakan untuk sebuah pendaftaran.<br>   Data yang diinputkan umumnya banyak keakuratan data, misal fill in form memerintahkan user untuk memasukkan data pribadi ( nama, umur, jenis kelamin dst ).</p>
<h2 id="Hal-yang-perlu-diperhatikan-terkait-Fill-In-Form"><a href="#Hal-yang-perlu-diperhatikan-terkait-Fill-In-Form" class="headerlink" title="Hal yang perlu diperhatikan terkait Fill In Form :"></a>Hal yang perlu diperhatikan terkait Fill In Form :</h2><ul>
<li>Keyboard.</li>
<li>Kegunaan Tab atau Mouse untuk memindahkan cursor.</li>
<li>Maksud dari masing - masing field dan label.</li>
<li>Metode dalam mengoreksi kesalahan.</li>
<li>Kegunaan Enter dan Return.</li>
</ul>
<h2 id="Pedoman-dalam-membuat-Fill-Inform"><a href="#Pedoman-dalam-membuat-Fill-Inform" class="headerlink" title="Pedoman dalam membuat Fill Inform :"></a>Pedoman dalam membuat Fill Inform :</h2><ul>
<li>Berikan judul yang jelas dan memiliki arti.</li>
<li>Instruksi yang komprehensif.</li>
<li>Pengelompokkan dan pengurutan secara logikal.</li>
<li>Layout ( Desain tata letak ) yang mudah dilihat.</li>
<li>Berikan nama field yang dikenal secara umum.</li>
<li>Berikan tempat yang jelas untuk menginputkan data,</li>
<li>Pergerakan kursor yang nyaman.</li>
<li>Berikan koreksi eror / penanganan kesalahan untuk setiap karakter  tidak tepat yang diinputkan.</li>
<li>Sertakan informasi mengenai status pengisian form.</li>
</ul>
<h2 id="Kelebihan-Fill-In-Form"><a href="#Kelebihan-Fill-In-Form" class="headerlink" title="Kelebihan Fill In Form :"></a>Kelebihan Fill In Form :</h2><ul>
<li>Keterbiasaan Pengguna dalam Mengisi Form dapat mempermudah pengisian.</li>
<li>Beban memori rendah.</li>
<li>Perancangan yang mudah dengan berbagai alat/Software bantu perancangan tampilan.</li>
<li>Isian Formulir yang disederhanakan.</li>
</ul>
<h2 id="Kekurangan-Fill-In-Form"><a href="#Kekurangan-Fill-In-Form" class="headerlink" title="Kekurangan Fill In Form :"></a>Kekurangan Fill In Form :</h2><ul>
<li>Bila tak terbiasa, membutuhkan waktu bagi user untuk memahami dan mengisi form.</li>
<li>Jika Formulir bermenu datar, akan memakan ruang pada layar.</li>
<li>Pembuatan data pertanyaan harus logis dan tersusun dengan jelas jika tidak akan membuat user kebingungan.</li>
</ul>
<h1 id="FUNCTION-KEYS"><a href="#FUNCTION-KEYS" class="headerlink" title="FUNCTION KEYS"></a>FUNCTION KEYS</h1><h2 id="Pendahuluan"><a href="#Pendahuluan" class="headerlink" title="Pendahuluan :"></a>Pendahuluan :</h2><p>   Tahun 1986, IBM ( International Business Machine ) menambahkan beberapa tombol fungsi pada keyboard standard. Tombol ini dapat dipergunakan sebagai perintah khusus yang disertakan pada sistem operasi maupun aplikasi dan disebut function keys.<br>   Key Modal Styles : Penyampaian “aksi” melalui penekanan tombol-tombol yang diprogram sebelumnya untuk menjalankan perintah tertentu.</p>
<h2 id="Definisi"><a href="#Definisi" class="headerlink" title="Definisi :"></a>Definisi :</h2><p>  Tombol khusus yang terdapat pada keyboard yang memberikan masukan tanpa berhubungan dengan setiap karakter F1 s/d F12. Contoh Fungsi umumnya :<br>     <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">F1 = Help.</div><div class="line">F2 = Merubah nama file.</div><div class="line">F3 = Search.</div><div class="line">alt + F4 = Menutup program yang sedang berjalan.</div><div class="line">F5 = Refresh.</div><div class="line">F6 = Memindahkan kursor ke Address bar.</div><div class="line">F7 = memeriksa ejaan/tata bahasa (Ms. Word).</div><div class="line">F8 = Tombol fungsi yang digunakan untuk masuk ke menu startup windows, biasa digunakan masuk ke Windows Safe Mode.</div><div class="line">F9 = Untuk membuka toolbar Measurements pada Quark 5.0.</div><div class="line">shift + F10 = Menampilkan menu shortcut ( MS Word ).</div><div class="line">F11 = Full Screen pada browser.</div><div class="line">shift + F12 = Save As ( MS. Word ).</div></pre></td></tr></table></figure></p>
<h2 id="Kelebihan-Function-Keys"><a href="#Kelebihan-Function-Keys" class="headerlink" title="Kelebihan Function Keys :"></a>Kelebihan Function Keys :</h2><ul>
<li>Mempermudah pekerjaan.</li>
<li>Kecepatan yang lebih tinggi dan praktis.</li>
<li>Dapat menjadi pengganti input saat mouse sedang error.</li>
</ul>
<p>Kekurangan Function Keys :</p>
<ul>
<li>Jarang Digunakan dan Diketahui oleh pengguna - pengguna baru.</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Teknologi </category>
            
            <category> Interaksi Manusia dan Komputer </category>
            
        </categories>
        
        
        <tags>
            
            <tag> ui-ux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Kritik dan Saran terhadap Website KPM Udinus]]></title>
      <url>http://ciazhar.github.io/2017/04/11/kuliah/imk/Kritik-dan-Saran-terhadap-Website-KPM-Udinus/</url>
      <content type="html"><![CDATA[<h1 id="Sekilas-Tentang-KPM-UDINUS"><a href="#Sekilas-Tentang-KPM-UDINUS" class="headerlink" title="Sekilas Tentang KPM UDINUS"></a>Sekilas Tentang KPM UDINUS</h1><p>Kantor Penjaminan Mutu Univeristas Dian Nuswantoro adalah suatu badan internal di bawah Universitas Dian Nuswantoro yang bertujuan untuk mengembangkan sistem penjaminan mutu, menyelenggarakan sistem audit mutu internal dalam rangka pelaksanaan sistem penjaminan mutu dan menjamin perbaikan mutu secara terus menerus terhadap pencapaian kinerja penyelenggaraan pendidikan tinggi di Universitas Dian Nuswantoro.</p>
<h1 id="Kritik-dan-Saran"><a href="#Kritik-dan-Saran" class="headerlink" title="Kritik dan Saran"></a>Kritik dan Saran</h1><ul>
<li>Copyright telah kadaluarsa. Seharusnya selalu diperbaharui secara konsekuen. Kemudian perlu ditambahkan instansi (udinus) karena KPM sendiri berada di bawah udinus.</li>
</ul>
<p><img src="/images/kritik-kpm-udinus/copyright.png" alt=""></p>
<ul>
<li>Foto dari Anggota KPM tidak proporsional dan tidak rapi. Pada laman web terlalu kecil sedangkan pada mobile terlalu besar. Pada laman web foto tidak center dan penulisanya tidak rapi. Seharusnya kontenya dikonfigurasi agar progresive dan rapi. Kami menyarankan menggunakan grid system yang ada pada bootstrap agar lebih mudah dalam mengkonfigurasinya.</li>
</ul>
<p><img src="/images/kritik-kpm-udinus/foto.png" alt=""></p>
<ul>
<li>Tidak terdapat paging indeks halaman sehingga kontennya terlihat semua dan website terlihat tidak sedap di pandang mata. Seharusnya dikonfigurasi semisal untuk setiap laman hanya berisi 10 konten. Dan untuk mengakses konten lainya melalui indeks selanjutnya.</li>
</ul>
<p><img src="/images/kritik-kpm-udinus/index.png" alt=""></p>
<ul>
<li>Terdapat 2 tombol home pada halama utama yang membingungkan user. Seharusnya satu saja sudah cukup.</li>
</ul>
<p><img src="/images/kritik-kpm-udinus/home.png" alt=""></p>
<ul>
<li>Konten yang belum siap dipublikasikan sebaiknya tidak perlu di tampilkan di menu. (contohnya Pelatihan, Bantuan Teknis, Kunjungan dll)</li>
</ul>
<p><img src="/images/kritik-kpm-udinus/cp.png" alt=""></p>
<ul>
<li>Terdapat laman yang kontenya terlalu sepi, sehingga perlu ditambahkan konten lain yang relevan.</li>
</ul>
<p><img src="/images/kritik-kpm-udinus/lamankosong.png" alt=""></p>
<ul>
<li>Perlu ditambahkan fasilitash search untuk memudahkan user mencari konten yang dikehendaki.</li>
</ul>
<p><img src="/images/kritik-kpm-udinus/pencarian.png" alt=""></p>
<ul>
<li>Perlu dicantumkan kontak person pada bagian bawah web. Sehingga apabila terjadi permasalahan pada webiste dan sebagainya dapat langsung ditanggulangi. Seperti pada  <a href="http://kjm.ugm.ac.id/" target="_blank" rel="external">http://kjm.ugm.ac.id/</a></li>
</ul>
<p><img src="/images/kritik-kpm-udinus/kontak-person.png" alt=""></p>
<ul>
<li>Perlu ditambahkan jadwal agenda kegiatan mengenai kpm. Seperti pada <a href="http://kjm.ugm.ac.id/" target="_blank" rel="external">http://kjm.ugm.ac.id/</a></li>
</ul>
<p><img src="/images/kritik-kpm-udinus/agenda.png" alt=""></p>
<ul>
<li>Perlu ditambahkan laman mengenai sambutan ketua kpm untuk menambah kesan hangat kepada pengunjung  webste. Seperti pada <a href="http://kjm.ugm.ac.id/sambutan-rektor-universitas-gadjah-mada-prof-dr-pratikno-m-soc-sc/" target="_blank" rel="external">http://kjm.ugm.ac.id/sambutan-rektor-universitas-gadjah-mada-prof-dr-pratikno-m-soc-sc/</a></li>
</ul>
<p><img src="/images/kritik-kpm-udinus/sambutan-kepala.png" alt=""></p>
]]></content>
      
        <categories>
            
            <category> Teknologi </category>
            
            <category> Interaksi Manusia dan Komputer </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Bahasa Perintah dan Bahasa Alami]]></title>
      <url>http://ciazhar.github.io/2017/03/27/kuliah/imk/ui-ux_common-language-and-natural-language/</url>
      <content type="html"><![CDATA[<p><img src="/images/ui-ux/Ui-Ux.jpg" alt=""></p>
<h2 id="Pendahuluan"><a href="#Pendahuluan" class="headerlink" title="Pendahuluan"></a>Pendahuluan</h2><ul>
<li><p>Tujuan dasar bahasa</p>
<ul>
<li>presisi</li>
<li>kekompakan</li>
<li>kemudahan dalam penulisan dan pembacaan</li>
<li>mudah dipelajari</li>
<li>sederhana dan mengurangi kesalahan</li>
<li>mudah diingat</li>
</ul>
</li>
<li><p>Tujuan tingkat lebih tinggi</p>
<ul>
<li>Hubungan yang dekat antara realitas dan notasi.</li>
<li>Kemudahan dalam melaksanakan manipulasi yang relevan dengan tugas.</li>
<li>Kompatibilitas dengan notasi yang telah ada.</li>
<li>Fleksibilitas untuk mengakomodasi pemakai pemula dan ahli.</li>
<li>Ekspresif, mendukung kreativitas.</li>
<li>Daya tarik visual.</li>
</ul>
</li>
<li><p>Kendala-kendala penggunaan Bahasa</p>
<ul>
<li>kapasitas manusia mengingat notasi</li>
<li>kecocokan antara ingatan dan media penampil</li>
<li>kemudahan berbicara(mengucapkan)</li>
</ul>
</li>
<li><p>Bahasa komputer yang efektif<br>Bahasa komputer yang efektif harus tidak hanya merepresentasikan tugas pemakai dan memenuhi kebutuhan manusia untuk berkomunikasi, tetapi juga harus selaras dengan mekanisme perekaman, manipulasi, dan penampilannya di komputer.<br>Beberapa contoh bahasa yang efektif</p>
<ul>
<li>Bahasa pemrograman:<ul>
<li>Pemakaian noninteraktif: Fortran, COBOL, ALGOL, PL/I, Pascal.</li>
<li>Inkremental: BASIC, LISP, APL, PROLOG.</li>
<li>Kompilasi dan eksekusi cepat: C.</li>
<li>Pemrograman tim, sharing, reusability: ADA, C++.</li>
<li>Jaringan, cross-platform: Java.</li>
<li>Scripting World Wide Web: PHP, JavaScript, VBScript.</li>
</ul>
</li>
<li>Alamat World Wide Web.</li>
<li>Bahasa database query: SQL.</li>
<li>Bahasa perintah command line: perintah Unix, MS-DOS.</li>
</ul>
</li>
</ul>
<h2 id="Strategi-Organisasi-perintah"><a href="#Strategi-Organisasi-perintah" class="headerlink" title="Strategi Organisasi perintah"></a>Strategi Organisasi perintah</h2><ul>
<li>Simple command set<br>Setiap perintah dipilih untuk melaksanakan tugas (task) tunggal, jumlah perintah sama dengan jumlah tugas.<br>Contoh: vim editor (Unix):<br>0        : go to start of line<br>$        : go to end of line<br>(space)    : go right one space<br>H        : go left one space<br>W        : forward one word<br>b        : backward one word<br>)        : forward one sentence<br>(        : backward one sentence</li>
<li><p>Command plus arguments<br>Perintah diikuti argumen yang menunjukkan objek yang dimanipulasi.<br>Contoh:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">COPY FILEA FILEB</div><div class="line">DEL FILEA</div></pre></td></tr></table></figure>
<p>Label keyword dapat membantu untuk meningkatkan keterbacaan dan meniadakan urutan.</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"gbr.gif"</span> <span class="attr">width</span>=<span class="string">"40"</span> <span class="attr">height</span>=<span class="string">"5"</span> <span class="attr">alt</span>=<span class="string">"Gambar"</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p>Command plus options and arguments<br>Perintah dapat berisi options untuk menunjukkan kondisi khusus.<br>Jumlah argumen dan option yang banyak dapat meningkatkan tingkat kesalahan.<br>Contoh:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">DIR C:\WINDOWS\*.EXE /S/W/P/O-N</div><div class="line">ls -alF /home/agus</div></pre></td></tr></table></figure>
</li>
<li><p>Hierarchical command structure<br>Perangkat penuh perintah disusun menjadi struktur tree, seperti menu tree.<br>Contoh:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">Action    Object     Destination</div><div class="line">CREATE    File       File</div><div class="line">DISPLAY   Process    Local printer</div><div class="line">REMOVE    Directory  Screen</div><div class="line">COPY                 Remote  printer</div><div class="line">MOVE</div></pre></td></tr></table></figure>
<p>Contoh di atas menghasilkan struktur berarti bagi<br>5 × 3 × 4 = 60 tugas.</p>
</li>
</ul>
<h2 id="Manfaat-Struktur"><a href="#Manfaat-Struktur" class="headerlink" title="Manfaat Struktur"></a>Manfaat Struktur</h2><pre><code>- Manfaat struktur:
  - Membantu proses belajar manusia, pemecahan masalah, dan ingatan.
  - Membantu task concepts, computer concepts, dan rincian sintaktik bahasa perintah.
- Topik:
  - Urutan argumen yang konsisten
  - Simbol vs keyword
  - Struktur hierarkis dan kongruensi
</code></pre><h3 id="Urutan-Argumen-yang-konsistensi"><a href="#Urutan-Argumen-yang-konsistensi" class="headerlink" title="Urutan Argumen yang konsistensi"></a>Urutan Argumen yang konsistensi</h3><pre><code>Beberapa studi menunjukkan adanya manfaat urutan argumen yang konsisten.
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">Inconsistent order              Consistent order</div><div class="line"></div><div class="line">SEARCH file no, message id      SEARCH message id, file no</div><div class="line">TRIM message id, segment size   TRIM message id, segment size</div><div class="line">REPLACE message id, code no     REPLACE message id, code no</div><div class="line">INVERT group size, message id   INVERT message id, group size</div></pre></td></tr></table></figure>
</code></pre><h3 id="Simbol-Lawan-Keyword"><a href="#Simbol-Lawan-Keyword" class="headerlink" title="Simbol Lawan Keyword"></a>Simbol Lawan Keyword</h3><pre><code>Penggunaan keyword lebih mudah daripada simbol.
Pemakai berpengalaman dapat mengembangkan keterampilan untuk menggunakan notasi aneh sehingga variasi sintaktik tidak banyak berpengaruh.
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">Symbol Editor                Keyword Editor</div><div class="line"></div><div class="line">FIND:/TOOTH/-1               BACKWARD TO “TOOTH”</div><div class="line">LIST;10                      LIST 10 LINES</div><div class="line">RS:/KO/,/OK/;*               CHANGE ALL “KO” TO “OK”</div></pre></td></tr></table></figure>
</code></pre><h3 id="Struktur-Hierarkis-dan-Kongruensi"><a href="#Struktur-Hierarkis-dan-Kongruensi" class="headerlink" title="Struktur Hierarkis dan Kongruensi"></a>Struktur Hierarkis dan Kongruensi</h3><pre><code>Kongruen: pasangan yang berlawanan secara selaras dan berarti (simetris).
Struktur hierarkis dan kongruensi dapat membantu ingatan pemakai.
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">Congruent</div><div class="line">Hierarchical           Nonhierarchical</div><div class="line">MOVE ROBOT FORWARD     ADVANCE</div><div class="line">MOVE ROBOT BACKWARD    RETREAT</div><div class="line">MOVE ARM FORWARD       PUSH</div><div class="line">MOVE ARM BACKWARD      PULL</div><div class="line">MOVE ARM RIGHT         SWING OUT</div><div class="line">MOVE ARM LEFT          SWING IN</div><div class="line"></div><div class="line">Noncongruent</div><div class="line">Hierarchical           Nonhierarchical</div><div class="line">MOVE ROBOT FORWARD     GO</div><div class="line">CHANGE ROBOT BACKWARD  BACK</div><div class="line">CHANGE ARM FORWARD     POKE</div><div class="line">MOVE ARM BACKWARD      PULL</div><div class="line">CHANGE ARM RIGHT       PIVOT</div><div class="line">MOVE ARM LEFT          SWEEP</div></pre></td></tr></table></figure>
</code></pre><h3 id="Ringkasan-Manfaat-Struktur"><a href="#Ringkasan-Manfaat-Struktur" class="headerlink" title="Ringkasan Manfaat Struktur"></a>Ringkasan Manfaat Struktur</h3><pre><code>Sumber struktur yang terbukti bermanfaat meliputi:
- Konsistensi posisi
- Konsistensi tatabahasa
- Pasangan yang kongruen
- Bentuk hierarkis
</code></pre><h2 id="Penamaan-perintah"><a href="#Penamaan-perintah" class="headerlink" title="Penamaan perintah"></a>Penamaan perintah</h2><p>  Penamaan penting untuk proses belajar, pemecahan masalah, dan ingatan.<br>  Ketertentuan (specificity) vs keumuman (generality):</p>
<ul>
<li>Istilah-istilah yang spesifik lebih deskriptif dan lebih mudah diingat.</li>
<li><p>Istilah-istilah yang umum lebih dikenal dan mudah diterima.<br>Contoh pengujian untuk menambah dan menghapus teks (Black &amp; Moran):</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">Infrequent, discriminating words      insert    delete</div><div class="line">Frequent, discriminating words        add       remove</div><div class="line">Infrequent, nondiscriminating words   amble     perceive</div><div class="line">Frequent, nondiscriminating words     walk      view</div><div class="line">General words (frequent, nondiscr.)   alter     correct</div><div class="line">Nondiscriminating nonwords (nonsense) GAC       MIK</div><div class="line">Discriminating nonwords (icons)       abc-adbc  abc-ac</div></pre></td></tr></table></figure>
<p>Paling baik: “infrequent, discriminating”<br>Paling buruk: general words.<br>Nonsense cukup baik!</p>
<h2 id="Penyingkatan-Perintah"><a href="#Penyingkatan-Perintah" class="headerlink" title="Penyingkatan Perintah"></a>Penyingkatan Perintah</h2></li>
<li>Pemotongan sederhana.<br>directory -&gt; dir, delete -&gt; del.</li>
<li>Buang huruf hidup dengan pemotongan sederhana.<br>check disk -&gt; chkdsk, move -&gt; mv.</li>
<li>Huruf pertama dan terakhir.<br>sort -&gt; ST, block -&gt; BK.</li>
<li>Huruf awal setiap kata dalam frase.<br>change directory -&gt; cd, switch user -&gt; su.</li>
<li>Singkatan standar dari konteks lain.<br>quantity -&gt; QTY, transfer -&gt;  XFER,<br>backup -&gt; BAK.</li>
<li>Fonik: fokus pada suara.<br>execute -&gt; XQT, I seek you -&gt; ICQ,<br>connection -&gt; CNXN.</li>
</ul>
<h2 id="Menu-perintah"><a href="#Menu-perintah" class="headerlink" title="Menu perintah"></a>Menu perintah</h2><pre><code>Untuk mengatasi beban penghafalan perintah, beberapa perancang memberikan daftar perintah yang tersedia, dalam format yang disebut menu perintah.
Contoh:
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">Lynx</div><div class="line">  H)elp O)ptions P)rint G)o M)ain screen Q)uit /=search [delete]=history list</div><div class="line"></div><div class="line">Pico</div><div class="line">	^G Get Help  ^O Writeout  ^R Read File</div><div class="line">  ^X Exit      ^J Justify   ^W Where is</div><div class="line"></div><div class="line">WordStar</div><div class="line">	    --Cursor Movement--     | -Delete-</div><div class="line">^S char left ^D char right    |^G char</div><div class="line">^A word left ^F word right    |DEL chr lf</div><div class="line">^E line up   ^X line down     | ^T word rt</div><div class="line">      --Scrolling–-           |^Y line</div><div class="line">^Z line down ^W line up       |</div><div class="line">^C screen up ^R screen down   |</div></pre></td></tr></table></figure>
</code></pre><h2 id="Bahasa-Alami-di-dalam-komputer"><a href="#Bahasa-Alami-di-dalam-komputer" class="headerlink" title="Bahasa Alami di dalam komputer"></a>Bahasa Alami di dalam komputer</h2><ul>
<li>Natural-language interaction<br>Operasi komputer menggunakan bahasa alami manusia (mis. Inggris) untuk memberi instruksi dan menerima respons.</li>
<li>Natural-language queries<br>Operasi pada database relasional.<br>Masih lebih buruk daripada SQL.<br>Contoh: INTELLECT, Symantec Q&amp;A.</li>
<li>Text-database searching<br>Untuk mencari database tekstual.<br>Contoh: Ask Jeeves (ask.com).</li>
<li>Natural-language text generation<br>Digunakan untuk laporan (mis. Prakiraan cuaca, laboratorium medis).<br>Di sisi artistik dapat menghasilkan puisi dan novel.</li>
<li>Adventure and educational games<br>Pemakai menyatakan gerakan dan perintah dengan bahasa alami.<br>Menarik karena sistem tak dapat diramalkan dan perlu dijelajahi.</li>
</ul>
<h2 id="Pedoman-bahasa-perintah"><a href="#Pedoman-bahasa-perintah" class="headerlink" title="Pedoman bahasa perintah"></a>Pedoman bahasa perintah</h2><ul>
<li>Buat model objek dan aksi yang eksplisit.</li>
<li>Pilih nama yang berarti, spesifik, dan dapat dibedakan.</li>
<li>Coba mencapai struktur hierarkis.</li>
<li>Gunakan struktur yang konsisten (hierarki, urutan argumen, aksi-objek).</li>
<li>Dukung aturan penyingkatan yang konsisten.</li>
<li>Berikan kemampuan membuat makro bagi frequent users.</li>
<li>Pertimbangkan menu perintah pada tampilan berkecepatan tinggi.</li>
<li>Batasi jumlah perintah dan cara melakukan tugas.</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Teknologi </category>
            
            <category> Interaksi Manusia dan Komputer </category>
            
        </categories>
        
        
        <tags>
            
            <tag> ui-ux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Menu]]></title>
      <url>http://ciazhar.github.io/2017/03/19/kuliah/imk/ui-ux_menu/</url>
      <content type="html"><![CDATA[<p><img src="/images/ui-ux/Ui-Ux.jpg" alt=""></p>
<h2 id="Pengertian-Menu"><a href="#Pengertian-Menu" class="headerlink" title="Pengertian Menu"></a>Pengertian Menu</h2><p>Menu adalah suatu penyajian petunjuk yang sudah di tentukan untuk memudahkan user.</p>
<h2 id="Tujuan-Menu"><a href="#Tujuan-Menu" class="headerlink" title="Tujuan Menu"></a>Tujuan Menu</h2><p>Memudahkan user dalam mengoperasikan suatu sistem yang mudah diingat dan dipahami.</p>
<h2 id="Kelebihan-Menu"><a href="#Kelebihan-Menu" class="headerlink" title="Kelebihan Menu"></a>Kelebihan Menu</h2><ul>
<li>Memudahkan bagi pengguna baru/tidak ahli</li>
<li>Memungkinkan explorasi (pengguna bisa melihat menu untuk perintah lainnya yang cocok)</li>
<li>Menginstruksikan pengambilan keputusan bagi pengguna</li>
<li>Adanya penanganan kesalahan yang mudah (tidak perlu di-parsed sepeti halnya command entry)</li>
<li>Pengguna tidak perlu mengingat item yang diinginkan</li>
</ul>
<h2 id="Kekurangan-Menu"><a href="#Kekurangan-Menu" class="headerlink" title="Kekurangan Menu"></a>Kekurangan Menu</h2><ul>
<li>Tidak cocok untuk tampilan grafis kecil</li>
<li>Cukup lambat bagi pengguna ahli/usser yang sering memakai sistem</li>
<li>Terlalu banyak menu menyebabkan overload informasi</li>
</ul>
<h2 id="Tipe-Tipe-Menu"><a href="#Tipe-Tipe-Menu" class="headerlink" title="Tipe Tipe Menu"></a>Tipe Tipe Menu</h2><p>Ada 2 macam tipe menu berdasarkan banyaknya sub menu pada suatu menu yaitu :</p>
<ul>
<li>Single Menu</li>
<li>Multiple Combination Menu</li>
</ul>
<h3 id="Single-Menu"><a href="#Single-Menu" class="headerlink" title="Single Menu"></a>Single Menu</h3><h5 id="Pengertian"><a href="#Pengertian" class="headerlink" title="Pengertian"></a>Pengertian</h5><p>Single menu adalah menu yang berdiri secara independen tidak mempengaruhi yang lainnya.</p>
<h5 id="Macam-macam"><a href="#Macam-macam" class="headerlink" title="Macam-macam"></a>Macam-macam</h5><h6 id="Binary-Menu"><a href="#Binary-Menu" class="headerlink" title="Binary Menu"></a>Binary Menu</h6><p><img src="/images/ui-ux/menu/binary-menu.png" alt=""><br>Menu yang terdiri dari dua pilihan.</p>
<h6 id="Multiple-Item"><a href="#Multiple-Item" class="headerlink" title="Multiple Item"></a>Multiple Item</h6><p><img src="/images/ui-ux/menu/multiple-item.png" alt=""><br>Single menu yang mempunyai pilihan lebih dari dua</p>
<h6 id="Multiple-Selection"><a href="#Multiple-Selection" class="headerlink" title="Multiple Selection"></a>Multiple Selection</h6><p><img src="/images/ui-ux/menu/multiple-selection.png" alt=""><br>Variasi dari single menu yang memungkinkan user untuk memilih lebih dari satu pilihan yang di berikan.</p>
<h6 id="Pull-Down-dan-Pop-Up"><a href="#Pull-Down-dan-Pop-Up" class="headerlink" title="Pull Down dan Pop Up"></a>Pull Down dan Pop Up</h6><p><img src="/images/ui-ux/menu/pull-down-dan-pop-up.png" alt=""><br>Pull Down biasanya tersedia pada bagian atas menu bar sedangkan Pop Up keluar dari respon terhadap aksi pengguna</p>
<h6 id="Scrolling"><a href="#Scrolling" class="headerlink" title="Scrolling"></a>Scrolling</h6><p><img src="/images/ui-ux/menu/scrolling.png" alt=""><br>Scrolling dan 2 dimensional menu yaitu menu dengan item list yang banyak sehingga beralasan untuk ditampilkan</p>
<h6 id="Alphasliders"><a href="#Alphasliders" class="headerlink" title="Alphasliders"></a>Alphasliders</h6><p><img src="/images/ui-ux/menu/alphasliders.png" alt=""><br>Alphasliders menggunakan multiple level granularity pada pergerakan slider-nya atau scroll box. Alphaslider bisa mendukung untuk penggunakan menu dengan jumlah item yang banyak.</p>
<h6 id="Embedded-Links"><a href="#Embedded-Links" class="headerlink" title="Embedded Links"></a>Embedded Links</h6><p><img src="/images/ui-ux/menu/embedded-links.png" alt=""><br>Merupakan menu dimana itemnya ditanamkan dalam bentuk teks dan grafik yang bisa ditekan atau dipilih</p>
<h6 id="Iconic-Menu"><a href="#Iconic-Menu" class="headerlink" title="Iconic Menu"></a>Iconic Menu</h6><p><img src="/images/ui-ux/menu/iconic-menu.png" alt=""><br>Toolbars, atau palletes menu merupakan menu yang menawarkan banyak aksi yang bisa dipilih oleh pengguna dengan menekan untuk menampilkan.</p>
<h3 id="Multiple-Combination-Menu"><a href="#Multiple-Combination-Menu" class="headerlink" title="Multiple Combination Menu"></a>Multiple Combination Menu</h3><h6 id="Tree-Structured-Menus"><a href="#Tree-Structured-Menus" class="headerlink" title="Tree Structured Menus"></a>Tree Structured Menus</h6><p><img src="/images/ui-ux/menu/tree-structured-menus.png" alt=""><br>Membagi menu-menu dalam berbagai kelompok sehingga user tidak bingung.</p>
<h6 id="Linear-Sequence"><a href="#Linear-Sequence" class="headerlink" title="Linear Sequence"></a>Linear Sequence</h6><p><img src="/images/ui-ux/menu/linier-sequence.png" alt=""><br>Berfungsi untuk memudahkan user membuat suatu pilihan yang kompleks dan berguna untuk novice user (pemula).</p>
<h6 id="Simultaneous-menus"><a href="#Simultaneous-menus" class="headerlink" title="Simultaneous menus"></a>Simultaneous menus</h6><p><img src="/images/ui-ux/menu/simultaneus-menu.png" alt=""><br>Memberikan semua pilihan yang mungkin secara bersamaan dan memperbolehkan user untuk memasukkan pilihan secara sembarang.</p>
<h6 id="Menu-Maps"><a href="#Menu-Maps" class="headerlink" title="Menu Maps"></a>Menu Maps</h6><p><img src="/images/ui-ux/menu/menu-maps.png" alt=""><br>Memperlihatkan semua menu yang ada. Berfungsi suntuk membantu user agar tidak bingung dengan menu yang ada.</p>
<h6 id="Cyclic-Network"><a href="#Cyclic-Network" class="headerlink" title="Cyclic Network"></a>Cyclic Network</h6><p><img src="/images/ui-ux/menu/cyclic-network-menu.png" alt=""><br>Tipe menu yang dapat bercabang-cabang dan dapat kembali ke menu utama atau menu sebelumnya</p>
<h6 id="Acyclic-Network"><a href="#Acyclic-Network" class="headerlink" title="Acyclic Network"></a>Acyclic Network</h6><p><img src="/images/ui-ux/menu/acyclic-network-menu.png" alt=""><br>Tipe menu yang dapat bercabang-cabang dan setiap menu dapat ditempu dengan beberapa cara namun tidak dapat kembali ke menu utama atau menu sebelumnya.</p>
<h2 id="Petunjuk-Pembuatan-Menu"><a href="#Petunjuk-Pembuatan-Menu" class="headerlink" title="Petunjuk Pembuatan Menu"></a>Petunjuk Pembuatan Menu</h2><p>Guidelines untuk menu :</p>
<ul>
<li>Organisasikan menu berdasarkan jenis pekerjaan</li>
<li>Lebih cenderung pada broad – shallow daripada narrow – deep</li>
<li>Perlihatkan posisi dengan grafik, angka, ataupun judul</li>
<li>Gunakan items sebagai judul untuk subtrees</li>
<li>Pengelompokkan item harus memiliki arti</li>
<li>Pembuatan urut – urutan item harus memiliki arti</li>
<li>Gunakan kalimat singkat (keyword)</li>
<li>Perhatikan konsistensi grammar, layout, dan terminologi</li>
<li>Sediakan shortcut</li>
<li>Perbolehkan user untuk langsung kembali ke menu sebelumnya dan main menu</li>
<li>Pertimbangkan online help, response time, display rate, dan ukuran layar</li>
</ul>
<p>Hal-hal Yang Harus Diperhatikan Dalam Menu Layout:</p>
<ul>
<li>Judul</li>
<li>Layout dan design(ukuran layar, display rate, character set dan teknik highlighting)</li>
<li>Konsistensi (judul, penempatan item, intruksi, pesan kesalahan dan laporan status)</li>
<li>Teknik (identasi, huruf besar/kecil,simbol,penanda posisi,cascading menu, magic lens)</li>
</ul>
<p>Pengaturan konten dapat dilakukan dengan memperhatikan hal-hal berikut:<br>● Mengelompokkan suatu pekerjaan yang sama kedalam satu kategori<br>● Membuat menu dengan berurutan, urutan bisa didasarkan pada waktu, nomor urutan dan lain-lain</p>
]]></content>
      
        <categories>
            
            <category> Teknologi </category>
            
            <category> Interaksi Manusia dan Komputer </category>
            
        </categories>
        
        
        <tags>
            
            <tag> ui-ux </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
